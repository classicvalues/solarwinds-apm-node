npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.5
added 4 packages from 7 contributors, removed 4 packages, updated 7 packages and audited 939 packages in 4.724s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:28.011Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:28.012Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:28.012Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:28.013Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:28.111Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:28.191Z appoptics:patching patched crypto 
2021-08-22T21:59:28.216Z appoptics:patching patched https 
2021-08-22T21:59:28.216Z appoptics:patching patched http 
2021-08-22T21:59:28.302Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:28.302Z appoptics:patching patched fs 
2021-08-22T21:59:28.324Z appoptics:patching probes.generic-pool "acquire()" not found
2021-08-22T21:59:28.324Z appoptics:patching patched generic-pool 2.1.1
2021-08-22T21:59:28.328Z appoptics:patching patched pg 4.5.5
2021-08-22T21:59:28.385Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (152ms)
  2 failing

  1) probes.pg 4.5.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 4.5.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.6
updated 2 packages and audited 939 packages in 5.108s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:34.768Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:34.769Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:34.769Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:34.770Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:34.819Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:34.851Z appoptics:patching patched crypto 
2021-08-22T21:59:34.870Z appoptics:patching patched https 
2021-08-22T21:59:34.870Z appoptics:patching patched http 
2021-08-22T21:59:34.902Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:34.902Z appoptics:patching patched fs 
2021-08-22T21:59:34.918Z appoptics:patching patched generic-pool 2.4.2
2021-08-22T21:59:34.919Z appoptics:patching patched pg 4.5.6
2021-08-22T21:59:34.941Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (161ms)
  2 failing

  1) probes.pg 4.5.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 4.5.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.7
added 1 package from 2 contributors, updated 1 package and audited 940 packages in 4.114s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:40.264Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:40.264Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:40.265Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:40.265Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:40.315Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:40.347Z appoptics:patching patched crypto 
2021-08-22T21:59:40.365Z appoptics:patching patched https 
2021-08-22T21:59:40.370Z appoptics:patching patched http 
2021-08-22T21:59:40.397Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:40.398Z appoptics:patching patched fs 
2021-08-22T21:59:40.413Z appoptics:patching patched generic-pool 2.4.2
2021-08-22T21:59:40.414Z appoptics:patching patched pg 4.5.7
2021-08-22T21:59:40.434Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.7
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (85ms)
  2 failing

  1) probes.pg 4.5.7
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 4.5.7
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.0.0
removed 1 package, updated 3 packages and audited 939 packages in 4.407s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:45.962Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:45.962Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:45.962Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:45.963Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:46.015Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:46.049Z appoptics:patching patched crypto 
2021-08-22T21:59:46.067Z appoptics:patching patched https 
2021-08-22T21:59:46.067Z appoptics:patching patched http 
2021-08-22T21:59:46.096Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:46.096Z appoptics:patching patched fs 
2021-08-22T21:59:46.113Z appoptics:patching patched generic-pool 2.4.2
2021-08-22T21:59:46.114Z appoptics:patching patched pg 5.0.0
2021-08-22T21:59:46.135Z appoptics:debug starting runtimeMetrics


  probes.pg 5.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (82ms)
  2 failing

  1) probes.pg 5.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 5.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.1.0
updated 2 packages and audited 939 packages in 4.001s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:51.268Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:51.269Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:51.269Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:51.270Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:51.318Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:51.352Z appoptics:patching patched crypto 
2021-08-22T21:59:51.369Z appoptics:patching patched https 
2021-08-22T21:59:51.369Z appoptics:patching patched http 
2021-08-22T21:59:51.404Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:51.404Z appoptics:patching patched fs 
2021-08-22T21:59:51.419Z appoptics:patching patched generic-pool 2.4.2
2021-08-22T21:59:51.420Z appoptics:patching patched pg 5.1.0
2021-08-22T21:59:51.442Z appoptics:debug starting runtimeMetrics


  probes.pg 5.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (84ms)
  2 failing

  1) probes.pg 5.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 5.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.2.1
added 4 packages from 16 contributors, removed 1 package, updated 1 package and audited 942 packages in 4.69s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:57.373Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:57.374Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:57.374Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:57.375Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:57.424Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:57.458Z appoptics:patching patched crypto 
2021-08-22T21:59:57.477Z appoptics:patching patched https 
2021-08-22T21:59:57.477Z appoptics:patching patched http 
2021-08-22T21:59:57.507Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:57.507Z appoptics:patching patched fs 
2021-08-22T21:59:57.524Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T21:59:57.525Z appoptics:patching patched pg 5.2.1
2021-08-22T21:59:57.546Z appoptics:debug starting runtimeMetrics


  probes.pg 5.2.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (87ms)
  2 failing

  1) probes.pg 5.2.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 5.2.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.0
removed 1 package, updated 1 package and audited 941 packages in 3.981s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:02.658Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:02.659Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:02.659Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:02.660Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:02.709Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:02.742Z appoptics:patching patched crypto 
2021-08-22T22:00:02.760Z appoptics:patching patched https 
2021-08-22T22:00:02.760Z appoptics:patching patched http 
2021-08-22T22:00:02.788Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:02.789Z appoptics:patching patched fs 
2021-08-22T22:00:02.805Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:02.806Z appoptics:patching patched pg 6.0.0
2021-08-22T22:00:02.827Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (96ms)
  2 failing

  1) probes.pg 6.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.1
updated 1 package and audited 941 packages in 3.743s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:07.807Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:07.808Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:07.808Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:07.809Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:07.873Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:07.915Z appoptics:patching patched crypto 
2021-08-22T22:00:07.934Z appoptics:patching patched https 
2021-08-22T22:00:07.934Z appoptics:patching patched http 
2021-08-22T22:00:07.980Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:07.981Z appoptics:patching patched fs 
2021-08-22T22:00:07.998Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:08.000Z appoptics:patching patched pg 6.0.1
2021-08-22T22:00:08.020Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (101ms)
  2 failing

  1) probes.pg 6.0.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.2
updated 1 package and audited 941 packages in 4.192s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:13.461Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:13.462Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:13.462Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:13.463Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:13.512Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:13.546Z appoptics:patching patched crypto 
2021-08-22T22:00:13.564Z appoptics:patching patched https 
2021-08-22T22:00:13.564Z appoptics:patching patched http 
2021-08-22T22:00:13.597Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:13.597Z appoptics:patching patched fs 
2021-08-22T22:00:13.613Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:13.615Z appoptics:patching patched pg 6.0.2
2021-08-22T22:00:13.636Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (86ms)
  2 failing

  1) probes.pg 6.0.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.3
updated 1 package and audited 941 packages in 4.168s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:18.932Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:18.932Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:18.932Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:18.933Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:18.984Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:19.018Z appoptics:patching patched crypto 
2021-08-22T22:00:19.037Z appoptics:patching patched https 
2021-08-22T22:00:19.037Z appoptics:patching patched http 
2021-08-22T22:00:19.071Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:19.072Z appoptics:patching patched fs 
2021-08-22T22:00:19.091Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:19.093Z appoptics:patching patched pg 6.0.3
2021-08-22T22:00:19.130Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (98ms)
  2 failing

  1) probes.pg 6.0.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.4
added 2 packages from 1 contributor, removed 2 packages, updated 2 packages and audited 941 packages in 4.61s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:24.956Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:24.956Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:24.956Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:24.957Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:25.007Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:25.041Z appoptics:patching patched crypto 
2021-08-22T22:00:25.059Z appoptics:patching patched https 
2021-08-22T22:00:25.059Z appoptics:patching patched http 
2021-08-22T22:00:25.090Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:25.091Z appoptics:patching patched fs 
2021-08-22T22:00:25.114Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:25.115Z appoptics:patching patched pg 6.0.4
2021-08-22T22:00:25.136Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (86ms)
  2 failing

  1) probes.pg 6.0.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.5
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 3.775s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:30.028Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:30.028Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:30.028Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:30.029Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:30.080Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:30.113Z appoptics:patching patched crypto 
2021-08-22T22:00:30.131Z appoptics:patching patched https 
2021-08-22T22:00:30.132Z appoptics:patching patched http 
2021-08-22T22:00:30.174Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:30.174Z appoptics:patching patched fs 
2021-08-22T22:00:30.196Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:30.198Z appoptics:patching patched pg 6.0.5
2021-08-22T22:00:30.219Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (100ms)
  2 failing

  1) probes.pg 6.0.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.0
removed 1 package, updated 1 package and audited 941 packages in 4.932s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:36.338Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:36.339Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:36.339Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:36.339Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:36.390Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:36.422Z appoptics:patching patched crypto 
2021-08-22T22:00:36.440Z appoptics:patching patched https 
2021-08-22T22:00:36.444Z appoptics:patching patched http 
2021-08-22T22:00:36.473Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:36.474Z appoptics:patching patched fs 
2021-08-22T22:00:36.496Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:36.498Z appoptics:patching patched pg 6.1.0
2021-08-22T22:00:36.518Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (86ms)
  2 failing

  1) probes.pg 6.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.1
updated 1 package and audited 941 packages in 3.928s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:41.595Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:41.596Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:41.596Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:41.597Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:41.650Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:41.685Z appoptics:patching patched crypto 
2021-08-22T22:00:41.703Z appoptics:patching patched https 
2021-08-22T22:00:41.703Z appoptics:patching patched http 
2021-08-22T22:00:41.732Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:41.733Z appoptics:patching patched fs 
2021-08-22T22:00:41.755Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:41.757Z appoptics:patching patched pg 6.1.1
2021-08-22T22:00:41.777Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (85ms)
  2 failing

  1) probes.pg 6.1.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.2
updated 1 package and audited 941 packages in 4.603s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:47.511Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:47.512Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:47.512Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:47.513Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:47.562Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:47.595Z appoptics:patching patched crypto 
2021-08-22T22:00:47.613Z appoptics:patching patched https 
2021-08-22T22:00:47.613Z appoptics:patching patched http 
2021-08-22T22:00:47.644Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:47.644Z appoptics:patching patched fs 
2021-08-22T22:00:47.667Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:47.668Z appoptics:patching patched pg 6.1.2
2021-08-22T22:00:47.689Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (85ms)
  2 failing

  1) probes.pg 6.1.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.3
updated 1 package and audited 941 packages in 3.583s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:52.397Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:52.397Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:52.397Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:52.398Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:52.448Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:52.482Z appoptics:patching patched crypto 
2021-08-22T22:00:52.499Z appoptics:patching patched https 
2021-08-22T22:00:52.500Z appoptics:patching patched http 
2021-08-22T22:00:52.530Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:52.530Z appoptics:patching patched fs 
2021-08-22T22:00:52.552Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:52.554Z appoptics:patching patched pg 6.1.3
2021-08-22T22:00:52.575Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (104ms)
  2 failing

  1) probes.pg 6.1.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.4
updated 1 package and audited 941 packages in 4.138s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:58.100Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:58.101Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:58.101Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:58.102Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:58.152Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:58.204Z appoptics:patching patched crypto 
2021-08-22T22:00:58.223Z appoptics:patching patched https 
2021-08-22T22:00:58.224Z appoptics:patching patched http 
2021-08-22T22:00:58.272Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:58.272Z appoptics:patching patched fs 
2021-08-22T22:00:58.308Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:58.312Z appoptics:patching patched pg 6.1.4
2021-08-22T22:00:58.337Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (127ms)
  2 failing

  1) probes.pg 6.1.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.5
updated 1 package and audited 941 packages in 3.679s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:03.340Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:03.341Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:03.341Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:03.342Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:03.393Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:03.427Z appoptics:patching patched crypto 
2021-08-22T22:01:03.444Z appoptics:patching patched https 
2021-08-22T22:01:03.445Z appoptics:patching patched http 
2021-08-22T22:01:03.478Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:03.478Z appoptics:patching patched fs 
2021-08-22T22:01:03.501Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:03.502Z appoptics:patching patched pg 6.1.5
2021-08-22T22:01:03.523Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (86ms)
  2 failing

  1) probes.pg 6.1.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.6
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 4.055s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:08.709Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:08.710Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:08.710Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:08.711Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:08.776Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:08.819Z appoptics:patching patched crypto 
2021-08-22T22:01:08.854Z appoptics:patching patched https 
2021-08-22T22:01:08.854Z appoptics:patching patched http 
2021-08-22T22:01:08.888Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:08.889Z appoptics:patching patched fs 
2021-08-22T22:01:08.913Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:08.915Z appoptics:patching patched pg 6.1.6
2021-08-22T22:01:08.937Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (130ms)
  2 failing

  1) probes.pg 6.1.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.2
removed 1 package, updated 2 packages and audited 941 packages in 4.068s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:14.308Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:14.308Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:14.308Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:14.309Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:14.360Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:14.393Z appoptics:patching patched crypto 
2021-08-22T22:01:14.411Z appoptics:patching patched https 
2021-08-22T22:01:14.411Z appoptics:patching patched http 
2021-08-22T22:01:14.443Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:14.444Z appoptics:patching patched fs 
2021-08-22T22:01:14.465Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:14.467Z appoptics:patching patched pg 6.2.2
2021-08-22T22:01:14.487Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (87ms)
  2 failing

  1) probes.pg 6.2.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.3
updated 1 package and audited 941 packages in 4.977s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:20.621Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:20.622Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:20.622Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:20.622Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:20.666Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:20.719Z appoptics:patching patched crypto 
2021-08-22T22:01:20.740Z appoptics:patching patched https 
2021-08-22T22:01:20.740Z appoptics:patching patched http 
2021-08-22T22:01:20.774Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:20.774Z appoptics:patching patched fs 
2021-08-22T22:01:20.803Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:20.804Z appoptics:patching patched pg 6.2.3
2021-08-22T22:01:20.826Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (107ms)
  2 failing

  1) probes.pg 6.2.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.4
updated 1 package and audited 941 packages in 4.105s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:26.161Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:26.162Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:26.162Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:26.163Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:26.212Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:26.246Z appoptics:patching patched crypto 
2021-08-22T22:01:26.263Z appoptics:patching patched https 
2021-08-22T22:01:26.264Z appoptics:patching patched http 
2021-08-22T22:01:26.298Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:26.298Z appoptics:patching patched fs 
2021-08-22T22:01:26.320Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:26.322Z appoptics:patching patched pg 6.2.4
2021-08-22T22:01:26.342Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (119ms)
  2 failing

  1) probes.pg 6.2.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.5
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 3.813s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:31.381Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:31.382Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:31.382Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:31.383Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:31.432Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:31.465Z appoptics:patching patched crypto 
2021-08-22T22:01:31.482Z appoptics:patching patched https 
2021-08-22T22:01:31.483Z appoptics:patching patched http 
2021-08-22T22:01:31.512Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:31.512Z appoptics:patching patched fs 
2021-08-22T22:01:31.536Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:31.537Z appoptics:patching patched pg 6.2.5
2021-08-22T22:01:31.558Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (84ms)
  2 failing

  1) probes.pg 6.2.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.0
removed 1 package, updated 1 package and audited 941 packages in 4.351s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:37.097Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:37.098Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:37.098Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:37.099Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:37.149Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:37.181Z appoptics:patching patched crypto 
2021-08-22T22:01:37.200Z appoptics:patching patched https 
2021-08-22T22:01:37.200Z appoptics:patching patched http 
2021-08-22T22:01:37.231Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:37.231Z appoptics:patching patched fs 
2021-08-22T22:01:37.254Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:37.256Z appoptics:patching patched pg 6.3.0
2021-08-22T22:01:37.276Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1019) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1019) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (89ms)
  2 failing

  1) probes.pg 6.3.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.3.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.1
updated 1 package and audited 941 packages in 4.288s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:42.736Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:42.737Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:42.737Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:42.738Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:42.788Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:42.820Z appoptics:patching patched crypto 
2021-08-22T22:01:42.838Z appoptics:patching patched https 
2021-08-22T22:01:42.838Z appoptics:patching patched http 
2021-08-22T22:01:42.871Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:42.872Z appoptics:patching patched fs 
2021-08-22T22:01:42.895Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:42.896Z appoptics:patching patched pg 6.3.1
2021-08-22T22:01:42.917Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1042) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1042) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (86ms)
  2 failing

  1) probes.pg 6.3.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.3.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.3
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 4.801s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:49.007Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:49.008Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:49.008Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:49.009Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:49.076Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:49.120Z appoptics:patching patched crypto 
2021-08-22T22:01:49.139Z appoptics:patching patched https 
2021-08-22T22:01:49.139Z appoptics:patching patched http 
2021-08-22T22:01:49.190Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:49.190Z appoptics:patching patched fs 
2021-08-22T22:01:49.213Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:49.214Z appoptics:patching patched pg 6.3.3
2021-08-22T22:01:49.235Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1065) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1065) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (84ms)
  2 failing

  1) probes.pg 6.3.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.3.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.0
removed 1 package, updated 1 package and audited 941 packages in 3.671s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:54.062Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:54.062Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:54.062Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:54.063Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:54.113Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:54.147Z appoptics:patching patched crypto 
2021-08-22T22:01:54.164Z appoptics:patching patched https 
2021-08-22T22:01:54.164Z appoptics:patching patched http 
2021-08-22T22:01:54.198Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:54.198Z appoptics:patching patched fs 
2021-08-22T22:01:54.220Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:54.222Z appoptics:patching patched pg 6.4.0
2021-08-22T22:01:54.242Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1088) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1088) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (85ms)
  2 failing

  1) probes.pg 6.4.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.4.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.1
updated 1 package and audited 941 packages in 3.994s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:59.600Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:59.600Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:59.600Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:59.602Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:59.656Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:59.690Z appoptics:patching patched crypto 
2021-08-22T22:01:59.711Z appoptics:patching patched https 
2021-08-22T22:01:59.711Z appoptics:patching patched http 
2021-08-22T22:01:59.764Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:59.764Z appoptics:patching patched fs 
2021-08-22T22:01:59.788Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:59.789Z appoptics:patching patched pg 6.4.1
2021-08-22T22:01:59.812Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1111) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1111) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (103ms)
  2 failing

  1) probes.pg 6.4.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.4.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.2
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 3.731s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:04.734Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:04.735Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:04.735Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:04.736Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:04.785Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:04.819Z appoptics:patching patched crypto 
2021-08-22T22:02:04.837Z appoptics:patching patched https 
2021-08-22T22:02:04.837Z appoptics:patching patched http 
2021-08-22T22:02:04.869Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:04.870Z appoptics:patching patched fs 
2021-08-22T22:02:04.892Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:02:04.894Z appoptics:patching patched pg 6.4.2
2021-08-22T22:02:04.914Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1134) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1134) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (86ms)
  2 failing

  1) probes.pg 6.4.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.4.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.5.0
removed 3 packages, updated 3 packages and audited 939 packages in 3.794s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:09.948Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:09.949Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:09.949Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:09.950Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:10.012Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:10.055Z appoptics:patching patched crypto 
2021-08-22T22:02:10.090Z appoptics:patching patched https 
2021-08-22T22:02:10.091Z appoptics:patching patched http 
2021-08-22T22:02:10.130Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:10.130Z appoptics:patching patched fs 
2021-08-22T22:02:10.146Z appoptics:patching patched pg 7.5.0
2021-08-22T22:02:10.170Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.0
updated 1 package and audited 939 packages in 3.764s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:20.558Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:20.559Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:20.559Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:20.560Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:20.618Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:20.653Z appoptics:patching patched crypto 
2021-08-22T22:02:20.675Z appoptics:patching patched https 
2021-08-22T22:02:20.676Z appoptics:patching patched http 
2021-08-22T22:02:20.705Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:20.705Z appoptics:patching patched fs 
2021-08-22T22:02:20.721Z appoptics:patching patched pg 7.6.0
2021-08-22T22:02:20.744Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.1
updated 2 packages and audited 939 packages in 3.811s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:30.982Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:30.982Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:30.982Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:30.983Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:31.035Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:31.069Z appoptics:patching patched crypto 
2021-08-22T22:02:31.088Z appoptics:patching patched https 
2021-08-22T22:02:31.088Z appoptics:patching patched http 
2021-08-22T22:02:31.124Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:31.124Z appoptics:patching patched fs 
2021-08-22T22:02:31.140Z appoptics:patching patched pg 7.6.1
2021-08-22T22:02:31.162Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.0
updated 1 package and audited 939 packages in 3.701s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:41.289Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:41.289Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:41.289Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:41.290Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:41.339Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:41.372Z appoptics:patching patched crypto 
2021-08-22T22:02:41.390Z appoptics:patching patched https 
2021-08-22T22:02:41.390Z appoptics:patching patched http 
2021-08-22T22:02:41.424Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:41.425Z appoptics:patching patched fs 
2021-08-22T22:02:41.440Z appoptics:patching patched pg 7.7.0
2021-08-22T22:02:41.465Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.1
updated 1 package and audited 939 packages in 3.874s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:51.744Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:51.745Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:51.745Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:51.746Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:51.797Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:51.831Z appoptics:patching patched crypto 
2021-08-22T22:02:51.849Z appoptics:patching patched https 
2021-08-22T22:02:51.859Z appoptics:patching patched http 
2021-08-22T22:02:51.884Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:51.885Z appoptics:patching patched fs 
2021-08-22T22:02:51.900Z appoptics:patching patched pg 7.7.1
2021-08-22T22:02:51.923Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.0
updated 3 packages and audited 939 packages in 4.207s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:02.559Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:02.559Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:02.559Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:02.560Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:02.613Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:02.648Z appoptics:patching patched crypto 
2021-08-22T22:03:02.669Z appoptics:patching patched https 
2021-08-22T22:03:02.670Z appoptics:patching patched http 
2021-08-22T22:03:02.702Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:02.703Z appoptics:patching patched fs 
2021-08-22T22:03:02.722Z appoptics:patching patched pg 7.8.0
2021-08-22T22:03:02.745Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.1
updated 2 packages and audited 939 packages in 3.692s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:12.841Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:12.842Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:12.842Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:12.843Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:12.892Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:12.927Z appoptics:patching patched crypto 
2021-08-22T22:03:12.944Z appoptics:patching patched https 
2021-08-22T22:03:12.945Z appoptics:patching patched http 
2021-08-22T22:03:12.980Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:12.980Z appoptics:patching patched fs 
2021-08-22T22:03:12.996Z appoptics:patching patched pg 7.8.1
2021-08-22T22:03:13.022Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.2
updated 1 package and audited 939 packages in 3.981s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:23.489Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:23.490Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:23.490Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:23.491Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:23.542Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:23.576Z appoptics:patching patched crypto 
2021-08-22T22:03:23.594Z appoptics:patching patched https 
2021-08-22T22:03:23.594Z appoptics:patching patched http 
2021-08-22T22:03:23.634Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:23.634Z appoptics:patching patched fs 
2021-08-22T22:03:23.650Z appoptics:patching patched pg 7.8.2
2021-08-22T22:03:23.673Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.9.0
updated 1 package and audited 939 packages in 4.417s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:34.511Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:34.512Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:34.512Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:34.513Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:34.562Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:34.597Z appoptics:patching patched crypto 
2021-08-22T22:03:34.616Z appoptics:patching patched https 
2021-08-22T22:03:34.616Z appoptics:patching patched http 
2021-08-22T22:03:34.657Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:34.658Z appoptics:patching patched fs 
2021-08-22T22:03:34.673Z appoptics:patching patched pg 7.9.0
2021-08-22T22:03:34.694Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.9.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.9.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.10.0
updated 1 package and audited 939 packages in 4.182s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:45.336Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:45.337Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:45.337Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:45.338Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:45.387Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:45.419Z appoptics:patching patched crypto 
2021-08-22T22:03:45.448Z appoptics:patching patched https 
2021-08-22T22:03:45.448Z appoptics:patching patched http 
2021-08-22T22:03:45.477Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:45.477Z appoptics:patching patched fs 
2021-08-22T22:03:45.492Z appoptics:patching patched pg 7.10.0
2021-08-22T22:03:45.514Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.10.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.10.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.11.0
updated 1 package and audited 939 packages in 4.523s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:56.637Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:56.637Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:56.637Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:56.638Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:56.695Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:56.730Z appoptics:patching patched crypto 
2021-08-22T22:03:56.748Z appoptics:patching patched https 
2021-08-22T22:03:56.749Z appoptics:patching patched http 
2021-08-22T22:03:56.798Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:56.798Z appoptics:patching patched fs 
2021-08-22T22:03:56.813Z appoptics:patching patched pg 7.11.0
2021-08-22T22:03:56.837Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.11.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.11.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.0
updated 1 package and audited 939 packages in 3.683s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:07.124Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:07.125Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:07.125Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:07.126Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:07.207Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:07.246Z appoptics:patching patched crypto 
2021-08-22T22:04:07.265Z appoptics:patching patched https 
2021-08-22T22:04:07.265Z appoptics:patching patched http 
2021-08-22T22:04:07.332Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:07.332Z appoptics:patching patched fs 
2021-08-22T22:04:07.368Z appoptics:patching patched pg 7.12.0
2021-08-22T22:04:07.400Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.1
updated 2 packages and audited 939 packages in 4.038s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:18.064Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:18.064Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:18.064Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:18.065Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:18.112Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:18.148Z appoptics:patching patched crypto 
2021-08-22T22:04:18.167Z appoptics:patching patched https 
2021-08-22T22:04:18.167Z appoptics:patching patched http 
2021-08-22T22:04:18.205Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:18.206Z appoptics:patching patched fs 
2021-08-22T22:04:18.221Z appoptics:patching patched pg 7.12.1
2021-08-22T22:04:18.244Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (245ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (224ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.13.0
updated 1 package and audited 939 packages in 3.742s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:28.450Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:28.451Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:28.451Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:28.452Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:28.501Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:28.535Z appoptics:patching patched crypto 
2021-08-22T22:04:28.552Z appoptics:patching patched https 
2021-08-22T22:04:28.552Z appoptics:patching patched http 
2021-08-22T22:04:28.587Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:28.587Z appoptics:patching patched fs 
2021-08-22T22:04:28.602Z appoptics:patching patched pg 7.13.0
2021-08-22T22:04:28.625Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.13.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.13.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.14.0
updated 1 package and audited 939 packages in 4.204s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:39.367Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:39.368Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:39.368Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:39.368Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:39.421Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:39.456Z appoptics:patching patched crypto 
2021-08-22T22:04:39.473Z appoptics:patching patched https 
2021-08-22T22:04:39.474Z appoptics:patching patched http 
2021-08-22T22:04:39.509Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:39.509Z appoptics:patching patched fs 
2021-08-22T22:04:39.524Z appoptics:patching patched pg 7.14.0
2021-08-22T22:04:39.547Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.14.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.14.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (983ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (234ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (243ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.0
updated 1 package and audited 939 packages in 3.812s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:49.791Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:49.792Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:49.792Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:49.792Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:49.844Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:49.878Z appoptics:patching patched crypto 
2021-08-22T22:04:49.902Z appoptics:patching patched https 
2021-08-22T22:04:49.902Z appoptics:patching patched http 
2021-08-22T22:04:49.935Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:49.935Z appoptics:patching patched fs 
2021-08-22T22:04:49.951Z appoptics:patching patched pg 7.15.0
2021-08-22T22:04:49.975Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (988ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.1
updated 1 package and audited 939 packages in 4.157s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:00.558Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:00.559Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:00.559Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:00.560Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:00.613Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:00.645Z appoptics:patching patched crypto 
2021-08-22T22:05:00.663Z appoptics:patching patched https 
2021-08-22T22:05:00.663Z appoptics:patching patched http 
2021-08-22T22:05:00.705Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:00.706Z appoptics:patching patched fs 
2021-08-22T22:05:00.722Z appoptics:patching patched pg 7.15.1
2021-08-22T22:05:00.745Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (997ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.2
updated 1 package and audited 939 packages in 3.668s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:10.886Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:10.886Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:10.886Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:10.887Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:10.938Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:10.976Z appoptics:patching patched crypto 
2021-08-22T22:05:11.001Z appoptics:patching patched https 
2021-08-22T22:05:11.001Z appoptics:patching patched http 
2021-08-22T22:05:11.036Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:11.037Z appoptics:patching patched fs 
2021-08-22T22:05:11.053Z appoptics:patching patched pg 7.15.2
2021-08-22T22:05:11.077Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (225ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.0
added 1 package, updated 1 package and audited 940 packages in 4.179s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:21.704Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:21.704Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:21.704Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:21.705Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:21.756Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:21.794Z appoptics:patching patched crypto 
2021-08-22T22:05:21.812Z appoptics:patching patched https 
2021-08-22T22:05:21.812Z appoptics:patching patched http 
2021-08-22T22:05:21.853Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:21.853Z appoptics:patching patched fs 
2021-08-22T22:05:21.869Z appoptics:patching patched pg 7.16.0
2021-08-22T22:05:21.892Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.1
updated 1 package and audited 940 packages in 4.296s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:32.827Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:32.828Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:32.828Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:32.829Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:32.882Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:32.925Z appoptics:patching patched crypto 
2021-08-22T22:05:32.943Z appoptics:patching patched https 
2021-08-22T22:05:32.944Z appoptics:patching patched http 
2021-08-22T22:05:32.995Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:32.995Z appoptics:patching patched fs 
2021-08-22T22:05:33.015Z appoptics:patching patched pg 7.16.1
2021-08-22T22:05:33.038Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (231ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (219ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.0
updated 1 package and audited 940 packages in 4.084s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:43.728Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:43.728Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:43.728Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:43.729Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:43.792Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:43.828Z appoptics:patching patched crypto 
2021-08-22T22:05:43.845Z appoptics:patching patched https 
2021-08-22T22:05:43.845Z appoptics:patching patched http 
2021-08-22T22:05:43.895Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:43.895Z appoptics:patching patched fs 
2021-08-22T22:05:43.920Z appoptics:patching patched pg 7.17.0
2021-08-22T22:05:43.952Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (997ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (261ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.1
updated 1 package and audited 940 packages in 4.359s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:54.948Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:54.948Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:54.948Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:54.949Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:55.015Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:55.057Z appoptics:patching patched crypto 
2021-08-22T22:05:55.076Z appoptics:patching patched https 
2021-08-22T22:05:55.076Z appoptics:patching patched http 
2021-08-22T22:05:55.134Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:55.134Z appoptics:patching patched fs 
2021-08-22T22:05:55.152Z appoptics:patching patched pg 7.17.1
2021-08-22T22:05:55.175Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.0
updated 1 package and audited 940 packages in 4.879s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:06.522Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:06.523Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:06.523Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:06.524Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:06.577Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:06.611Z appoptics:patching patched crypto 
2021-08-22T22:06:06.628Z appoptics:patching patched https 
2021-08-22T22:06:06.629Z appoptics:patching patched http 
2021-08-22T22:06:06.664Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:06.664Z appoptics:patching patched fs 
2021-08-22T22:06:06.680Z appoptics:patching patched pg 7.18.0
2021-08-22T22:06:06.704Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.1
updated 1 package and audited 940 packages in 4.509s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:17.734Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:17.735Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:17.735Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:17.735Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:17.788Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:17.822Z appoptics:patching patched crypto 
2021-08-22T22:06:17.840Z appoptics:patching patched https 
2021-08-22T22:06:17.840Z appoptics:patching patched http 
2021-08-22T22:06:17.877Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:17.878Z appoptics:patching patched fs 
2021-08-22T22:06:17.895Z appoptics:patching patched pg 7.18.1
2021-08-22T22:06:17.918Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1004ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.2
updated 1 package and audited 940 packages in 4.176s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:28.947Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:28.948Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:28.948Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:28.948Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:28.999Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:29.032Z appoptics:patching patched crypto 
2021-08-22T22:06:29.050Z appoptics:patching patched https 
2021-08-22T22:06:29.050Z appoptics:patching patched http 
2021-08-22T22:06:29.089Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:29.089Z appoptics:patching patched fs 
2021-08-22T22:06:29.105Z appoptics:patching patched pg 7.18.2
2021-08-22T22:06:29.128Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.0
updated 2 packages and audited 940 packages in 3.734s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:39.546Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:39.547Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:39.547Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:39.548Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:39.614Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:39.659Z appoptics:patching patched crypto 
2021-08-22T22:06:39.678Z appoptics:patching patched https 
2021-08-22T22:06:39.678Z appoptics:patching patched http 
2021-08-22T22:06:39.734Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:39.735Z appoptics:patching patched fs 
2021-08-22T22:06:39.752Z appoptics:patching patched pg 8.0.0
2021-08-22T22:06:39.775Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.1
added 1 package, removed 1 package, updated 1 package and audited 940 packages in 4.318s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:50.728Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:50.729Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:50.729Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:50.730Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:50.780Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:50.812Z appoptics:patching patched crypto 
2021-08-22T22:06:50.831Z appoptics:patching patched https 
2021-08-22T22:06:50.840Z appoptics:patching patched http 
2021-08-22T22:06:50.868Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:50.869Z appoptics:patching patched fs 
2021-08-22T22:06:50.884Z appoptics:patching patched pg 8.0.1
2021-08-22T22:06:50.914Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.2
updated 1 package and audited 940 packages in 3.744s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:01.260Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:01.261Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:01.261Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:01.262Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:01.327Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:01.370Z appoptics:patching patched crypto 
2021-08-22T22:07:01.389Z appoptics:patching patched https 
2021-08-22T22:07:01.389Z appoptics:patching patched http 
2021-08-22T22:07:01.446Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:01.446Z appoptics:patching patched fs 
2021-08-22T22:07:01.462Z appoptics:patching patched pg 8.0.2
2021-08-22T22:07:01.486Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (238ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (232ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.3
updated 1 package and audited 940 packages in 3.799s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:11.786Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:11.787Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:11.787Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:11.787Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:11.854Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:11.897Z appoptics:patching patched crypto 
2021-08-22T22:07:11.915Z appoptics:patching patched https 
2021-08-22T22:07:11.915Z appoptics:patching patched http 
2021-08-22T22:07:11.957Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:11.957Z appoptics:patching patched fs 
2021-08-22T22:07:11.974Z appoptics:patching patched pg 8.0.3
2021-08-22T22:07:11.998Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (245ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (231ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.1.0
updated 2 packages and audited 940 packages in 4.228s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:22.811Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:22.812Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:22.812Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:22.812Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:22.875Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:22.917Z appoptics:patching patched crypto 
2021-08-22T22:07:22.936Z appoptics:patching patched https 
2021-08-22T22:07:22.936Z appoptics:patching patched http 
2021-08-22T22:07:22.994Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:22.995Z appoptics:patching patched fs 
2021-08-22T22:07:23.012Z appoptics:patching patched pg 8.1.0
2021-08-22T22:07:23.036Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.1.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.1.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.0
updated 1 package and audited 940 packages in 3.783s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:33.308Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:33.309Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:33.309Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:33.310Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:33.360Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:33.405Z appoptics:patching patched crypto 
2021-08-22T22:07:33.425Z appoptics:patching patched https 
2021-08-22T22:07:33.426Z appoptics:patching patched http 
2021-08-22T22:07:33.484Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:33.484Z appoptics:patching patched fs 
2021-08-22T22:07:33.503Z appoptics:patching patched pg 8.2.0
2021-08-22T22:07:33.527Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (245ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.1
updated 1 package and audited 940 packages in 3.667s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:43.662Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:43.663Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:43.663Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:43.664Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:43.712Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:43.745Z appoptics:patching patched crypto 
2021-08-22T22:07:43.774Z appoptics:patching patched https 
2021-08-22T22:07:43.774Z appoptics:patching patched http 
2021-08-22T22:07:43.805Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:43.805Z appoptics:patching patched fs 
2021-08-22T22:07:43.823Z appoptics:patching patched pg 8.2.1
2021-08-22T22:07:43.846Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (252ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.2
updated 1 package and audited 940 packages in 3.741s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:53.986Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:53.987Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:53.987Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:53.988Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:54.034Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:54.070Z appoptics:patching patched crypto 
2021-08-22T22:07:54.089Z appoptics:patching patched https 
2021-08-22T22:07:54.089Z appoptics:patching patched http 
2021-08-22T22:07:54.122Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:54.123Z appoptics:patching patched fs 
2021-08-22T22:07:54.140Z appoptics:patching patched pg 8.2.2
2021-08-22T22:07:54.163Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (258ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (262ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.0
updated 1 package and audited 940 packages in 3.739s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:04.483Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:04.484Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:04.484Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:04.485Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:04.535Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:04.569Z appoptics:patching patched crypto 
2021-08-22T22:08:04.587Z appoptics:patching patched https 
2021-08-22T22:08:04.587Z appoptics:patching patched http 
2021-08-22T22:08:04.630Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:04.630Z appoptics:patching patched fs 
2021-08-22T22:08:04.648Z appoptics:patching patched pg 8.3.0
2021-08-22T22:08:04.670Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (997ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.2
updated 1 package and audited 940 packages in 4.263s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:15.402Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:15.403Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:15.403Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:15.404Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:15.453Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:15.486Z appoptics:patching patched crypto 
2021-08-22T22:08:15.508Z appoptics:patching patched https 
2021-08-22T22:08:15.508Z appoptics:patching patched http 
2021-08-22T22:08:15.540Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:15.541Z appoptics:patching patched fs 
2021-08-22T22:08:15.558Z appoptics:patching patched pg 8.3.2
2021-08-22T22:08:15.581Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.3
updated 1 package and audited 940 packages in 4.533s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:26.661Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:26.662Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:26.662Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:26.663Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:26.729Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:26.772Z appoptics:patching patched crypto 
2021-08-22T22:08:26.792Z appoptics:patching patched https 
2021-08-22T22:08:26.792Z appoptics:patching patched http 
2021-08-22T22:08:26.850Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:26.850Z appoptics:patching patched fs 
2021-08-22T22:08:26.869Z appoptics:patching patched pg 8.3.3
2021-08-22T22:08:26.892Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.0
removed 1 package, updated 1 package and audited 939 packages in 4.169s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:37.610Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:37.610Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:37.610Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:37.611Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:37.684Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:37.740Z appoptics:patching patched crypto 
2021-08-22T22:08:37.776Z appoptics:patching patched https 
2021-08-22T22:08:37.776Z appoptics:patching patched http 
2021-08-22T22:08:37.833Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:37.834Z appoptics:patching patched fs 
2021-08-22T22:08:37.859Z appoptics:patching patched pg 8.4.0
2021-08-22T22:08:37.889Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.1
updated 1 package and audited 939 packages in 4.021s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:48.772Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:48.773Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:48.773Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:48.774Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:48.856Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:48.901Z appoptics:patching patched crypto 
2021-08-22T22:08:48.921Z appoptics:patching patched https 
2021-08-22T22:08:48.921Z appoptics:patching patched http 
2021-08-22T22:08:48.982Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:48.983Z appoptics:patching patched fs 
2021-08-22T22:08:49.000Z appoptics:patching patched pg 8.4.1
2021-08-22T22:08:49.022Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (38ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (259ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.2
updated 1 package and audited 939 packages in 3.632s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:59.216Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:59.217Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:59.217Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:59.218Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:59.284Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:59.327Z appoptics:patching patched crypto 
2021-08-22T22:08:59.346Z appoptics:patching patched https 
2021-08-22T22:08:59.346Z appoptics:patching patched http 
2021-08-22T22:08:59.438Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:59.442Z appoptics:patching patched fs 
2021-08-22T22:08:59.472Z appoptics:patching patched pg 8.4.2
2021-08-22T22:08:59.508Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.0
updated 1 package and audited 939 packages in 3.602s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:09.816Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:09.817Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:09.817Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:09.818Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:09.868Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:09.901Z appoptics:patching patched crypto 
2021-08-22T22:09:09.919Z appoptics:patching patched https 
2021-08-22T22:09:09.919Z appoptics:patching patched http 
2021-08-22T22:09:09.955Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:09.956Z appoptics:patching patched fs 
2021-08-22T22:09:09.974Z appoptics:patching patched pg 8.5.0
2021-08-22T22:09:09.995Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.1
updated 1 package and audited 939 packages in 3.637s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:20.076Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:20.076Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:20.076Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:20.077Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:20.123Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:20.160Z appoptics:patching patched crypto 
2021-08-22T22:09:20.179Z appoptics:patching patched https 
2021-08-22T22:09:20.180Z appoptics:patching patched http 
2021-08-22T22:09:20.213Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:20.213Z appoptics:patching patched fs 
2021-08-22T22:09:20.230Z appoptics:patching patched pg 8.5.1
2021-08-22T22:09:20.251Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.6.0
updated 1 package and audited 939 packages in 3.647s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:30.334Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:30.335Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:30.335Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:30.336Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:30.382Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:30.416Z appoptics:patching patched crypto 
2021-08-22T22:09:30.434Z appoptics:patching patched https 
2021-08-22T22:09:30.434Z appoptics:patching patched http 
2021-08-22T22:09:30.488Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:30.489Z appoptics:patching patched fs 
2021-08-22T22:09:30.507Z appoptics:patching patched pg 8.6.0
2021-08-22T22:09:30.527Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.0
updated 1 package and audited 939 packages in 3.696s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:40.654Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:40.655Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:40.655Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:40.656Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:40.707Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:40.741Z appoptics:patching patched crypto 
2021-08-22T22:09:40.759Z appoptics:patching patched https 
2021-08-22T22:09:40.760Z appoptics:patching patched http 
2021-08-22T22:09:40.795Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:40.796Z appoptics:patching patched fs 
2021-08-22T22:09:40.814Z appoptics:patching patched pg 8.7.0
2021-08-22T22:09:40.834Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 939 packages in 3.633s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:50.855Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:50.855Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:50.855Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:50.856Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:50.906Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:50.939Z appoptics:patching patched crypto 
2021-08-22T22:09:50.961Z appoptics:patching patched https 
2021-08-22T22:09:50.962Z appoptics:patching patched http 
2021-08-22T22:09:50.996Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:50.996Z appoptics:patching patched fs 
2021-08-22T22:09:51.014Z appoptics:patching patched pg 8.7.1
2021-08-22T22:09:51.035Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (258ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 939 packages in 4.425s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
