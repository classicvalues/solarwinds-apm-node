npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.5
added 4 packages from 7 contributors, removed 4 packages, updated 7 packages and audited 1098 packages in 7.303s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:18:59.539Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:18:59.540Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:18:59.540Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:18:59.541Z appoptics:debug using context provider: ace-context
2021-09-23T17:18:59.604Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:18:59.663Z appoptics:patching patched crypto 
2021-09-23T17:18:59.716Z appoptics:patching patched https 
2021-09-23T17:18:59.716Z appoptics:patching patched http 
2021-09-23T17:18:59.747Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:18:59.747Z appoptics:patching patched fs 
2021-09-23T17:18:59.771Z appoptics:patching probes.generic-pool "acquire()" not found
2021-09-23T17:18:59.771Z appoptics:patching patched generic-pool 2.1.1
2021-09-23T17:18:59.773Z appoptics:patching patched pg 4.5.5
2021-09-23T17:18:59.813Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (160ms)
  2 failing

  1) probes.pg 4.5.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 4.5.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.6
updated 2 packages and audited 1098 packages in 6.069s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:19:07.673Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:19:07.675Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:19:07.675Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:19:07.676Z appoptics:debug using context provider: ace-context
2021-09-23T17:19:07.736Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:19:07.788Z appoptics:patching patched crypto 
2021-09-23T17:19:07.820Z appoptics:patching patched https 
2021-09-23T17:19:07.820Z appoptics:patching patched http 
2021-09-23T17:19:07.848Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:19:07.849Z appoptics:patching patched fs 
2021-09-23T17:19:07.870Z appoptics:patching patched generic-pool 2.4.2
2021-09-23T17:19:07.872Z appoptics:patching patched pg 4.5.6
2021-09-23T17:19:07.902Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries (55ms)
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (192ms)
  2 failing

  1) probes.pg 4.5.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 4.5.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.7
added 1 package from 2 contributors, updated 1 package and audited 1099 packages in 7.071s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:19:16.852Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:19:16.854Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:19:16.854Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:19:16.855Z appoptics:debug using context provider: ace-context
2021-09-23T17:19:16.909Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:19:16.961Z appoptics:patching patched crypto 
2021-09-23T17:19:16.991Z appoptics:patching patched https 
2021-09-23T17:19:16.991Z appoptics:patching patched http 
2021-09-23T17:19:17.019Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:19:17.020Z appoptics:patching patched fs 
2021-09-23T17:19:17.042Z appoptics:patching patched generic-pool 2.4.2
2021-09-23T17:19:17.044Z appoptics:patching patched pg 4.5.7
2021-09-23T17:19:17.073Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.7
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (106ms)
  2 failing

  1) probes.pg 4.5.7
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 4.5.7
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.0.0
removed 1 package, updated 3 packages and audited 1098 packages in 7.404s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:19:26.124Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:19:26.125Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:19:26.125Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:19:26.126Z appoptics:debug using context provider: ace-context
2021-09-23T17:19:26.185Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:19:26.238Z appoptics:patching patched crypto 
2021-09-23T17:19:26.268Z appoptics:patching patched https 
2021-09-23T17:19:26.269Z appoptics:patching patched http 
2021-09-23T17:19:26.298Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:19:26.299Z appoptics:patching patched fs 
2021-09-23T17:19:26.320Z appoptics:patching patched generic-pool 2.4.2
2021-09-23T17:19:26.323Z appoptics:patching patched pg 5.0.0
2021-09-23T17:19:26.353Z appoptics:debug starting runtimeMetrics


  probes.pg 5.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (112ms)
  2 failing

  1) probes.pg 5.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 5.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.1.0
updated 2 packages and audited 1098 packages in 6.25s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:19:34.258Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:19:34.259Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:19:34.259Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:19:34.260Z appoptics:debug using context provider: ace-context
2021-09-23T17:19:34.324Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:19:34.385Z appoptics:patching patched crypto 
2021-09-23T17:19:34.421Z appoptics:patching patched https 
2021-09-23T17:19:34.421Z appoptics:patching patched http 
2021-09-23T17:19:34.452Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:19:34.453Z appoptics:patching patched fs 
2021-09-23T17:19:34.484Z appoptics:patching patched generic-pool 2.4.2
2021-09-23T17:19:34.487Z appoptics:patching patched pg 5.1.0
2021-09-23T17:19:34.518Z appoptics:debug starting runtimeMetrics


  probes.pg 5.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (121ms)
  2 failing

  1) probes.pg 5.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 5.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.2.1
added 4 packages from 16 contributors, removed 1 package, updated 1 package and audited 1101 packages in 6.44s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:19:42.994Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:19:42.996Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:19:42.996Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:19:42.997Z appoptics:debug using context provider: ace-context
2021-09-23T17:19:43.065Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:19:43.122Z appoptics:patching patched crypto 
2021-09-23T17:19:43.157Z appoptics:patching patched https 
2021-09-23T17:19:43.157Z appoptics:patching patched http 
2021-09-23T17:19:43.198Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:19:43.198Z appoptics:patching patched fs 
2021-09-23T17:19:43.222Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:19:43.226Z appoptics:patching patched pg 5.2.1
2021-09-23T17:19:43.267Z appoptics:debug starting runtimeMetrics


  probes.pg 5.2.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (117ms)
  2 failing

  1) probes.pg 5.2.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 5.2.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.0
removed 1 package, updated 1 package and audited 1100 packages in 6.174s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:19:51.187Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:19:51.189Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:19:51.189Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:19:51.190Z appoptics:debug using context provider: ace-context
2021-09-23T17:19:51.248Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:19:51.304Z appoptics:patching patched crypto 
2021-09-23T17:19:51.339Z appoptics:patching patched https 
2021-09-23T17:19:51.339Z appoptics:patching patched http 
2021-09-23T17:19:51.368Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:19:51.369Z appoptics:patching patched fs 
2021-09-23T17:19:51.394Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:19:51.396Z appoptics:patching patched pg 6.0.0
2021-09-23T17:19:51.425Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (159ms)
  2 failing

  1) probes.pg 6.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.1
updated 1 package and audited 1100 packages in 6.033s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:19:59.198Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:19:59.200Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:19:59.200Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:19:59.201Z appoptics:debug using context provider: ace-context
2021-09-23T17:19:59.256Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:19:59.310Z appoptics:patching patched crypto 
2021-09-23T17:19:59.341Z appoptics:patching patched https 
2021-09-23T17:19:59.341Z appoptics:patching patched http 
2021-09-23T17:19:59.369Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:19:59.370Z appoptics:patching patched fs 
2021-09-23T17:19:59.390Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:19:59.392Z appoptics:patching patched pg 6.0.1
2021-09-23T17:19:59.421Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (149ms)
  2 failing

  1) probes.pg 6.0.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.2
updated 1 package and audited 1100 packages in 6.835s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:20:08.120Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:20:08.122Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:20:08.122Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:20:08.123Z appoptics:debug using context provider: ace-context
2021-09-23T17:20:08.185Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:20:08.242Z appoptics:patching patched crypto 
2021-09-23T17:20:08.272Z appoptics:patching patched https 
2021-09-23T17:20:08.272Z appoptics:patching patched http 
2021-09-23T17:20:08.302Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:20:08.302Z appoptics:patching patched fs 
2021-09-23T17:20:08.334Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:20:08.336Z appoptics:patching patched pg 6.0.2
2021-09-23T17:20:08.390Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (102ms)
  2 failing

  1) probes.pg 6.0.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.3
updated 1 package and audited 1100 packages in 6.969s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:20:17.086Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:20:17.088Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:20:17.088Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:20:17.089Z appoptics:debug using context provider: ace-context
2021-09-23T17:20:17.141Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:20:17.192Z appoptics:patching patched crypto 
2021-09-23T17:20:17.225Z appoptics:patching patched https 
2021-09-23T17:20:17.225Z appoptics:patching patched http 
2021-09-23T17:20:17.251Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:20:17.252Z appoptics:patching patched fs 
2021-09-23T17:20:17.272Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:20:17.274Z appoptics:patching patched pg 6.0.3
2021-09-23T17:20:17.304Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (94ms)
  2 failing

  1) probes.pg 6.0.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.4
added 2 packages from 1 contributor, removed 2 packages, updated 2 packages and audited 1100 packages in 6.157s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:20:25.161Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:20:25.165Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:20:25.165Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:20:25.168Z appoptics:debug using context provider: ace-context
2021-09-23T17:20:25.262Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:20:25.330Z appoptics:patching patched crypto 
2021-09-23T17:20:25.362Z appoptics:patching patched https 
2021-09-23T17:20:25.362Z appoptics:patching patched http 
2021-09-23T17:20:25.396Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:20:25.397Z appoptics:patching patched fs 
2021-09-23T17:20:25.430Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:20:25.433Z appoptics:patching patched pg 6.0.4
2021-09-23T17:20:25.474Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements (58ms)
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries (54ms)
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (258ms)
  2 failing

  1) probes.pg 6.0.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.5
added 1 package from 2 contributors, updated 1 package and audited 1101 packages in 6.529s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:20:34.365Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:20:34.366Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:20:34.367Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:20:34.368Z appoptics:debug using context provider: ace-context
2021-09-23T17:20:34.432Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:20:34.493Z appoptics:patching patched crypto 
2021-09-23T17:20:34.526Z appoptics:patching patched https 
2021-09-23T17:20:34.526Z appoptics:patching patched http 
2021-09-23T17:20:34.558Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:20:34.559Z appoptics:patching patched fs 
2021-09-23T17:20:34.607Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:20:34.612Z appoptics:patching patched pg 6.0.5
2021-09-23T17:20:34.649Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements (48ms)
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (173ms)
  2 failing

  1) probes.pg 6.0.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.0
removed 1 package, updated 1 package and audited 1100 packages in 6.91s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:20:43.303Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:20:43.305Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:20:43.305Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:20:43.305Z appoptics:debug using context provider: ace-context
2021-09-23T17:20:43.362Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:20:43.413Z appoptics:patching patched crypto 
2021-09-23T17:20:43.443Z appoptics:patching patched https 
2021-09-23T17:20:43.443Z appoptics:patching patched http 
2021-09-23T17:20:43.470Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:20:43.470Z appoptics:patching patched fs 
2021-09-23T17:20:43.513Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:20:43.516Z appoptics:patching patched pg 6.1.0
2021-09-23T17:20:43.547Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (118ms)
  2 failing

  1) probes.pg 6.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.1
updated 1 package and audited 1100 packages in 5.761s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:20:51.035Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:20:51.036Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:20:51.036Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:20:51.037Z appoptics:debug using context provider: ace-context
2021-09-23T17:20:51.115Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:20:51.169Z appoptics:patching patched crypto 
2021-09-23T17:20:51.200Z appoptics:patching patched https 
2021-09-23T17:20:51.200Z appoptics:patching patched http 
2021-09-23T17:20:51.239Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:20:51.239Z appoptics:patching patched fs 
2021-09-23T17:20:51.279Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:20:51.283Z appoptics:patching patched pg 6.1.1
2021-09-23T17:20:51.320Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements (70ms)
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (194ms)
  2 failing

  1) probes.pg 6.1.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.2
updated 1 package and audited 1100 packages in 6.092s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:20:59.205Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:20:59.206Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:20:59.207Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:20:59.207Z appoptics:debug using context provider: ace-context
2021-09-23T17:20:59.267Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:20:59.321Z appoptics:patching patched crypto 
2021-09-23T17:20:59.354Z appoptics:patching patched https 
2021-09-23T17:20:59.355Z appoptics:patching patched http 
2021-09-23T17:20:59.383Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:20:59.384Z appoptics:patching patched fs 
2021-09-23T17:20:59.414Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:20:59.416Z appoptics:patching patched pg 6.1.2
2021-09-23T17:20:59.446Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (121ms)
  2 failing

  1) probes.pg 6.1.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.3
updated 1 package and audited 1100 packages in 7.289s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:21:08.343Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:21:08.344Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:21:08.344Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:21:08.345Z appoptics:debug using context provider: ace-context
2021-09-23T17:21:08.396Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:21:08.448Z appoptics:patching patched crypto 
2021-09-23T17:21:08.480Z appoptics:patching patched https 
2021-09-23T17:21:08.480Z appoptics:patching patched http 
2021-09-23T17:21:08.510Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:21:08.511Z appoptics:patching patched fs 
2021-09-23T17:21:08.540Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:21:08.542Z appoptics:patching patched pg 6.1.3
2021-09-23T17:21:08.569Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (115ms)
  2 failing

  1) probes.pg 6.1.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.4
updated 1 package and audited 1100 packages in 5.594s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:21:15.822Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:21:15.824Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:21:15.824Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:21:15.824Z appoptics:debug using context provider: ace-context
2021-09-23T17:21:15.876Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:21:15.926Z appoptics:patching patched crypto 
2021-09-23T17:21:15.957Z appoptics:patching patched https 
2021-09-23T17:21:15.957Z appoptics:patching patched http 
2021-09-23T17:21:15.985Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:21:15.985Z appoptics:patching patched fs 
2021-09-23T17:21:16.017Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:21:16.020Z appoptics:patching patched pg 6.1.4
2021-09-23T17:21:16.052Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (117ms)
  2 failing

  1) probes.pg 6.1.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.5
updated 1 package and audited 1100 packages in 6.124s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:21:24.104Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:21:24.106Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:21:24.106Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:21:24.107Z appoptics:debug using context provider: ace-context
2021-09-23T17:21:24.188Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:21:24.255Z appoptics:patching patched crypto 
2021-09-23T17:21:24.287Z appoptics:patching patched https 
2021-09-23T17:21:24.288Z appoptics:patching patched http 
2021-09-23T17:21:24.316Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:21:24.316Z appoptics:patching patched fs 
2021-09-23T17:21:24.347Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:21:24.350Z appoptics:patching patched pg 6.1.5
2021-09-23T17:21:24.377Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (160ms)
  2 failing

  1) probes.pg 6.1.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.6
added 1 package from 2 contributors, updated 1 package and audited 1101 packages in 6.034s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:21:32.058Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:21:32.060Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:21:32.060Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:21:32.061Z appoptics:debug using context provider: ace-context
2021-09-23T17:21:32.117Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:21:32.170Z appoptics:patching patched crypto 
2021-09-23T17:21:32.202Z appoptics:patching patched https 
2021-09-23T17:21:32.202Z appoptics:patching patched http 
2021-09-23T17:21:32.229Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:21:32.230Z appoptics:patching patched fs 
2021-09-23T17:21:32.264Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:21:32.266Z appoptics:patching patched pg 6.1.6
2021-09-23T17:21:32.302Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (101ms)
  2 failing

  1) probes.pg 6.1.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.2
removed 1 package, updated 2 packages and audited 1100 packages in 6.158s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:21:40.105Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:21:40.106Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:21:40.107Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:21:40.107Z appoptics:debug using context provider: ace-context
2021-09-23T17:21:40.163Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:21:40.216Z appoptics:patching patched crypto 
2021-09-23T17:21:40.248Z appoptics:patching patched https 
2021-09-23T17:21:40.248Z appoptics:patching patched http 
2021-09-23T17:21:40.275Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:21:40.276Z appoptics:patching patched fs 
2021-09-23T17:21:40.308Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:21:40.310Z appoptics:patching patched pg 6.2.2
2021-09-23T17:21:40.343Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (99ms)
  2 failing

  1) probes.pg 6.2.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.2.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.3
updated 1 package and audited 1100 packages in 6.812s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:21:48.786Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:21:48.787Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:21:48.788Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:21:48.788Z appoptics:debug using context provider: ace-context
2021-09-23T17:21:48.839Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:21:48.891Z appoptics:patching patched crypto 
2021-09-23T17:21:48.919Z appoptics:patching patched https 
2021-09-23T17:21:48.919Z appoptics:patching patched http 
2021-09-23T17:21:48.946Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:21:48.946Z appoptics:patching patched fs 
2021-09-23T17:21:48.977Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:21:48.979Z appoptics:patching patched pg 6.2.3
2021-09-23T17:21:49.005Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (112ms)
  2 failing

  1) probes.pg 6.2.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.2.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.4
updated 1 package and audited 1100 packages in 6.271s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:21:57.078Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:21:57.080Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:21:57.080Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:21:57.081Z appoptics:debug using context provider: ace-context
2021-09-23T17:21:57.139Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:21:57.215Z appoptics:patching patched crypto 
2021-09-23T17:21:57.249Z appoptics:patching patched https 
2021-09-23T17:21:57.249Z appoptics:patching patched http 
2021-09-23T17:21:57.288Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:21:57.288Z appoptics:patching patched fs 
2021-09-23T17:21:57.320Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:21:57.323Z appoptics:patching patched pg 6.2.4
2021-09-23T17:21:57.353Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (113ms)
  2 failing

  1) probes.pg 6.2.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.2.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.5
added 1 package from 2 contributors, updated 1 package and audited 1101 packages in 5.275s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:22:04.363Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:22:04.365Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:22:04.365Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:22:04.366Z appoptics:debug using context provider: ace-context
2021-09-23T17:22:04.426Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:22:04.483Z appoptics:patching patched crypto 
2021-09-23T17:22:04.516Z appoptics:patching patched https 
2021-09-23T17:22:04.516Z appoptics:patching patched http 
2021-09-23T17:22:04.548Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:22:04.549Z appoptics:patching patched fs 
2021-09-23T17:22:04.596Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:22:04.598Z appoptics:patching patched pg 6.2.5
2021-09-23T17:22:04.663Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (105ms)
  2 failing

  1) probes.pg 6.2.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.2.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.0
removed 1 package, updated 1 package and audited 1100 packages in 6.933s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:22:13.253Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:22:13.254Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:22:13.254Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:22:13.255Z appoptics:debug using context provider: ace-context
2021-09-23T17:22:13.315Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:22:13.371Z appoptics:patching patched crypto 
2021-09-23T17:22:13.404Z appoptics:patching patched https 
2021-09-23T17:22:13.404Z appoptics:patching patched http 
2021-09-23T17:22:13.434Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:22:13.435Z appoptics:patching patched fs 
2021-09-23T17:22:13.467Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:22:13.470Z appoptics:patching patched pg 6.3.0
2021-09-23T17:22:13.500Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1018) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1018) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (138ms)
  2 failing

  1) probes.pg 6.3.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.3.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.1
updated 1 package and audited 1100 packages in 7.204s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:22:22.426Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:22:22.427Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:22:22.427Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:22:22.428Z appoptics:debug using context provider: ace-context
2021-09-23T17:22:22.481Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:22:22.535Z appoptics:patching patched crypto 
2021-09-23T17:22:22.565Z appoptics:patching patched https 
2021-09-23T17:22:22.565Z appoptics:patching patched http 
2021-09-23T17:22:22.592Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:22:22.592Z appoptics:patching patched fs 
2021-09-23T17:22:22.621Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:22:22.624Z appoptics:patching patched pg 6.3.1
2021-09-23T17:22:22.652Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1041) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1041) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (109ms)
  2 failing

  1) probes.pg 6.3.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.3.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.3
added 1 package from 2 contributors, updated 1 package and audited 1101 packages in 6.095s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:22:30.432Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:22:30.434Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:22:30.434Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:22:30.435Z appoptics:debug using context provider: ace-context
2021-09-23T17:22:30.488Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:22:30.539Z appoptics:patching patched crypto 
2021-09-23T17:22:30.568Z appoptics:patching patched https 
2021-09-23T17:22:30.569Z appoptics:patching patched http 
2021-09-23T17:22:30.596Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:22:30.596Z appoptics:patching patched fs 
2021-09-23T17:22:30.627Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:22:30.629Z appoptics:patching patched pg 6.3.3
2021-09-23T17:22:30.661Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1064) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1064) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (134ms)
  2 failing

  1) probes.pg 6.3.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.3.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.0
removed 1 package, updated 1 package and audited 1100 packages in 6.227s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:22:38.626Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:22:38.627Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:22:38.627Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:22:38.628Z appoptics:debug using context provider: ace-context
2021-09-23T17:22:38.680Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:22:38.738Z appoptics:patching patched crypto 
2021-09-23T17:22:38.768Z appoptics:patching patched https 
2021-09-23T17:22:38.768Z appoptics:patching patched http 
2021-09-23T17:22:38.794Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:22:38.795Z appoptics:patching patched fs 
2021-09-23T17:22:38.823Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:22:38.825Z appoptics:patching patched pg 6.4.0
2021-09-23T17:22:38.852Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1087) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1087) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (114ms)
  2 failing

  1) probes.pg 6.4.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.4.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.1
updated 1 package and audited 1100 packages in 5.919s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:22:46.747Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:22:46.749Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:22:46.749Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:22:46.750Z appoptics:debug using context provider: ace-context
2021-09-23T17:22:46.807Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:22:46.864Z appoptics:patching patched crypto 
2021-09-23T17:22:46.896Z appoptics:patching patched https 
2021-09-23T17:22:46.896Z appoptics:patching patched http 
2021-09-23T17:22:46.924Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:22:46.924Z appoptics:patching patched fs 
2021-09-23T17:22:46.955Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:22:46.958Z appoptics:patching patched pg 6.4.1
2021-09-23T17:22:46.988Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1110) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1110) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (115ms)
  2 failing

  1) probes.pg 6.4.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.4.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.2
added 1 package from 2 contributors, updated 1 package and audited 1101 packages in 5.862s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:22:54.435Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:22:54.436Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:22:54.437Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:22:54.437Z appoptics:debug using context provider: ace-context
2021-09-23T17:22:54.494Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:22:54.546Z appoptics:patching patched crypto 
2021-09-23T17:22:54.575Z appoptics:patching patched https 
2021-09-23T17:22:54.575Z appoptics:patching patched http 
2021-09-23T17:22:54.603Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:22:54.604Z appoptics:patching patched fs 
2021-09-23T17:22:54.636Z appoptics:patching patched generic-pool 2.4.3
2021-09-23T17:22:54.638Z appoptics:patching patched pg 6.4.2
2021-09-23T17:22:54.667Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1133) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1133) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style (40ms)
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (172ms)
  2 failing

  1) probes.pg 6.4.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.4.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.5.0
removed 3 packages, updated 3 packages and audited 1098 packages in 6.41s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:23:02.916Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:23:02.918Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:23:02.918Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:23:02.918Z appoptics:debug using context provider: ace-context
2021-09-23T17:23:02.991Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:23:03.060Z appoptics:patching patched crypto 
2021-09-23T17:23:03.097Z appoptics:patching patched https 
2021-09-23T17:23:03.097Z appoptics:patching patched http 
2021-09-23T17:23:03.144Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:23:03.144Z appoptics:patching patched fs 
2021-09-23T17:23:03.169Z appoptics:patching patched pg 7.5.0
2021-09-23T17:23:03.218Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (997ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.0
updated 1 package and audited 1098 packages in 6.509s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:23:16.644Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:23:16.646Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:23:16.646Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:23:16.647Z appoptics:debug using context provider: ace-context
2021-09-23T17:23:16.707Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:23:16.759Z appoptics:patching patched crypto 
2021-09-23T17:23:16.789Z appoptics:patching patched https 
2021-09-23T17:23:16.789Z appoptics:patching patched http 
2021-09-23T17:23:16.827Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:23:16.828Z appoptics:patching patched fs 
2021-09-23T17:23:16.855Z appoptics:patching patched pg 7.6.0
2021-09-23T17:23:16.889Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.1
updated 2 packages and audited 1098 packages in 6.305s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:23:30.371Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:23:30.373Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:23:30.373Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:23:30.374Z appoptics:debug using context provider: ace-context
2021-09-23T17:23:30.434Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:23:30.485Z appoptics:patching patched crypto 
2021-09-23T17:23:30.515Z appoptics:patching patched https 
2021-09-23T17:23:30.515Z appoptics:patching patched http 
2021-09-23T17:23:30.547Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:23:30.547Z appoptics:patching patched fs 
2021-09-23T17:23:30.569Z appoptics:patching patched pg 7.6.1
2021-09-23T17:23:30.601Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (997ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (224ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.0
updated 1 package and audited 1098 packages in 6.259s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:23:43.760Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:23:43.762Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:23:43.762Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:23:43.763Z appoptics:debug using context provider: ace-context
2021-09-23T17:23:43.818Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:23:43.869Z appoptics:patching patched crypto 
2021-09-23T17:23:43.900Z appoptics:patching patched https 
2021-09-23T17:23:43.900Z appoptics:patching patched http 
2021-09-23T17:23:43.934Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:23:43.934Z appoptics:patching patched fs 
2021-09-23T17:23:43.956Z appoptics:patching patched pg 7.7.0
2021-09-23T17:23:43.989Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (256ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.1
updated 1 package and audited 1098 packages in 5.367s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:23:56.346Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:23:56.347Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:23:56.347Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:23:56.348Z appoptics:debug using context provider: ace-context
2021-09-23T17:23:56.404Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:23:56.458Z appoptics:patching patched crypto 
2021-09-23T17:23:56.493Z appoptics:patching patched https 
2021-09-23T17:23:56.493Z appoptics:patching patched http 
2021-09-23T17:23:56.540Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:23:56.540Z appoptics:patching patched fs 
2021-09-23T17:23:56.571Z appoptics:patching patched pg 7.7.1
2021-09-23T17:23:56.620Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.0
updated 3 packages and audited 1098 packages in 5.856s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:24:09.739Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:24:09.744Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:24:09.744Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:24:09.745Z appoptics:debug using context provider: ace-context
2021-09-23T17:24:09.830Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:24:09.895Z appoptics:patching patched crypto 
2021-09-23T17:24:09.931Z appoptics:patching patched https 
2021-09-23T17:24:09.931Z appoptics:patching patched http 
2021-09-23T17:24:09.987Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:24:09.988Z appoptics:patching patched fs 
2021-09-23T17:24:10.015Z appoptics:patching patched pg 7.8.0
2021-09-23T17:24:10.063Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (51ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.1
updated 2 packages and audited 1098 packages in 5.774s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:24:23.257Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:24:23.258Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:24:23.258Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:24:23.259Z appoptics:debug using context provider: ace-context
2021-09-23T17:24:23.332Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:24:23.403Z appoptics:patching patched crypto 
2021-09-23T17:24:23.446Z appoptics:patching patched https 
2021-09-23T17:24:23.446Z appoptics:patching patched http 
2021-09-23T17:24:23.498Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:24:23.499Z appoptics:patching patched fs 
2021-09-23T17:24:23.531Z appoptics:patching patched pg 7.8.1
2021-09-23T17:24:23.598Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (228ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.2
updated 1 package and audited 1098 packages in 6.161s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:24:36.879Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:24:36.880Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:24:36.881Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:24:36.881Z appoptics:debug using context provider: ace-context
2021-09-23T17:24:36.934Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:24:36.984Z appoptics:patching patched crypto 
2021-09-23T17:24:37.013Z appoptics:patching patched https 
2021-09-23T17:24:37.013Z appoptics:patching patched http 
2021-09-23T17:24:37.050Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:24:37.050Z appoptics:patching patched fs 
2021-09-23T17:24:37.073Z appoptics:patching patched pg 7.8.2
2021-09-23T17:24:37.107Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.9.0
updated 1 package and audited 1098 packages in 5.76s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:24:49.867Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:24:49.868Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:24:49.869Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:24:49.869Z appoptics:debug using context provider: ace-context
2021-09-23T17:24:49.947Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:24:50.000Z appoptics:patching patched crypto 
2021-09-23T17:24:50.032Z appoptics:patching patched https 
2021-09-23T17:24:50.032Z appoptics:patching patched http 
2021-09-23T17:24:50.068Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:24:50.069Z appoptics:patching patched fs 
2021-09-23T17:24:50.094Z appoptics:patching patched pg 7.9.0
2021-09-23T17:24:50.127Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.9.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.9.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (257ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.10.0
updated 1 package and audited 1098 packages in 6.116s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:25:03.416Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:25:03.428Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:25:03.428Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:25:03.429Z appoptics:debug using context provider: ace-context
2021-09-23T17:25:03.488Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:25:03.544Z appoptics:patching patched crypto 
2021-09-23T17:25:03.577Z appoptics:patching patched https 
2021-09-23T17:25:03.577Z appoptics:patching patched http 
2021-09-23T17:25:03.613Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:25:03.614Z appoptics:patching patched fs 
2021-09-23T17:25:03.636Z appoptics:patching patched pg 7.10.0
2021-09-23T17:25:03.670Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.10.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.10.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.11.0
updated 1 package and audited 1098 packages in 6.298s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:25:16.879Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:25:16.880Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:25:16.880Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:25:16.881Z appoptics:debug using context provider: ace-context
2021-09-23T17:25:16.945Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:25:17.010Z appoptics:patching patched crypto 
2021-09-23T17:25:17.041Z appoptics:patching patched https 
2021-09-23T17:25:17.041Z appoptics:patching patched http 
2021-09-23T17:25:17.091Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:25:17.092Z appoptics:patching patched fs 
2021-09-23T17:25:17.129Z appoptics:patching patched pg 7.11.0
2021-09-23T17:25:17.183Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.11.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.11.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (202ms)
        ✓ should trim long queries using promises (45ms)
        ✓ should do nothing when disabled using a callback (201ms)
        ✓ should do nothing when disabled using promises (49ms)
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.0
updated 1 package and audited 1098 packages in 6.907s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:25:31.007Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:25:31.009Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:25:31.009Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:25:31.009Z appoptics:debug using context provider: ace-context
2021-09-23T17:25:31.065Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:25:31.118Z appoptics:patching patched crypto 
2021-09-23T17:25:31.150Z appoptics:patching patched https 
2021-09-23T17:25:31.150Z appoptics:patching patched http 
2021-09-23T17:25:31.184Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:25:31.184Z appoptics:patching patched fs 
2021-09-23T17:25:31.206Z appoptics:patching patched pg 7.12.0
2021-09-23T17:25:31.247Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.1
updated 2 packages and audited 1098 packages in 6.035s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:25:44.339Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:25:44.340Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:25:44.340Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:25:44.341Z appoptics:debug using context provider: ace-context
2021-09-23T17:25:44.394Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:25:44.444Z appoptics:patching patched crypto 
2021-09-23T17:25:44.477Z appoptics:patching patched https 
2021-09-23T17:25:44.477Z appoptics:patching patched http 
2021-09-23T17:25:44.511Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:25:44.511Z appoptics:patching patched fs 
2021-09-23T17:25:44.531Z appoptics:patching patched pg 7.12.1
2021-09-23T17:25:44.561Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.13.0
updated 1 package and audited 1098 packages in 5.366s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:25:57.184Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:25:57.185Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:25:57.185Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:25:57.186Z appoptics:debug using context provider: ace-context
2021-09-23T17:25:57.298Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:25:57.356Z appoptics:patching patched crypto 
2021-09-23T17:25:57.386Z appoptics:patching patched https 
2021-09-23T17:25:57.387Z appoptics:patching patched http 
2021-09-23T17:25:57.430Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:25:57.430Z appoptics:patching patched fs 
2021-09-23T17:25:57.458Z appoptics:patching patched pg 7.13.0
2021-09-23T17:25:57.502Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.13.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.13.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (38ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (986ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.14.0
updated 1 package and audited 1098 packages in 5.698s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:26:10.153Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:26:10.155Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:26:10.155Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:26:10.156Z appoptics:debug using context provider: ace-context
2021-09-23T17:26:10.207Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:26:10.260Z appoptics:patching patched crypto 
2021-09-23T17:26:10.291Z appoptics:patching patched https 
2021-09-23T17:26:10.291Z appoptics:patching patched http 
2021-09-23T17:26:10.337Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:26:10.337Z appoptics:patching patched fs 
2021-09-23T17:26:10.361Z appoptics:patching patched pg 7.14.0
2021-09-23T17:26:10.393Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.14.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.14.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.0
updated 1 package and audited 1098 packages in 6s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:26:23.452Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:26:23.454Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:26:23.454Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:26:23.455Z appoptics:debug using context provider: ace-context
2021-09-23T17:26:23.514Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:26:23.571Z appoptics:patching patched crypto 
2021-09-23T17:26:23.606Z appoptics:patching patched https 
2021-09-23T17:26:23.606Z appoptics:patching patched http 
2021-09-23T17:26:23.643Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:26:23.643Z appoptics:patching patched fs 
2021-09-23T17:26:23.670Z appoptics:patching patched pg 7.15.0
2021-09-23T17:26:23.706Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback (41ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.1
updated 1 package and audited 1098 packages in 5.922s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:26:36.871Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:26:36.873Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:26:36.873Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:26:36.874Z appoptics:debug using context provider: ace-context
2021-09-23T17:26:36.942Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:26:36.997Z appoptics:patching patched crypto 
2021-09-23T17:26:37.032Z appoptics:patching patched https 
2021-09-23T17:26:37.033Z appoptics:patching patched http 
2021-09-23T17:26:37.090Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:26:37.091Z appoptics:patching patched fs 
2021-09-23T17:26:37.124Z appoptics:patching patched pg 7.15.1
2021-09-23T17:26:37.165Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.2
updated 1 package and audited 1098 packages in 6.993s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:26:51.220Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:26:51.222Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:26:51.222Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:26:51.223Z appoptics:debug using context provider: ace-context
2021-09-23T17:26:51.275Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:26:51.328Z appoptics:patching patched crypto 
2021-09-23T17:26:51.370Z appoptics:patching patched https 
2021-09-23T17:26:51.370Z appoptics:patching patched http 
2021-09-23T17:26:51.424Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:26:51.425Z appoptics:patching patched fs 
2021-09-23T17:26:51.457Z appoptics:patching patched pg 7.15.2
2021-09-23T17:26:51.496Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context (43ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.0
added 1 package, updated 1 package and audited 1099 packages in 6.675s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:27:05.271Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:27:05.273Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:27:05.273Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:27:05.273Z appoptics:debug using context provider: ace-context
2021-09-23T17:27:05.331Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:27:05.385Z appoptics:patching patched crypto 
2021-09-23T17:27:05.417Z appoptics:patching patched https 
2021-09-23T17:27:05.417Z appoptics:patching patched http 
2021-09-23T17:27:05.453Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:27:05.453Z appoptics:patching patched fs 
2021-09-23T17:27:05.478Z appoptics:patching patched pg 7.16.0
2021-09-23T17:27:05.511Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.1
updated 1 package and audited 1099 packages in 7.013s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:27:19.517Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:27:19.518Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:27:19.518Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:27:19.519Z appoptics:debug using context provider: ace-context
2021-09-23T17:27:19.574Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:27:19.628Z appoptics:patching patched crypto 
2021-09-23T17:27:19.662Z appoptics:patching patched https 
2021-09-23T17:27:19.663Z appoptics:patching patched http 
2021-09-23T17:27:19.698Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:27:19.699Z appoptics:patching patched fs 
2021-09-23T17:27:19.727Z appoptics:patching patched pg 7.16.1
2021-09-23T17:27:19.756Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (276ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (235ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (245ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (987ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (238ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.0
updated 1 package and audited 1099 packages in 6.52s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:27:33.477Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:27:33.479Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:27:33.479Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:27:33.480Z appoptics:debug using context provider: ace-context
2021-09-23T17:27:33.539Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:27:33.607Z appoptics:patching patched crypto 
2021-09-23T17:27:33.642Z appoptics:patching patched https 
2021-09-23T17:27:33.642Z appoptics:patching patched http 
2021-09-23T17:27:33.691Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:27:33.691Z appoptics:patching patched fs 
2021-09-23T17:27:33.716Z appoptics:patching patched pg 7.17.0
2021-09-23T17:27:33.751Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.1
updated 1 package and audited 1099 packages in 6.052s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:27:47.035Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:27:47.037Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:27:47.037Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:27:47.038Z appoptics:debug using context provider: ace-context
2021-09-23T17:27:47.111Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:27:47.179Z appoptics:patching patched crypto 
2021-09-23T17:27:47.216Z appoptics:patching patched https 
2021-09-23T17:27:47.216Z appoptics:patching patched http 
2021-09-23T17:27:47.264Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:27:47.265Z appoptics:patching patched fs 
2021-09-23T17:27:47.289Z appoptics:patching patched pg 7.17.1
2021-09-23T17:27:47.333Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.0
updated 1 package and audited 1099 packages in 5.72s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:28:00.024Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:28:00.025Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:28:00.025Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:28:00.026Z appoptics:debug using context provider: ace-context
2021-09-23T17:28:00.082Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:28:00.135Z appoptics:patching patched crypto 
2021-09-23T17:28:00.167Z appoptics:patching patched https 
2021-09-23T17:28:00.167Z appoptics:patching patched http 
2021-09-23T17:28:00.206Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:28:00.207Z appoptics:patching patched fs 
2021-09-23T17:28:00.231Z appoptics:patching patched pg 7.18.0
2021-09-23T17:28:00.264Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (235ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.1
updated 1 package and audited 1099 packages in 5.88s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:28:13.189Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:28:13.190Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:28:13.191Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:28:13.192Z appoptics:debug using context provider: ace-context
2021-09-23T17:28:13.258Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:28:13.346Z appoptics:patching patched crypto 
2021-09-23T17:28:13.381Z appoptics:patching patched https 
2021-09-23T17:28:13.381Z appoptics:patching patched http 
2021-09-23T17:28:13.414Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:28:13.415Z appoptics:patching patched fs 
2021-09-23T17:28:13.435Z appoptics:patching patched pg 7.18.1
2021-09-23T17:28:13.469Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (252ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.2
updated 1 package and audited 1099 packages in 6.502s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:28:27.245Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:28:27.247Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:28:27.247Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:28:27.248Z appoptics:debug using context provider: ace-context
2021-09-23T17:28:27.306Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:28:27.374Z appoptics:patching patched crypto 
2021-09-23T17:28:27.408Z appoptics:patching patched https 
2021-09-23T17:28:27.409Z appoptics:patching patched http 
2021-09-23T17:28:27.456Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:28:27.457Z appoptics:patching patched fs 
2021-09-23T17:28:27.482Z appoptics:patching patched pg 7.18.2
2021-09-23T17:28:27.530Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.0
updated 2 packages and audited 1099 packages in 5.637s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:28:40.524Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:28:40.526Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:28:40.526Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:28:40.527Z appoptics:debug using context provider: ace-context
2021-09-23T17:28:40.653Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:28:40.729Z appoptics:patching patched crypto 
2021-09-23T17:28:40.770Z appoptics:patching patched https 
2021-09-23T17:28:40.770Z appoptics:patching patched http 
2021-09-23T17:28:40.819Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:28:40.819Z appoptics:patching patched fs 
2021-09-23T17:28:40.847Z appoptics:patching patched pg 8.0.0
2021-09-23T17:28:40.885Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (236ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.1
added 1 package, removed 1 package, updated 1 package and audited 1099 packages in 7.314s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:28:55.281Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:28:55.282Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:28:55.282Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:28:55.283Z appoptics:debug using context provider: ace-context
2021-09-23T17:28:55.341Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:28:55.397Z appoptics:patching patched crypto 
2021-09-23T17:28:55.428Z appoptics:patching patched https 
2021-09-23T17:28:55.428Z appoptics:patching patched http 
2021-09-23T17:28:55.464Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:28:55.465Z appoptics:patching patched fs 
2021-09-23T17:28:55.488Z appoptics:patching patched pg 8.0.1
2021-09-23T17:28:55.522Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.2
updated 1 package and audited 1099 packages in 6.8s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:29:09.317Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:29:09.318Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:29:09.318Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:29:09.319Z appoptics:debug using context provider: ace-context
2021-09-23T17:29:09.379Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:29:09.436Z appoptics:patching patched crypto 
2021-09-23T17:29:09.478Z appoptics:patching patched https 
2021-09-23T17:29:09.478Z appoptics:patching patched http 
2021-09-23T17:29:09.520Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:29:09.520Z appoptics:patching patched fs 
2021-09-23T17:29:09.564Z appoptics:patching patched pg 8.0.2
2021-09-23T17:29:09.596Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (233ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (238ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (246ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.3
updated 1 package and audited 1099 packages in 5.854s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:29:22.324Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:29:22.325Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:29:22.325Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:29:22.326Z appoptics:debug using context provider: ace-context
2021-09-23T17:29:22.383Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:29:22.434Z appoptics:patching patched crypto 
2021-09-23T17:29:22.466Z appoptics:patching patched https 
2021-09-23T17:29:22.466Z appoptics:patching patched http 
2021-09-23T17:29:22.498Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:29:22.499Z appoptics:patching patched fs 
2021-09-23T17:29:22.528Z appoptics:patching patched pg 8.0.3
2021-09-23T17:29:22.555Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (255ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.1.0
updated 2 packages and audited 1099 packages in 6.458s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:29:35.947Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:29:35.949Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:29:35.949Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:29:35.951Z appoptics:debug using context provider: ace-context
2021-09-23T17:29:36.018Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:29:36.073Z appoptics:patching patched crypto 
2021-09-23T17:29:36.105Z appoptics:patching patched https 
2021-09-23T17:29:36.105Z appoptics:patching patched http 
2021-09-23T17:29:36.159Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:29:36.160Z appoptics:patching patched fs 
2021-09-23T17:29:36.185Z appoptics:patching patched pg 8.1.0
2021-09-23T17:29:36.234Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.1.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.1.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.0
updated 1 package and audited 1099 packages in 7.188s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:29:50.547Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:29:50.548Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:29:50.548Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:29:50.549Z appoptics:debug using context provider: ace-context
2021-09-23T17:29:50.607Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:29:50.661Z appoptics:patching patched crypto 
2021-09-23T17:29:50.694Z appoptics:patching patched https 
2021-09-23T17:29:50.694Z appoptics:patching patched http 
2021-09-23T17:29:50.730Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:29:50.730Z appoptics:patching patched fs 
2021-09-23T17:29:50.756Z appoptics:patching patched pg 8.2.0
2021-09-23T17:29:50.794Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (247ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.1
updated 1 package and audited 1099 packages in 5.691s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:30:03.419Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:30:03.421Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:30:03.421Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:30:03.422Z appoptics:debug using context provider: ace-context
2021-09-23T17:30:03.483Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:30:03.542Z appoptics:patching patched crypto 
2021-09-23T17:30:03.575Z appoptics:patching patched https 
2021-09-23T17:30:03.575Z appoptics:patching patched http 
2021-09-23T17:30:03.611Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:30:03.612Z appoptics:patching patched fs 
2021-09-23T17:30:03.638Z appoptics:patching patched pg 8.2.1
2021-09-23T17:30:03.671Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (253ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (988ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.2
updated 1 package and audited 1099 packages in 5.545s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:30:16.178Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:30:16.180Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:30:16.180Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:30:16.180Z appoptics:debug using context provider: ace-context
2021-09-23T17:30:16.236Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:30:16.291Z appoptics:patching patched crypto 
2021-09-23T17:30:16.327Z appoptics:patching patched https 
2021-09-23T17:30:16.327Z appoptics:patching patched http 
2021-09-23T17:30:16.363Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:30:16.364Z appoptics:patching patched fs 
2021-09-23T17:30:16.391Z appoptics:patching patched pg 8.2.2
2021-09-23T17:30:16.431Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (242ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.0
updated 1 package and audited 1099 packages in 5.829s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:30:29.234Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:30:29.237Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:30:29.237Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:30:29.238Z appoptics:debug using context provider: ace-context
2021-09-23T17:30:29.300Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:30:29.360Z appoptics:patching patched crypto 
2021-09-23T17:30:29.393Z appoptics:patching patched https 
2021-09-23T17:30:29.393Z appoptics:patching patched http 
2021-09-23T17:30:29.430Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:30:29.430Z appoptics:patching patched fs 
2021-09-23T17:30:29.458Z appoptics:patching patched pg 8.3.0
2021-09-23T17:30:29.493Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (247ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.2
updated 1 package and audited 1099 packages in 6.571s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:30:43.223Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:30:43.225Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:30:43.225Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:30:43.226Z appoptics:debug using context provider: ace-context
2021-09-23T17:30:43.296Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:30:43.354Z appoptics:patching patched crypto 
2021-09-23T17:30:43.387Z appoptics:patching patched https 
2021-09-23T17:30:43.387Z appoptics:patching patched http 
2021-09-23T17:30:43.430Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:30:43.430Z appoptics:patching patched fs 
2021-09-23T17:30:43.454Z appoptics:patching patched pg 8.3.2
2021-09-23T17:30:43.485Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.3
updated 1 package and audited 1099 packages in 6.051s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:30:56.832Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:30:56.834Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:30:56.834Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:30:56.834Z appoptics:debug using context provider: ace-context
2021-09-23T17:30:56.889Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:30:56.948Z appoptics:patching patched crypto 
2021-09-23T17:30:56.983Z appoptics:patching patched https 
2021-09-23T17:30:56.983Z appoptics:patching patched http 
2021-09-23T17:30:57.022Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:30:57.022Z appoptics:patching patched fs 
2021-09-23T17:30:57.049Z appoptics:patching patched pg 8.3.3
2021-09-23T17:30:57.082Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (245ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.0
removed 1 package, updated 1 package and audited 1098 packages in 6.698s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:31:10.754Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:31:10.761Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:31:10.761Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:31:10.762Z appoptics:debug using context provider: ace-context
2021-09-23T17:31:10.826Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:31:10.883Z appoptics:patching patched crypto 
2021-09-23T17:31:10.917Z appoptics:patching patched https 
2021-09-23T17:31:10.917Z appoptics:patching patched http 
2021-09-23T17:31:10.954Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:31:10.954Z appoptics:patching patched fs 
2021-09-23T17:31:10.979Z appoptics:patching patched pg 8.4.0
2021-09-23T17:31:11.016Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (220ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (214ms)
        ✓ should do nothing when disabled using promises (38ms)
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (983ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (236ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (244ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.1
updated 1 package and audited 1098 packages in 6.351s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:31:24.401Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:31:24.403Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:31:24.403Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:31:24.404Z appoptics:debug using context provider: ace-context
2021-09-23T17:31:24.459Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:31:24.510Z appoptics:patching patched crypto 
2021-09-23T17:31:24.540Z appoptics:patching patched https 
2021-09-23T17:31:24.540Z appoptics:patching patched http 
2021-09-23T17:31:24.571Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:31:24.572Z appoptics:patching patched fs 
2021-09-23T17:31:24.598Z appoptics:patching patched pg 8.4.1
2021-09-23T17:31:24.628Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (997ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (249ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.2
updated 1 package and audited 1098 packages in 6.218s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:31:37.936Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:31:37.938Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:31:37.938Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:31:37.939Z appoptics:debug using context provider: ace-context
2021-09-23T17:31:37.998Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:31:38.054Z appoptics:patching patched crypto 
2021-09-23T17:31:38.089Z appoptics:patching patched https 
2021-09-23T17:31:38.089Z appoptics:patching patched http 
2021-09-23T17:31:38.124Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:31:38.125Z appoptics:patching patched fs 
2021-09-23T17:31:38.151Z appoptics:patching patched pg 8.4.2
2021-09-23T17:31:38.186Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.0
updated 1 package and audited 1098 packages in 6.545s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:31:51.632Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:31:51.633Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:31:51.633Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:31:51.634Z appoptics:debug using context provider: ace-context
2021-09-23T17:31:51.688Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:31:51.738Z appoptics:patching patched crypto 
2021-09-23T17:31:51.767Z appoptics:patching patched https 
2021-09-23T17:31:51.767Z appoptics:patching patched http 
2021-09-23T17:31:51.799Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:31:51.800Z appoptics:patching patched fs 
2021-09-23T17:31:51.823Z appoptics:patching patched pg 8.5.0
2021-09-23T17:31:51.851Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.1
updated 1 package and audited 1098 packages in 6.415s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:32:05.437Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:32:05.438Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:32:05.438Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:32:05.439Z appoptics:debug using context provider: ace-context
2021-09-23T17:32:05.494Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:32:05.546Z appoptics:patching patched crypto 
2021-09-23T17:32:05.578Z appoptics:patching patched https 
2021-09-23T17:32:05.578Z appoptics:patching patched http 
2021-09-23T17:32:05.613Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:32:05.614Z appoptics:patching patched fs 
2021-09-23T17:32:05.640Z appoptics:patching patched pg 8.5.1
2021-09-23T17:32:05.669Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.6.0
updated 1 package and audited 1098 packages in 5.368s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:32:18.316Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:32:18.318Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:32:18.318Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:32:18.319Z appoptics:debug using context provider: ace-context
2021-09-23T17:32:18.392Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:32:18.445Z appoptics:patching patched crypto 
2021-09-23T17:32:18.474Z appoptics:patching patched https 
2021-09-23T17:32:18.474Z appoptics:patching patched http 
2021-09-23T17:32:18.506Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:32:18.506Z appoptics:patching patched fs 
2021-09-23T17:32:18.530Z appoptics:patching patched pg 8.6.0
2021-09-23T17:32:18.561Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1006ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (245ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.0
updated 1 package and audited 1098 packages in 5.613s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:32:31.111Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:32:31.113Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:32:31.113Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:32:31.113Z appoptics:debug using context provider: ace-context
2021-09-23T17:32:31.179Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:32:31.237Z appoptics:patching patched crypto 
2021-09-23T17:32:31.267Z appoptics:patching patched https 
2021-09-23T17:32:31.267Z appoptics:patching patched http 
2021-09-23T17:32:31.301Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:32:31.301Z appoptics:patching patched fs 
2021-09-23T17:32:31.326Z appoptics:patching patched pg 8.7.0
2021-09-23T17:32:31.355Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (260ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (981ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (232ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (243ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 1098 packages in 5.671s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-23T17:32:43.933Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-23T17:32:43.935Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-23T17:32:43.935Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-23T17:32:43.937Z appoptics:debug using context provider: ace-context
2021-09-23T17:32:43.995Z appoptics:debug apm 10.1.0, bindings 11.1.0, oboe 10.1.1
2021-09-23T17:32:44.052Z appoptics:patching patched crypto 
2021-09-23T17:32:44.086Z appoptics:patching patched https 
2021-09-23T17:32:44.086Z appoptics:patching patched http 
2021-09-23T17:32:44.119Z appoptics:patching fs.realpath - adding native method
2021-09-23T17:32:44.119Z appoptics:patching patched fs 
2021-09-23T17:32:44.142Z appoptics:patching patched pg 8.7.1
2021-09-23T17:32:44.171Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (987ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 1098 packages in 5.494s

72 packages are looking for funding
  run `npm fund` for details

found 23 vulnerabilities (5 low, 4 moderate, 12 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
