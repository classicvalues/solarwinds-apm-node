npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.3
added 1 package, updated 2 packages and audited 914 packages in 4.465s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:38:15.912Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:38:15.913Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:38:15.913Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:38:15.914Z appoptics:debug using context provider: ace-context
2022-02-23T04:38:15.969Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:38:16.131Z appoptics:patching patched crypto 
2022-02-23T04:38:16.152Z appoptics:patching patched https 
2022-02-23T04:38:16.152Z appoptics:patching patched http 
2022-02-23T04:38:16.226Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:38:16.227Z appoptics:patching patched fs 
2022-02-23T04:38:16.248Z appoptics:patching patched pg 8.0.3
2022-02-23T04:38:16.305Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.3
      ✓ UDP might lose a message (54ms)
      ✓ should create the pg testing context (227ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (977ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (251ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (56ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (227ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (238ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (230ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (984ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (235ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (243ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (232ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.1.0
updated 2 packages and audited 914 packages in 4.464s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:38:27.391Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:38:27.394Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:38:27.394Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:38:27.394Z appoptics:debug using context provider: ace-context
2022-02-23T04:38:27.440Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:38:27.579Z appoptics:patching patched crypto 
2022-02-23T04:38:27.597Z appoptics:patching patched https 
2022-02-23T04:38:27.597Z appoptics:patching patched http 
2022-02-23T04:38:27.637Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:38:27.637Z appoptics:patching patched fs 
2022-02-23T04:38:27.669Z appoptics:patching patched pg 8.1.0
2022-02-23T04:38:27.710Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.1.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.1.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (85ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (971ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (223ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (231ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (224ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (70ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (242ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (231ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (986ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (238ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (238ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.0
updated 1 package and audited 914 packages in 4.082s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:38:38.286Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:38:38.287Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:38:38.287Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:38:38.287Z appoptics:debug using context provider: ace-context
2022-02-23T04:38:38.331Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:38:38.466Z appoptics:patching patched crypto 
2022-02-23T04:38:38.483Z appoptics:patching patched https 
2022-02-23T04:38:38.484Z appoptics:patching patched http 
2022-02-23T04:38:38.514Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:38:38.514Z appoptics:patching patched fs 
2022-02-23T04:38:38.524Z appoptics:patching patched pg 8.2.0
2022-02-23T04:38:38.547Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (110ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (976ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (225ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (240ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (228ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (57ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (41ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (226ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (238ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (230ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (982ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (234ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (241ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.1
updated 1 package and audited 914 packages in 4.085s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:38:49.245Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:38:49.246Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:38:49.246Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:38:49.247Z appoptics:debug using context provider: ace-context
2022-02-23T04:38:49.307Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:38:49.472Z appoptics:patching patched crypto 
2022-02-23T04:38:49.508Z appoptics:patching patched https 
2022-02-23T04:38:49.509Z appoptics:patching patched http 
2022-02-23T04:38:49.541Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:38:49.541Z appoptics:patching patched fs 
2022-02-23T04:38:49.551Z appoptics:patching patched pg 8.2.1
2022-02-23T04:38:49.577Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (114ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (974ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (225ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (242ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (56ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (40ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (226ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (236ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (230ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (982ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (233ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (241ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.2
updated 1 package and audited 914 packages in 3.754s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:38:59.929Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:38:59.929Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:38:59.929Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:38:59.930Z appoptics:debug using context provider: ace-context
2022-02-23T04:39:00.022Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:39:00.312Z appoptics:patching patched crypto 
2022-02-23T04:39:00.381Z appoptics:patching patched https 
2022-02-23T04:39:00.382Z appoptics:patching patched http 
2022-02-23T04:39:00.456Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:39:00.456Z appoptics:patching patched fs 
2022-02-23T04:39:00.481Z appoptics:patching patched pg 8.2.2
2022-02-23T04:39:00.534Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context (214ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (47ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (111ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (64ms)
        ✓ should trace a basic query using callback (943ms)
        ✓ should trace a basic query using promises (59ms)
        ✓ should trace a prepared statement using a callback (193ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises (45ms)
        ✓ should truncate long queries using a callback (210ms)
        ✓ should truncate long queries using promises (45ms)
        ✓ should do nothing when disabled using a callback (202ms)
        ✓ should do nothing when disabled using promises (49ms)
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (56ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (39ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (241ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (985ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (237ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (246ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.0
updated 1 package and audited 914 packages in 3.946s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:39:11.408Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:39:11.408Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:39:11.408Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:39:11.409Z appoptics:debug using context provider: ace-context
2022-02-23T04:39:11.452Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:39:11.587Z appoptics:patching patched crypto 
2022-02-23T04:39:11.608Z appoptics:patching patched https 
2022-02-23T04:39:11.608Z appoptics:patching patched http 
2022-02-23T04:39:11.668Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:39:11.669Z appoptics:patching patched fs 
2022-02-23T04:39:11.692Z appoptics:patching patched pg 8.3.0
2022-02-23T04:39:11.739Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (112ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (975ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (225ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (234ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (227ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (59ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (242ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (984ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (234ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (242ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.2
updated 1 package and audited 914 packages in 3.46s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:39:21.744Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:39:21.744Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:39:21.744Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:39:21.745Z appoptics:debug using context provider: ace-context
2022-02-23T04:39:21.788Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:39:21.923Z appoptics:patching patched crypto 
2022-02-23T04:39:21.939Z appoptics:patching patched https 
2022-02-23T04:39:21.940Z appoptics:patching patched http 
2022-02-23T04:39:21.970Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:39:21.971Z appoptics:patching patched fs 
2022-02-23T04:39:21.980Z appoptics:patching patched pg 8.3.2
2022-02-23T04:39:22.002Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context (86ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (979ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (229ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (242ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (53ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (227ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (240ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (232ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (982ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (232ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (240ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (231ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.3
updated 1 package and audited 914 packages in 3.563s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:39:32.014Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:39:32.014Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:39:32.014Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:39:32.015Z appoptics:debug using context provider: ace-context
2022-02-23T04:39:32.056Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:39:32.196Z appoptics:patching patched crypto 
2022-02-23T04:39:32.213Z appoptics:patching patched https 
2022-02-23T04:39:32.213Z appoptics:patching patched http 
2022-02-23T04:39:32.243Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:39:32.243Z appoptics:patching patched fs 
2022-02-23T04:39:32.253Z appoptics:patching patched pg 8.3.3
2022-02-23T04:39:32.274Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context (85ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (977ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (237ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (58ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (41ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (205ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (221ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (212ms)
        ✓ should do nothing when disabled using promises (38ms)
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (965ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (215ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (223ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (215ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.0
removed 1 package, updated 1 package and audited 913 packages in 3.894s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:39:42.572Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:39:42.573Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:39:42.573Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:39:42.573Z appoptics:debug using context provider: ace-context
2022-02-23T04:39:42.616Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:39:42.750Z appoptics:patching patched crypto 
2022-02-23T04:39:42.767Z appoptics:patching patched https 
2022-02-23T04:39:42.767Z appoptics:patching patched http 
2022-02-23T04:39:42.796Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:39:42.796Z appoptics:patching patched fs 
2022-02-23T04:39:42.805Z appoptics:patching patched pg 8.4.0
2022-02-23T04:39:42.825Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (83ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (975ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (226ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (241ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (228ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (55ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (41ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (227ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (245ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (248ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.1
updated 1 package and audited 913 packages in 3.517s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:39:52.792Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:39:52.793Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:39:52.793Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:39:52.794Z appoptics:debug using context provider: ace-context
2022-02-23T04:39:52.837Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:39:52.970Z appoptics:patching patched crypto 
2022-02-23T04:39:52.986Z appoptics:patching patched https 
2022-02-23T04:39:52.987Z appoptics:patching patched http 
2022-02-23T04:39:53.019Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:39:53.019Z appoptics:patching patched fs 
2022-02-23T04:39:53.028Z appoptics:patching patched pg 8.4.1
2022-02-23T04:39:53.048Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (86ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (977ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (227ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (238ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (62ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (39ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (238ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (230ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (983ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (234ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (243ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.2
updated 1 package and audited 913 packages in 3.499s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:40:02.970Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:40:02.971Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:40:02.971Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:40:02.972Z appoptics:debug using context provider: ace-context
2022-02-23T04:40:03.015Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:40:03.150Z appoptics:patching patched crypto 
2022-02-23T04:40:03.169Z appoptics:patching patched https 
2022-02-23T04:40:03.170Z appoptics:patching patched http 
2022-02-23T04:40:03.198Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:40:03.198Z appoptics:patching patched fs 
2022-02-23T04:40:03.207Z appoptics:patching patched pg 8.4.2
2022-02-23T04:40:03.227Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context (84ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (976ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (226ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (241ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (55ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (227ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (238ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (231ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (983ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (233ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (242ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.0
updated 1 package and audited 913 packages in 3.46s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:40:13.379Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:40:13.380Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:40:13.380Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:40:13.380Z appoptics:debug using context provider: ace-context
2022-02-23T04:40:13.424Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:40:13.567Z appoptics:patching patched crypto 
2022-02-23T04:40:13.584Z appoptics:patching patched https 
2022-02-23T04:40:13.584Z appoptics:patching patched http 
2022-02-23T04:40:13.613Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:40:13.614Z appoptics:patching patched fs 
2022-02-23T04:40:13.623Z appoptics:patching patched pg 8.5.0
2022-02-23T04:40:13.643Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (86ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (977ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (236ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (227ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (60ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (239ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (985ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (237ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (245ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.1
updated 1 package and audited 913 packages in 4.077s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:40:24.172Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:40:24.173Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:40:24.173Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:40:24.173Z appoptics:debug using context provider: ace-context
2022-02-23T04:40:24.218Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:40:24.355Z appoptics:patching patched crypto 
2022-02-23T04:40:24.372Z appoptics:patching patched https 
2022-02-23T04:40:24.372Z appoptics:patching patched http 
2022-02-23T04:40:24.401Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:40:24.402Z appoptics:patching patched fs 
2022-02-23T04:40:24.411Z appoptics:patching patched pg 8.5.1
2022-02-23T04:40:24.431Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (83ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (978ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (236ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (68ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises (42ms)
        ✓ should trace a prepared statement using a callback (209ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (220ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (213ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (964ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (216ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (223ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (216ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.6.0
updated 1 package and audited 913 packages in 4.36s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:40:35.196Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:40:35.197Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:40:35.197Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:40:35.197Z appoptics:debug using context provider: ace-context
2022-02-23T04:40:35.241Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:40:35.380Z appoptics:patching patched crypto 
2022-02-23T04:40:35.397Z appoptics:patching patched https 
2022-02-23T04:40:35.397Z appoptics:patching patched http 
2022-02-23T04:40:35.427Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:40:35.427Z appoptics:patching patched fs 
2022-02-23T04:40:35.437Z appoptics:patching patched pg 8.6.0
2022-02-23T04:40:35.457Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (98ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (976ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (227ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (237ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (232ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (72ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (224ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (243ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (227ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (978ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (236ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (230ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.0
updated 1 package and audited 913 packages in 3.753s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:40:45.707Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:40:45.707Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:40:45.708Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:40:45.708Z appoptics:debug using context provider: ace-context
2022-02-23T04:40:45.752Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:40:45.888Z appoptics:patching patched crypto 
2022-02-23T04:40:45.905Z appoptics:patching patched https 
2022-02-23T04:40:45.906Z appoptics:patching patched http 
2022-02-23T04:40:45.936Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:40:45.936Z appoptics:patching patched fs 
2022-02-23T04:40:45.946Z appoptics:patching patched pg 8.7.0
2022-02-23T04:40:45.966Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (100ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (979ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (237ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (228ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (76ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (222ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (234ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (228ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (980ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (232ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (241ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 913 packages in 3.536s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:40:56.053Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:40:56.053Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:40:56.053Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:40:56.054Z appoptics:debug using context provider: ace-context
2022-02-23T04:40:56.111Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:40:56.267Z appoptics:patching patched crypto 
2022-02-23T04:40:56.284Z appoptics:patching patched https 
2022-02-23T04:40:56.284Z appoptics:patching patched http 
2022-02-23T04:40:56.336Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:40:56.336Z appoptics:patching patched fs 
2022-02-23T04:40:56.347Z appoptics:patching patched pg 8.7.1
2022-02-23T04:40:56.370Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (125ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (40ms)
        ✓ should trace a basic query using callback (964ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (215ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (225ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (217ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (72ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (223ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (243ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (980ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (231ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (240ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.3
updated 1 package and audited 913 packages in 3.593s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-02-23T04:41:06.453Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-02-23T04:41:06.454Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-02-23T04:41:06.454Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-02-23T04:41:06.455Z appoptics:debug using context provider: ace-context
2022-02-23T04:41:06.498Z appoptics:debug apm 10.2.1, bindings 11.2.0, oboe 10.2.0
2022-02-23T04:41:06.632Z appoptics:patching patched crypto 
2022-02-23T04:41:06.647Z appoptics:patching patched https 
2022-02-23T04:41:06.648Z appoptics:patching patched http 
2022-02-23T04:41:06.679Z appoptics:patching fs.realpath - adding native method
2022-02-23T04:41:06.679Z appoptics:patching patched fs 
2022-02-23T04:41:06.688Z appoptics:patching patched pg 8.7.3
2022-02-23T04:41:06.708Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context (98ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (979ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (229ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (238ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (73ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (221ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (232ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (222ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (976ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (226ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (235ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (227ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.3
updated 1 package and audited 913 packages in 3.459s

83 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (3 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
