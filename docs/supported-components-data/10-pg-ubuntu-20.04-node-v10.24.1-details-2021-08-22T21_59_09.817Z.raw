npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.5
added 4 packages from 7 contributors, removed 4 packages, updated 7 packages and audited 939 packages in 4.239s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:15.820Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:15.821Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:15.822Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:15.822Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:15.874Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:15.941Z appoptics:patching patched crypto 
2021-08-22T21:59:16.007Z appoptics:patching patched https 
2021-08-22T21:59:16.007Z appoptics:patching patched http 
2021-08-22T21:59:16.058Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:16.059Z appoptics:patching patched fs 
2021-08-22T21:59:16.093Z appoptics:patching probes.generic-pool "acquire()" not found
2021-08-22T21:59:16.093Z appoptics:patching patched generic-pool 2.1.1
2021-08-22T21:59:16.097Z appoptics:patching patched pg 4.5.5
2021-08-22T21:59:16.138Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (171ms)
  2 failing

  1) probes.pg 4.5.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 4.5.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.6
updated 2 packages and audited 939 packages in 4.009s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:21.542Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:21.543Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:21.543Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:21.544Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:21.600Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:21.662Z appoptics:patching patched crypto 
2021-08-22T21:59:21.692Z appoptics:patching patched https 
2021-08-22T21:59:21.692Z appoptics:patching patched http 
2021-08-22T21:59:21.728Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:21.728Z appoptics:patching patched fs 
2021-08-22T21:59:21.748Z appoptics:patching patched generic-pool 2.4.2
2021-08-22T21:59:21.749Z appoptics:patching patched pg 4.5.6
2021-08-22T21:59:21.779Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (97ms)
  2 failing

  1) probes.pg 4.5.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 4.5.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.7
added 1 package from 2 contributors, updated 1 package and audited 940 packages in 3.902s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:27.191Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:27.192Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:27.192Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:27.193Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:27.244Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:27.289Z appoptics:patching patched crypto 
2021-08-22T21:59:27.320Z appoptics:patching patched https 
2021-08-22T21:59:27.320Z appoptics:patching patched http 
2021-08-22T21:59:27.345Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:27.345Z appoptics:patching patched fs 
2021-08-22T21:59:27.366Z appoptics:patching patched generic-pool 2.4.2
2021-08-22T21:59:27.368Z appoptics:patching patched pg 4.5.7
2021-08-22T21:59:27.404Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.7
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (121ms)
  2 failing

  1) probes.pg 4.5.7
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 4.5.7
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.0.0
removed 1 package, updated 3 packages and audited 939 packages in 4.323s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:33.156Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:33.158Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:33.158Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:33.159Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:33.209Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:33.269Z appoptics:patching patched crypto 
2021-08-22T21:59:33.301Z appoptics:patching patched https 
2021-08-22T21:59:33.302Z appoptics:patching patched http 
2021-08-22T21:59:33.338Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:33.339Z appoptics:patching patched fs 
2021-08-22T21:59:33.359Z appoptics:patching patched generic-pool 2.4.2
2021-08-22T21:59:33.361Z appoptics:patching patched pg 5.0.0
2021-08-22T21:59:33.396Z appoptics:debug starting runtimeMetrics


  probes.pg 5.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (102ms)
  2 failing

  1) probes.pg 5.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 5.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.1.0
updated 2 packages and audited 939 packages in 4.144s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:38.912Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:38.913Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:38.914Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:38.914Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:38.984Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:39.036Z appoptics:patching patched crypto 
2021-08-22T21:59:39.067Z appoptics:patching patched https 
2021-08-22T21:59:39.067Z appoptics:patching patched http 
2021-08-22T21:59:39.111Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:39.111Z appoptics:patching patched fs 
2021-08-22T21:59:39.139Z appoptics:patching patched generic-pool 2.4.2
2021-08-22T21:59:39.140Z appoptics:patching patched pg 5.1.0
2021-08-22T21:59:39.176Z appoptics:debug starting runtimeMetrics


  probes.pg 5.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (94ms)
  2 failing

  1) probes.pg 5.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 5.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.2.1
added 4 packages from 16 contributors, removed 1 package, updated 1 package and audited 942 packages in 3.608s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:44.086Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:44.088Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:44.088Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:44.088Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:44.142Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:44.206Z appoptics:patching patched crypto 
2021-08-22T21:59:44.246Z appoptics:patching patched https 
2021-08-22T21:59:44.247Z appoptics:patching patched http 
2021-08-22T21:59:44.285Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:44.286Z appoptics:patching patched fs 
2021-08-22T21:59:44.310Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T21:59:44.312Z appoptics:patching patched pg 5.2.1
2021-08-22T21:59:44.342Z appoptics:debug starting runtimeMetrics


  probes.pg 5.2.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (96ms)
  2 failing

  1) probes.pg 5.2.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 5.2.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.0
removed 1 package, updated 1 package and audited 941 packages in 5.198s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:50.965Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:50.966Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:50.966Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:50.967Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:51.019Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:51.065Z appoptics:patching patched crypto 
2021-08-22T21:59:51.097Z appoptics:patching patched https 
2021-08-22T21:59:51.098Z appoptics:patching patched http 
2021-08-22T21:59:51.123Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:51.123Z appoptics:patching patched fs 
2021-08-22T21:59:51.143Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T21:59:51.145Z appoptics:patching patched pg 6.0.0
2021-08-22T21:59:51.172Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (89ms)
  2 failing

  1) probes.pg 6.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.1
updated 1 package and audited 941 packages in 3.576s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T21:59:56.005Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T21:59:56.006Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T21:59:56.006Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T21:59:56.007Z appoptics:debug using context provider: ace-context
2021-08-22T21:59:56.057Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T21:59:56.101Z appoptics:patching patched crypto 
2021-08-22T21:59:56.131Z appoptics:patching patched https 
2021-08-22T21:59:56.131Z appoptics:patching patched http 
2021-08-22T21:59:56.156Z appoptics:patching fs.realpath - adding native method
2021-08-22T21:59:56.157Z appoptics:patching patched fs 
2021-08-22T21:59:56.176Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T21:59:56.177Z appoptics:patching patched pg 6.0.1
2021-08-22T21:59:56.206Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (112ms)
  2 failing

  1) probes.pg 6.0.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.2
updated 1 package and audited 941 packages in 4.678s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:02.140Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:02.141Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:02.141Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:02.142Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:02.192Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:02.238Z appoptics:patching patched crypto 
2021-08-22T22:00:02.272Z appoptics:patching patched https 
2021-08-22T22:00:02.272Z appoptics:patching patched http 
2021-08-22T22:00:02.297Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:02.297Z appoptics:patching patched fs 
2021-08-22T22:00:02.317Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:02.319Z appoptics:patching patched pg 6.0.2
2021-08-22T22:00:02.346Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (92ms)
  2 failing

  1) probes.pg 6.0.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.3
updated 1 package and audited 941 packages in 4.1s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:07.759Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:07.761Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:07.761Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:07.762Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:07.816Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:07.865Z appoptics:patching patched crypto 
2021-08-22T22:00:07.897Z appoptics:patching patched https 
2021-08-22T22:00:07.897Z appoptics:patching patched http 
2021-08-22T22:00:07.936Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:07.936Z appoptics:patching patched fs 
2021-08-22T22:00:07.975Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:07.977Z appoptics:patching patched pg 6.0.3
2021-08-22T22:00:08.000Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (97ms)
  2 failing

  1) probes.pg 6.0.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.4
added 2 packages from 1 contributor, removed 2 packages, updated 2 packages and audited 941 packages in 4.62s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:13.913Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:13.915Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:13.915Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:13.916Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:13.966Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:14.013Z appoptics:patching patched crypto 
2021-08-22T22:00:14.045Z appoptics:patching patched https 
2021-08-22T22:00:14.046Z appoptics:patching patched http 
2021-08-22T22:00:14.073Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:14.073Z appoptics:patching patched fs 
2021-08-22T22:00:14.103Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:14.110Z appoptics:patching patched pg 6.0.4
2021-08-22T22:00:14.133Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (109ms)
  2 failing

  1) probes.pg 6.0.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.5
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 3.618s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:19.077Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:19.078Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:19.078Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:19.079Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:19.138Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:19.185Z appoptics:patching patched crypto 
2021-08-22T22:00:19.214Z appoptics:patching patched https 
2021-08-22T22:00:19.214Z appoptics:patching patched http 
2021-08-22T22:00:19.241Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:19.241Z appoptics:patching patched fs 
2021-08-22T22:00:19.270Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:19.272Z appoptics:patching patched pg 6.0.5
2021-08-22T22:00:19.297Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (87ms)
  2 failing

  1) probes.pg 6.0.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.0.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.0
removed 1 package, updated 1 package and audited 941 packages in 4.314s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:24.895Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:24.897Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:24.897Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:24.897Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:24.947Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:24.992Z appoptics:patching patched crypto 
2021-08-22T22:00:25.030Z appoptics:patching patched https 
2021-08-22T22:00:25.030Z appoptics:patching patched http 
2021-08-22T22:00:25.056Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:25.056Z appoptics:patching patched fs 
2021-08-22T22:00:25.086Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:25.088Z appoptics:patching patched pg 6.1.0
2021-08-22T22:00:25.117Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (95ms)
  2 failing

  1) probes.pg 6.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.1
updated 1 package and audited 941 packages in 3.604s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:29.973Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:29.975Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:29.975Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:29.975Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:30.027Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:30.072Z appoptics:patching patched crypto 
2021-08-22T22:00:30.101Z appoptics:patching patched https 
2021-08-22T22:00:30.101Z appoptics:patching patched http 
2021-08-22T22:00:30.127Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:30.127Z appoptics:patching patched fs 
2021-08-22T22:00:30.154Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:30.156Z appoptics:patching patched pg 6.1.1
2021-08-22T22:00:30.180Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (92ms)
  2 failing

  1) probes.pg 6.1.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.2
updated 1 package and audited 941 packages in 4.42s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:36.039Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:36.040Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:36.041Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:36.041Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:36.092Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:36.138Z appoptics:patching patched crypto 
2021-08-22T22:00:36.167Z appoptics:patching patched https 
2021-08-22T22:00:36.168Z appoptics:patching patched http 
2021-08-22T22:00:36.193Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:36.193Z appoptics:patching patched fs 
2021-08-22T22:00:36.222Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:36.224Z appoptics:patching patched pg 6.1.2
2021-08-22T22:00:36.246Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (86ms)
  2 failing

  1) probes.pg 6.1.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.3
updated 1 package and audited 941 packages in 3.682s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:41.192Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:41.193Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:41.193Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:41.194Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:41.246Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:41.292Z appoptics:patching patched crypto 
2021-08-22T22:00:41.323Z appoptics:patching patched https 
2021-08-22T22:00:41.323Z appoptics:patching patched http 
2021-08-22T22:00:41.349Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:41.349Z appoptics:patching patched fs 
2021-08-22T22:00:41.376Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:41.379Z appoptics:patching patched pg 6.1.3
2021-08-22T22:00:41.406Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (99ms)
  2 failing

  1) probes.pg 6.1.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.4
updated 1 package and audited 941 packages in 4.038s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:46.921Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:46.922Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:46.922Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:46.923Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:46.997Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:47.046Z appoptics:patching patched crypto 
2021-08-22T22:00:47.077Z appoptics:patching patched https 
2021-08-22T22:00:47.077Z appoptics:patching patched http 
2021-08-22T22:00:47.117Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:47.117Z appoptics:patching patched fs 
2021-08-22T22:00:47.153Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:47.156Z appoptics:patching patched pg 6.1.4
2021-08-22T22:00:47.191Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (124ms)
  2 failing

  1) probes.pg 6.1.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.5
updated 1 package and audited 941 packages in 3.624s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:52.259Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:52.261Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:52.261Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:52.262Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:52.314Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:52.365Z appoptics:patching patched crypto 
2021-08-22T22:00:52.396Z appoptics:patching patched https 
2021-08-22T22:00:52.396Z appoptics:patching patched http 
2021-08-22T22:00:52.423Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:52.423Z appoptics:patching patched fs 
2021-08-22T22:00:52.451Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:52.457Z appoptics:patching patched pg 6.1.5
2021-08-22T22:00:52.481Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (93ms)
  2 failing

  1) probes.pg 6.1.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.6
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 3.894s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:00:57.644Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:00:57.646Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:00:57.646Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:00:57.646Z appoptics:debug using context provider: ace-context
2021-08-22T22:00:57.697Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:00:57.744Z appoptics:patching patched crypto 
2021-08-22T22:00:57.785Z appoptics:patching patched https 
2021-08-22T22:00:57.786Z appoptics:patching patched http 
2021-08-22T22:00:57.814Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:00:57.814Z appoptics:patching patched fs 
2021-08-22T22:00:57.857Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:00:57.859Z appoptics:patching patched pg 6.1.6
2021-08-22T22:00:57.882Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (117ms)
  2 failing

  1) probes.pg 6.1.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.1.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.2
removed 1 package, updated 2 packages and audited 941 packages in 4.648s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:03.987Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:03.988Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:03.988Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:03.989Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:04.041Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:04.087Z appoptics:patching patched crypto 
2021-08-22T22:01:04.116Z appoptics:patching patched https 
2021-08-22T22:01:04.116Z appoptics:patching patched http 
2021-08-22T22:01:04.142Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:04.142Z appoptics:patching patched fs 
2021-08-22T22:01:04.169Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:04.172Z appoptics:patching patched pg 6.2.2
2021-08-22T22:01:04.196Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (91ms)
  2 failing

  1) probes.pg 6.2.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.2.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.3
updated 1 package and audited 941 packages in 4.329s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:09.757Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:09.758Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:09.759Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:09.759Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:09.814Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:09.865Z appoptics:patching patched crypto 
2021-08-22T22:01:09.896Z appoptics:patching patched https 
2021-08-22T22:01:09.896Z appoptics:patching patched http 
2021-08-22T22:01:09.922Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:09.924Z appoptics:patching patched fs 
2021-08-22T22:01:09.952Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:09.954Z appoptics:patching patched pg 6.2.3
2021-08-22T22:01:09.983Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (89ms)
  2 failing

  1) probes.pg 6.2.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.2.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.4
updated 1 package and audited 941 packages in 4.612s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:15.917Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:15.918Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:15.918Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:15.920Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:15.972Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:16.019Z appoptics:patching patched crypto 
2021-08-22T22:01:16.054Z appoptics:patching patched https 
2021-08-22T22:01:16.054Z appoptics:patching patched http 
2021-08-22T22:01:16.082Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:16.083Z appoptics:patching patched fs 
2021-08-22T22:01:16.110Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:16.113Z appoptics:patching patched pg 6.2.4
2021-08-22T22:01:16.138Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (82ms)
  2 failing

  1) probes.pg 6.2.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.2.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.5
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 4.287s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:21.676Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:21.677Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:21.677Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:21.678Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:21.729Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:21.774Z appoptics:patching patched crypto 
2021-08-22T22:01:21.804Z appoptics:patching patched https 
2021-08-22T22:01:21.804Z appoptics:patching patched http 
2021-08-22T22:01:21.831Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:21.831Z appoptics:patching patched fs 
2021-08-22T22:01:21.859Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:21.861Z appoptics:patching patched pg 6.2.5
2021-08-22T22:01:21.886Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (108ms)
  2 failing

  1) probes.pg 6.2.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.2.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.0
removed 1 package, updated 1 package and audited 941 packages in 4.688s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:27.932Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:27.934Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:27.934Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:27.934Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:27.985Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:28.033Z appoptics:patching patched crypto 
2021-08-22T22:01:28.064Z appoptics:patching patched https 
2021-08-22T22:01:28.064Z appoptics:patching patched http 
2021-08-22T22:01:28.096Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:28.097Z appoptics:patching patched fs 
2021-08-22T22:01:28.129Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:28.131Z appoptics:patching patched pg 6.3.0
2021-08-22T22:01:28.154Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1016) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1016) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (96ms)
  2 failing

  1) probes.pg 6.3.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.3.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.1
updated 1 package and audited 941 packages in 4.488s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:33.849Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:33.850Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:33.850Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:33.851Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:33.902Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:33.946Z appoptics:patching patched crypto 
2021-08-22T22:01:33.975Z appoptics:patching patched https 
2021-08-22T22:01:33.976Z appoptics:patching patched http 
2021-08-22T22:01:34.001Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:34.002Z appoptics:patching patched fs 
2021-08-22T22:01:34.029Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:34.031Z appoptics:patching patched pg 6.3.1
2021-08-22T22:01:34.061Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1039) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1039) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (87ms)
  2 failing

  1) probes.pg 6.3.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.3.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.3
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 4.268s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:39.570Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:39.572Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:39.572Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:39.572Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:39.623Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:39.671Z appoptics:patching patched crypto 
2021-08-22T22:01:39.701Z appoptics:patching patched https 
2021-08-22T22:01:39.701Z appoptics:patching patched http 
2021-08-22T22:01:39.727Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:39.727Z appoptics:patching patched fs 
2021-08-22T22:01:39.755Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:39.757Z appoptics:patching patched pg 6.3.3
2021-08-22T22:01:39.783Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1062) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1062) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (87ms)
  2 failing

  1) probes.pg 6.3.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.3.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.0
removed 1 package, updated 1 package and audited 941 packages in 3.715s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:44.848Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:44.849Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:44.849Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:44.850Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:44.905Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:44.952Z appoptics:patching patched crypto 
2021-08-22T22:01:44.983Z appoptics:patching patched https 
2021-08-22T22:01:44.983Z appoptics:patching patched http 
2021-08-22T22:01:45.022Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:45.023Z appoptics:patching patched fs 
2021-08-22T22:01:45.055Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:45.058Z appoptics:patching patched pg 6.4.0
2021-08-22T22:01:45.087Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1085) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1085) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (91ms)
  2 failing

  1) probes.pg 6.4.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.4.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.1
updated 1 package and audited 941 packages in 4.314s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:50.645Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:50.647Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:50.647Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:50.648Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:50.698Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:50.744Z appoptics:patching patched crypto 
2021-08-22T22:01:50.774Z appoptics:patching patched https 
2021-08-22T22:01:50.775Z appoptics:patching patched http 
2021-08-22T22:01:50.811Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:50.811Z appoptics:patching patched fs 
2021-08-22T22:01:50.861Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:50.863Z appoptics:patching patched pg 6.4.1
2021-08-22T22:01:50.891Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1108) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1108) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (114ms)
  2 failing

  1) probes.pg 6.4.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.4.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.2
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 3.749s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:01:56.018Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:01:56.019Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:01:56.019Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:01:56.020Z appoptics:debug using context provider: ace-context
2021-08-22T22:01:56.070Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:01:56.119Z appoptics:patching patched crypto 
2021-08-22T22:01:56.169Z appoptics:patching patched https 
2021-08-22T22:01:56.169Z appoptics:patching patched http 
2021-08-22T22:01:56.213Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:01:56.213Z appoptics:patching patched fs 
2021-08-22T22:01:56.257Z appoptics:patching patched generic-pool 2.4.3
2021-08-22T22:01:56.260Z appoptics:patching patched pg 6.4.2
2021-08-22T22:01:56.291Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1131) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1131) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (89ms)
  2 failing

  1) probes.pg 6.4.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)

  2) probes.pg 6.4.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.5.0
removed 3 packages, updated 3 packages and audited 939 packages in 4.43s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:01.993Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:01.994Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:01.994Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:01.995Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:02.062Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:02.114Z appoptics:patching patched crypto 
2021-08-22T22:02:02.151Z appoptics:patching patched https 
2021-08-22T22:02:02.151Z appoptics:patching patched http 
2021-08-22T22:02:02.196Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:02.196Z appoptics:patching patched fs 
2021-08-22T22:02:02.229Z appoptics:patching patched pg 7.5.0
2021-08-22T22:02:02.272Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.0
updated 1 package and audited 939 packages in 3.997s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:13.294Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:13.295Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:13.295Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:13.296Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:13.360Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:13.417Z appoptics:patching patched crypto 
2021-08-22T22:02:13.447Z appoptics:patching patched https 
2021-08-22T22:02:13.447Z appoptics:patching patched http 
2021-08-22T22:02:13.491Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:13.492Z appoptics:patching patched fs 
2021-08-22T22:02:13.511Z appoptics:patching patched pg 7.6.0
2021-08-22T22:02:13.550Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.1
updated 2 packages and audited 939 packages in 4.475s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:25.117Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:25.119Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:25.119Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:25.120Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:25.213Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:25.281Z appoptics:patching patched crypto 
2021-08-22T22:02:25.321Z appoptics:patching patched https 
2021-08-22T22:02:25.321Z appoptics:patching patched http 
2021-08-22T22:02:25.378Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:25.379Z appoptics:patching patched fs 
2021-08-22T22:02:25.408Z appoptics:patching patched pg 7.6.1
2021-08-22T22:02:25.464Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises (39ms)
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.0
updated 1 package and audited 939 packages in 3.978s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:36.313Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:36.315Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:36.315Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:36.316Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:36.392Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:36.442Z appoptics:patching patched crypto 
2021-08-22T22:02:36.476Z appoptics:patching patched https 
2021-08-22T22:02:36.476Z appoptics:patching patched http 
2021-08-22T22:02:36.516Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:36.517Z appoptics:patching patched fs 
2021-08-22T22:02:36.544Z appoptics:patching patched pg 7.7.0
2021-08-22T22:02:36.584Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (42ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.1
updated 1 package and audited 939 packages in 3.817s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:47.165Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:47.167Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:47.167Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:47.168Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:47.220Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:47.270Z appoptics:patching patched crypto 
2021-08-22T22:02:47.303Z appoptics:patching patched https 
2021-08-22T22:02:47.303Z appoptics:patching patched http 
2021-08-22T22:02:47.334Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:47.334Z appoptics:patching patched fs 
2021-08-22T22:02:47.364Z appoptics:patching patched pg 7.7.1
2021-08-22T22:02:47.389Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.0
updated 3 packages and audited 939 packages in 4.332s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:02:58.348Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:02:58.349Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:02:58.349Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:02:58.350Z appoptics:debug using context provider: ace-context
2021-08-22T22:02:58.402Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:02:58.449Z appoptics:patching patched crypto 
2021-08-22T22:02:58.485Z appoptics:patching patched https 
2021-08-22T22:02:58.485Z appoptics:patching patched http 
2021-08-22T22:02:58.517Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:02:58.518Z appoptics:patching patched fs 
2021-08-22T22:02:58.545Z appoptics:patching patched pg 7.8.0
2021-08-22T22:02:58.571Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.1
updated 2 packages and audited 939 packages in 3.688s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:08.929Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:08.931Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:08.931Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:08.932Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:08.996Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:09.047Z appoptics:patching patched crypto 
2021-08-22T22:03:09.080Z appoptics:patching patched https 
2021-08-22T22:03:09.080Z appoptics:patching patched http 
2021-08-22T22:03:09.111Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:09.111Z appoptics:patching patched fs 
2021-08-22T22:03:09.129Z appoptics:patching patched pg 7.8.1
2021-08-22T22:03:09.159Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.2
updated 1 package and audited 939 packages in 3.71s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:19.512Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:19.514Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:19.514Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:19.515Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:19.585Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:19.638Z appoptics:patching patched crypto 
2021-08-22T22:03:19.672Z appoptics:patching patched https 
2021-08-22T22:03:19.673Z appoptics:patching patched http 
2021-08-22T22:03:19.718Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:19.718Z appoptics:patching patched fs 
2021-08-22T22:03:19.749Z appoptics:patching patched pg 7.8.2
2021-08-22T22:03:19.790Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.9.0
updated 1 package and audited 939 packages in 3.826s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:30.314Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:30.316Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:30.316Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:30.317Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:30.366Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:30.422Z appoptics:patching patched crypto 
2021-08-22T22:03:30.453Z appoptics:patching patched https 
2021-08-22T22:03:30.453Z appoptics:patching patched http 
2021-08-22T22:03:30.499Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:30.499Z appoptics:patching patched fs 
2021-08-22T22:03:30.523Z appoptics:patching patched pg 7.9.0
2021-08-22T22:03:30.577Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.9.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.9.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.10.0
updated 1 package and audited 939 packages in 3.76s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:40.957Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:40.958Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:40.958Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:40.959Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:41.014Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:41.064Z appoptics:patching patched crypto 
2021-08-22T22:03:41.106Z appoptics:patching patched https 
2021-08-22T22:03:41.106Z appoptics:patching patched http 
2021-08-22T22:03:41.140Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:41.140Z appoptics:patching patched fs 
2021-08-22T22:03:41.160Z appoptics:patching patched pg 7.10.0
2021-08-22T22:03:41.189Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.10.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.10.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (258ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.11.0
updated 1 package and audited 939 packages in 3.8s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:03:51.568Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:03:51.569Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:03:51.569Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:03:51.570Z appoptics:debug using context provider: ace-context
2021-08-22T22:03:51.621Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:03:51.668Z appoptics:patching patched crypto 
2021-08-22T22:03:51.707Z appoptics:patching patched https 
2021-08-22T22:03:51.707Z appoptics:patching patched http 
2021-08-22T22:03:51.753Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:03:51.753Z appoptics:patching patched fs 
2021-08-22T22:03:51.794Z appoptics:patching patched pg 7.11.0
2021-08-22T22:03:51.822Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.11.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.11.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.0
updated 1 package and audited 939 packages in 3.685s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:02.111Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:02.112Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:02.112Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:02.113Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:02.164Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:02.210Z appoptics:patching patched crypto 
2021-08-22T22:04:02.240Z appoptics:patching patched https 
2021-08-22T22:04:02.240Z appoptics:patching patched http 
2021-08-22T22:04:02.270Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:02.271Z appoptics:patching patched fs 
2021-08-22T22:04:02.291Z appoptics:patching patched pg 7.12.0
2021-08-22T22:04:02.322Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (41ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.1
updated 2 packages and audited 939 packages in 3.778s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:12.813Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:12.814Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:12.814Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:12.815Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:12.866Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:12.911Z appoptics:patching patched crypto 
2021-08-22T22:04:12.941Z appoptics:patching patched https 
2021-08-22T22:04:12.941Z appoptics:patching patched http 
2021-08-22T22:04:12.972Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:12.973Z appoptics:patching patched fs 
2021-08-22T22:04:12.996Z appoptics:patching patched pg 7.12.1
2021-08-22T22:04:13.027Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.13.0
updated 1 package and audited 939 packages in 4.305s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:24.190Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:24.192Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:24.192Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:24.192Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:24.257Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:24.307Z appoptics:patching patched crypto 
2021-08-22T22:04:24.338Z appoptics:patching patched https 
2021-08-22T22:04:24.338Z appoptics:patching patched http 
2021-08-22T22:04:24.390Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:24.391Z appoptics:patching patched fs 
2021-08-22T22:04:24.410Z appoptics:patching patched pg 7.13.0
2021-08-22T22:04:24.440Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.13.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.13.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.14.0
updated 1 package and audited 939 packages in 4.202s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:35.439Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:35.441Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:35.441Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:35.442Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:35.491Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:35.539Z appoptics:patching patched crypto 
2021-08-22T22:04:35.576Z appoptics:patching patched https 
2021-08-22T22:04:35.576Z appoptics:patching patched http 
2021-08-22T22:04:35.609Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:35.609Z appoptics:patching patched fs 
2021-08-22T22:04:35.635Z appoptics:patching patched pg 7.14.0
2021-08-22T22:04:35.666Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.14.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.14.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (252ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (259ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.0
updated 1 package and audited 939 packages in 4.509s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:46.751Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:46.753Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:46.753Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:46.753Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:46.807Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:46.854Z appoptics:patching patched crypto 
2021-08-22T22:04:46.884Z appoptics:patching patched https 
2021-08-22T22:04:46.885Z appoptics:patching patched http 
2021-08-22T22:04:46.916Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:46.916Z appoptics:patching patched fs 
2021-08-22T22:04:46.936Z appoptics:patching patched pg 7.15.0
2021-08-22T22:04:46.963Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (231ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.1
updated 1 package and audited 939 packages in 4.573s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:04:58.037Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:04:58.038Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:04:58.039Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:04:58.039Z appoptics:debug using context provider: ace-context
2021-08-22T22:04:58.090Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:04:58.134Z appoptics:patching patched crypto 
2021-08-22T22:04:58.164Z appoptics:patching patched https 
2021-08-22T22:04:58.165Z appoptics:patching patched http 
2021-08-22T22:04:58.195Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:04:58.196Z appoptics:patching patched fs 
2021-08-22T22:04:58.216Z appoptics:patching patched pg 7.15.1
2021-08-22T22:04:58.243Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (997ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.2
updated 1 package and audited 939 packages in 4.783s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:09.567Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:09.568Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:09.568Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:09.570Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:09.645Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:09.690Z appoptics:patching patched crypto 
2021-08-22T22:05:09.719Z appoptics:patching patched https 
2021-08-22T22:05:09.719Z appoptics:patching patched http 
2021-08-22T22:05:09.749Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:09.750Z appoptics:patching patched fs 
2021-08-22T22:05:09.769Z appoptics:patching patched pg 7.15.2
2021-08-22T22:05:09.797Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (252ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.0
added 1 package, updated 1 package and audited 940 packages in 5.181s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:21.524Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:21.526Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:21.526Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:21.527Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:21.577Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:21.625Z appoptics:patching patched crypto 
2021-08-22T22:05:21.654Z appoptics:patching patched https 
2021-08-22T22:05:21.654Z appoptics:patching patched http 
2021-08-22T22:05:21.687Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:21.687Z appoptics:patching patched fs 
2021-08-22T22:05:21.706Z appoptics:patching patched pg 7.16.0
2021-08-22T22:05:21.734Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.1
updated 1 package and audited 940 packages in 5.111s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:33.363Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:33.365Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:33.365Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:33.366Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:33.416Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:33.462Z appoptics:patching patched crypto 
2021-08-22T22:05:33.491Z appoptics:patching patched https 
2021-08-22T22:05:33.491Z appoptics:patching patched http 
2021-08-22T22:05:33.522Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:33.523Z appoptics:patching patched fs 
2021-08-22T22:05:33.544Z appoptics:patching patched pg 7.16.1
2021-08-22T22:05:33.573Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.0
updated 1 package and audited 940 packages in 4.082s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:44.288Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:44.289Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:44.289Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:44.290Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:44.342Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:44.394Z appoptics:patching patched crypto 
2021-08-22T22:05:44.429Z appoptics:patching patched https 
2021-08-22T22:05:44.429Z appoptics:patching patched http 
2021-08-22T22:05:44.477Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:44.478Z appoptics:patching patched fs 
2021-08-22T22:05:44.525Z appoptics:patching patched pg 7.17.0
2021-08-22T22:05:44.569Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises (45ms)
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.1
updated 1 package and audited 940 packages in 3.854s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:05:55.094Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:05:55.096Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:05:55.096Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:05:55.097Z appoptics:debug using context provider: ace-context
2021-08-22T22:05:55.153Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:05:55.204Z appoptics:patching patched crypto 
2021-08-22T22:05:55.237Z appoptics:patching patched https 
2021-08-22T22:05:55.237Z appoptics:patching patched http 
2021-08-22T22:05:55.284Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:05:55.285Z appoptics:patching patched fs 
2021-08-22T22:05:55.306Z appoptics:patching patched pg 7.17.1
2021-08-22T22:05:55.340Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.0
updated 1 package and audited 940 packages in 4.557s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:06.583Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:06.584Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:06.585Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:06.585Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:06.648Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:06.701Z appoptics:patching patched crypto 
2021-08-22T22:06:06.732Z appoptics:patching patched https 
2021-08-22T22:06:06.732Z appoptics:patching patched http 
2021-08-22T22:06:06.783Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:06.784Z appoptics:patching patched fs 
2021-08-22T22:06:06.805Z appoptics:patching patched pg 7.18.0
2021-08-22T22:06:06.836Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.1
updated 1 package and audited 940 packages in 3.754s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:17.158Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:17.160Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:17.160Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:17.160Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:17.211Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:17.258Z appoptics:patching patched crypto 
2021-08-22T22:06:17.289Z appoptics:patching patched https 
2021-08-22T22:06:17.289Z appoptics:patching patched http 
2021-08-22T22:06:17.321Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:17.321Z appoptics:patching patched fs 
2021-08-22T22:06:17.341Z appoptics:patching patched pg 7.18.1
2021-08-22T22:06:17.371Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.2
updated 1 package and audited 940 packages in 4.266s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:28.148Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:28.149Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:28.149Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:28.150Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:28.203Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:28.250Z appoptics:patching patched crypto 
2021-08-22T22:06:28.281Z appoptics:patching patched https 
2021-08-22T22:06:28.281Z appoptics:patching patched http 
2021-08-22T22:06:28.311Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:28.312Z appoptics:patching patched fs 
2021-08-22T22:06:28.331Z appoptics:patching patched pg 7.18.2
2021-08-22T22:06:28.360Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (245ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.0
updated 2 packages and audited 940 packages in 3.748s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:38.596Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:38.597Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:38.597Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:38.598Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:38.648Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:38.694Z appoptics:patching patched crypto 
2021-08-22T22:06:38.722Z appoptics:patching patched https 
2021-08-22T22:06:38.723Z appoptics:patching patched http 
2021-08-22T22:06:38.754Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:38.754Z appoptics:patching patched fs 
2021-08-22T22:06:38.773Z appoptics:patching patched pg 8.0.0
2021-08-22T22:06:38.801Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.1
added 1 package, removed 1 package, updated 1 package and audited 940 packages in 4.423s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:06:49.804Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:06:49.805Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:06:49.805Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:06:49.806Z appoptics:debug using context provider: ace-context
2021-08-22T22:06:49.859Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:06:49.908Z appoptics:patching patched crypto 
2021-08-22T22:06:49.939Z appoptics:patching patched https 
2021-08-22T22:06:49.940Z appoptics:patching patched http 
2021-08-22T22:06:49.976Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:06:49.977Z appoptics:patching patched fs 
2021-08-22T22:06:49.997Z appoptics:patching patched pg 8.0.1
2021-08-22T22:06:50.027Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (251ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (246ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.2
updated 1 package and audited 940 packages in 3.773s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:00.443Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:00.444Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:00.444Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:00.445Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:00.495Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:00.541Z appoptics:patching patched crypto 
2021-08-22T22:07:00.571Z appoptics:patching patched https 
2021-08-22T22:07:00.571Z appoptics:patching patched http 
2021-08-22T22:07:00.603Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:00.603Z appoptics:patching patched fs 
2021-08-22T22:07:00.621Z appoptics:patching patched pg 8.0.2
2021-08-22T22:07:00.651Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.3
updated 1 package and audited 940 packages in 3.967s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:11.191Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:11.193Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:11.193Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:11.193Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:11.244Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:11.290Z appoptics:patching patched crypto 
2021-08-22T22:07:11.319Z appoptics:patching patched https 
2021-08-22T22:07:11.319Z appoptics:patching patched http 
2021-08-22T22:07:11.351Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:11.351Z appoptics:patching patched fs 
2021-08-22T22:07:11.370Z appoptics:patching patched pg 8.0.3
2021-08-22T22:07:11.399Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.1.0
updated 2 packages and audited 940 packages in 3.901s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:21.917Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:21.918Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:21.918Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:21.919Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:21.969Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:22.016Z appoptics:patching patched crypto 
2021-08-22T22:07:22.044Z appoptics:patching patched https 
2021-08-22T22:07:22.045Z appoptics:patching patched http 
2021-08-22T22:07:22.076Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:22.076Z appoptics:patching patched fs 
2021-08-22T22:07:22.100Z appoptics:patching patched pg 8.1.0
2021-08-22T22:07:22.128Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.1.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.1.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (42ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.0
updated 1 package and audited 940 packages in 4.091s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:32.777Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:32.779Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:32.779Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:32.780Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:32.830Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:32.876Z appoptics:patching patched crypto 
2021-08-22T22:07:32.914Z appoptics:patching patched https 
2021-08-22T22:07:32.914Z appoptics:patching patched http 
2021-08-22T22:07:32.944Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:32.945Z appoptics:patching patched fs 
2021-08-22T22:07:32.965Z appoptics:patching patched pg 8.2.0
2021-08-22T22:07:32.993Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.1
updated 1 package and audited 940 packages in 3.867s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:43.351Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:43.353Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:43.353Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:43.354Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:43.404Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:43.449Z appoptics:patching patched crypto 
2021-08-22T22:07:43.477Z appoptics:patching patched https 
2021-08-22T22:07:43.477Z appoptics:patching patched http 
2021-08-22T22:07:43.508Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:43.508Z appoptics:patching patched fs 
2021-08-22T22:07:43.530Z appoptics:patching patched pg 8.2.1
2021-08-22T22:07:43.558Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (252ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (246ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.2
updated 1 package and audited 940 packages in 3.758s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:07:53.942Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:07:53.943Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:07:53.944Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:07:53.944Z appoptics:debug using context provider: ace-context
2021-08-22T22:07:53.994Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:07:54.039Z appoptics:patching patched crypto 
2021-08-22T22:07:54.069Z appoptics:patching patched https 
2021-08-22T22:07:54.069Z appoptics:patching patched http 
2021-08-22T22:07:54.101Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:07:54.101Z appoptics:patching patched fs 
2021-08-22T22:07:54.123Z appoptics:patching patched pg 8.2.2
2021-08-22T22:07:54.152Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1003ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.0
updated 1 package and audited 940 packages in 4.377s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:05.055Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:05.057Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:05.057Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:05.057Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:05.108Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:05.155Z appoptics:patching patched crypto 
2021-08-22T22:08:05.185Z appoptics:patching patched https 
2021-08-22T22:08:05.186Z appoptics:patching patched http 
2021-08-22T22:08:05.217Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:05.218Z appoptics:patching patched fs 
2021-08-22T22:08:05.240Z appoptics:patching patched pg 8.3.0
2021-08-22T22:08:05.270Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.2
updated 1 package and audited 940 packages in 4.419s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:16.222Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:16.223Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:16.223Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:16.224Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:16.277Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:16.324Z appoptics:patching patched crypto 
2021-08-22T22:08:16.352Z appoptics:patching patched https 
2021-08-22T22:08:16.352Z appoptics:patching patched http 
2021-08-22T22:08:16.383Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:16.383Z appoptics:patching patched fs 
2021-08-22T22:08:16.405Z appoptics:patching patched pg 8.3.2
2021-08-22T22:08:16.432Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.3
updated 1 package and audited 940 packages in 4.341s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:27.414Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:27.416Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:27.416Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:27.417Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:27.467Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:27.512Z appoptics:patching patched crypto 
2021-08-22T22:08:27.542Z appoptics:patching patched https 
2021-08-22T22:08:27.543Z appoptics:patching patched http 
2021-08-22T22:08:27.573Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:27.574Z appoptics:patching patched fs 
2021-08-22T22:08:27.595Z appoptics:patching patched pg 8.3.3
2021-08-22T22:08:27.622Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.0
removed 1 package, updated 1 package and audited 939 packages in 3.775s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:38.093Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:38.095Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:38.095Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:38.096Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:38.161Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:38.219Z appoptics:patching patched crypto 
2021-08-22T22:08:38.251Z appoptics:patching patched https 
2021-08-22T22:08:38.251Z appoptics:patching patched http 
2021-08-22T22:08:38.296Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:38.296Z appoptics:patching patched fs 
2021-08-22T22:08:38.318Z appoptics:patching patched pg 8.4.0
2021-08-22T22:08:38.347Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (252ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.1
updated 1 package and audited 939 packages in 3.786s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:48.817Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:48.819Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:48.819Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:48.820Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:48.869Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:48.916Z appoptics:patching patched crypto 
2021-08-22T22:08:48.960Z appoptics:patching patched https 
2021-08-22T22:08:48.960Z appoptics:patching patched http 
2021-08-22T22:08:48.991Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:48.992Z appoptics:patching patched fs 
2021-08-22T22:08:49.022Z appoptics:patching patched pg 8.4.1
2021-08-22T22:08:49.045Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (245ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.2
updated 1 package and audited 939 packages in 3.607s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:08:59.342Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:08:59.344Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:08:59.344Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:08:59.345Z appoptics:debug using context provider: ace-context
2021-08-22T22:08:59.408Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:08:59.464Z appoptics:patching patched crypto 
2021-08-22T22:08:59.495Z appoptics:patching patched https 
2021-08-22T22:08:59.495Z appoptics:patching patched http 
2021-08-22T22:08:59.539Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:08:59.539Z appoptics:patching patched fs 
2021-08-22T22:08:59.564Z appoptics:patching patched pg 8.4.2
2021-08-22T22:08:59.590Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (250ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.0
updated 1 package and audited 939 packages in 3.513s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:09.668Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:09.669Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:09.670Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:09.670Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:09.725Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:09.777Z appoptics:patching patched crypto 
2021-08-22T22:09:09.808Z appoptics:patching patched https 
2021-08-22T22:09:09.808Z appoptics:patching patched http 
2021-08-22T22:09:09.857Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:09.857Z appoptics:patching patched fs 
2021-08-22T22:09:09.882Z appoptics:patching patched pg 8.5.0
2021-08-22T22:09:09.905Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (245ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.1
updated 1 package and audited 939 packages in 3.707s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:20.171Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:20.172Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:20.172Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:20.173Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:20.223Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:20.269Z appoptics:patching patched crypto 
2021-08-22T22:09:20.299Z appoptics:patching patched https 
2021-08-22T22:09:20.300Z appoptics:patching patched http 
2021-08-22T22:09:20.330Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:20.330Z appoptics:patching patched fs 
2021-08-22T22:09:20.354Z appoptics:patching patched pg 8.5.1
2021-08-22T22:09:20.381Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (247ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (246ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.6.0
updated 1 package and audited 939 packages in 3.491s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:30.404Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:30.406Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:30.406Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:30.406Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:30.457Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:30.502Z appoptics:patching patched crypto 
2021-08-22T22:09:30.531Z appoptics:patching patched https 
2021-08-22T22:09:30.532Z appoptics:patching patched http 
2021-08-22T22:09:30.563Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:30.563Z appoptics:patching patched fs 
2021-08-22T22:09:30.585Z appoptics:patching patched pg 8.6.0
2021-08-22T22:09:30.611Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (246ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.0
updated 1 package and audited 939 packages in 3.482s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:40.602Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:40.604Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:40.604Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:40.605Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:40.655Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:40.700Z appoptics:patching patched crypto 
2021-08-22T22:09:40.729Z appoptics:patching patched https 
2021-08-22T22:09:40.730Z appoptics:patching patched http 
2021-08-22T22:09:40.760Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:40.761Z appoptics:patching patched fs 
2021-08-22T22:09:40.782Z appoptics:patching patched pg 8.7.0
2021-08-22T22:09:40.808Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 939 packages in 3.898s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-22T22:09:51.321Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-22T22:09:51.323Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-22T22:09:51.323Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-22T22:09:51.324Z appoptics:debug using context provider: ace-context
2021-08-22T22:09:51.382Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-22T22:09:51.429Z appoptics:patching patched crypto 
2021-08-22T22:09:51.460Z appoptics:patching patched https 
2021-08-22T22:09:51.460Z appoptics:patching patched http 
2021-08-22T22:09:51.493Z appoptics:patching fs.realpath - adding native method
2021-08-22T22:09:51.493Z appoptics:patching patched fs 
2021-08-22T22:09:51.523Z appoptics:patching patched pg 8.7.1
2021-08-22T22:09:51.552Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 939 packages in 4.384s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
