npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.5
added 4 packages from 7 contributors, removed 4 packages, updated 7 packages and audited 939 packages in 4.514s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:10:32.387Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:10:32.388Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:10:32.388Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:10:32.389Z appoptics:debug using context provider: ace-context
2021-08-24T05:10:32.456Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:10:32.501Z appoptics:patching patched crypto 
2021-08-24T05:10:32.523Z appoptics:patching patched https 
2021-08-24T05:10:32.523Z appoptics:patching patched http 
2021-08-24T05:10:32.574Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:10:32.575Z appoptics:patching patched fs 
2021-08-24T05:10:32.591Z appoptics:patching probes.generic-pool "acquire()" not found
2021-08-24T05:10:32.592Z appoptics:patching patched generic-pool 2.1.1
2021-08-24T05:10:32.593Z appoptics:patching patched pg 4.5.5
2021-08-24T05:10:32.620Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (170ms)
  2 failing

  1) probes.pg 4.5.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 4.5.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.6
updated 2 packages and audited 939 packages in 4.51s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:10:38.713Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:10:38.714Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:10:38.714Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:10:38.715Z appoptics:debug using context provider: ace-context
2021-08-24T05:10:38.842Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:10:38.890Z appoptics:patching patched crypto 
2021-08-24T05:10:38.909Z appoptics:patching patched https 
2021-08-24T05:10:38.909Z appoptics:patching patched http 
2021-08-24T05:10:38.943Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:10:38.943Z appoptics:patching patched fs 
2021-08-24T05:10:38.959Z appoptics:patching patched generic-pool 2.4.2
2021-08-24T05:10:38.960Z appoptics:patching patched pg 4.5.6
2021-08-24T05:10:38.981Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (84ms)
  2 failing

  1) probes.pg 4.5.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 4.5.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.7
added 1 package from 2 contributors, updated 1 package and audited 940 packages in 3.862s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:10:43.961Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:10:43.961Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:10:43.961Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:10:43.962Z appoptics:debug using context provider: ace-context
2021-08-24T05:10:44.009Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:10:44.045Z appoptics:patching patched crypto 
2021-08-24T05:10:44.062Z appoptics:patching patched https 
2021-08-24T05:10:44.062Z appoptics:patching patched http 
2021-08-24T05:10:44.096Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:10:44.096Z appoptics:patching patched fs 
2021-08-24T05:10:44.112Z appoptics:patching patched generic-pool 2.4.2
2021-08-24T05:10:44.113Z appoptics:patching patched pg 4.5.7
2021-08-24T05:10:44.133Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.7
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (92ms)
  2 failing

  1) probes.pg 4.5.7
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 4.5.7
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.0.0
removed 1 package, updated 3 packages and audited 939 packages in 4.475s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:10:49.901Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:10:49.902Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:10:49.902Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:10:49.903Z appoptics:debug using context provider: ace-context
2021-08-24T05:10:49.970Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:10:50.014Z appoptics:patching patched crypto 
2021-08-24T05:10:50.033Z appoptics:patching patched https 
2021-08-24T05:10:50.033Z appoptics:patching patched http 
2021-08-24T05:10:50.084Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:10:50.084Z appoptics:patching patched fs 
2021-08-24T05:10:50.100Z appoptics:patching patched generic-pool 2.4.2
2021-08-24T05:10:50.101Z appoptics:patching patched pg 5.0.0
2021-08-24T05:10:50.139Z appoptics:debug starting runtimeMetrics


  probes.pg 5.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (117ms)
  2 failing

  1) probes.pg 5.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 5.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.1.0
updated 2 packages and audited 939 packages in 3.757s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:10:55.309Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:10:55.310Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:10:55.310Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:10:55.311Z appoptics:debug using context provider: ace-context
2021-08-24T05:10:55.361Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:10:55.394Z appoptics:patching patched crypto 
2021-08-24T05:10:55.419Z appoptics:patching patched https 
2021-08-24T05:10:55.420Z appoptics:patching patched http 
2021-08-24T05:10:55.446Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:10:55.446Z appoptics:patching patched fs 
2021-08-24T05:10:55.462Z appoptics:patching patched generic-pool 2.4.2
2021-08-24T05:10:55.463Z appoptics:patching patched pg 5.1.0
2021-08-24T05:10:55.484Z appoptics:debug starting runtimeMetrics


  probes.pg 5.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (83ms)
  2 failing

  1) probes.pg 5.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 5.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.2.1
added 4 packages from 16 contributors, removed 1 package, updated 1 package and audited 942 packages in 4.958s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:01.758Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:01.759Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:01.759Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:01.760Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:01.828Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:01.872Z appoptics:patching patched crypto 
2021-08-24T05:11:01.894Z appoptics:patching patched https 
2021-08-24T05:11:01.895Z appoptics:patching patched http 
2021-08-24T05:11:01.943Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:01.943Z appoptics:patching patched fs 
2021-08-24T05:11:01.960Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:01.962Z appoptics:patching patched pg 5.2.1
2021-08-24T05:11:01.983Z appoptics:debug starting runtimeMetrics


  probes.pg 5.2.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (113ms)
  2 failing

  1) probes.pg 5.2.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 5.2.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.0
removed 1 package, updated 1 package and audited 941 packages in 3.879s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:07.096Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:07.097Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:07.097Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:07.098Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:07.149Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:07.182Z appoptics:patching patched crypto 
2021-08-24T05:11:07.200Z appoptics:patching patched https 
2021-08-24T05:11:07.200Z appoptics:patching patched http 
2021-08-24T05:11:07.229Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:07.230Z appoptics:patching patched fs 
2021-08-24T05:11:07.245Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:07.247Z appoptics:patching patched pg 6.0.0
2021-08-24T05:11:07.267Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (89ms)
  2 failing

  1) probes.pg 6.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.1
updated 1 package and audited 941 packages in 4.315s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:12.711Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:12.712Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:12.712Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:12.713Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:12.763Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:12.802Z appoptics:patching patched crypto 
2021-08-24T05:11:12.820Z appoptics:patching patched https 
2021-08-24T05:11:12.821Z appoptics:patching patched http 
2021-08-24T05:11:12.857Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:12.857Z appoptics:patching patched fs 
2021-08-24T05:11:12.873Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:12.875Z appoptics:patching patched pg 6.0.1
2021-08-24T05:11:12.895Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (91ms)
  2 failing

  1) probes.pg 6.0.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.2
updated 1 package and audited 941 packages in 4.701s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:18.771Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:18.772Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:18.772Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:18.773Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:18.822Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:18.856Z appoptics:patching patched crypto 
2021-08-24T05:11:18.874Z appoptics:patching patched https 
2021-08-24T05:11:18.874Z appoptics:patching patched http 
2021-08-24T05:11:18.904Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:18.904Z appoptics:patching patched fs 
2021-08-24T05:11:18.922Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:18.924Z appoptics:patching patched pg 6.0.2
2021-08-24T05:11:18.949Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (106ms)
  2 failing

  1) probes.pg 6.0.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.3
updated 1 package and audited 941 packages in 4.186s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:24.567Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:24.567Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:24.568Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:24.568Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:24.618Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:24.651Z appoptics:patching patched crypto 
2021-08-24T05:11:24.669Z appoptics:patching patched https 
2021-08-24T05:11:24.669Z appoptics:patching patched http 
2021-08-24T05:11:24.704Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:24.704Z appoptics:patching patched fs 
2021-08-24T05:11:24.720Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:24.722Z appoptics:patching patched pg 6.0.3
2021-08-24T05:11:24.742Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (94ms)
  2 failing

  1) probes.pg 6.0.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.4
added 2 packages from 1 contributor, removed 2 packages, updated 2 packages and audited 941 packages in 5.088s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:31.107Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:31.108Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:31.108Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:31.109Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:31.158Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:31.192Z appoptics:patching patched crypto 
2021-08-24T05:11:31.210Z appoptics:patching patched https 
2021-08-24T05:11:31.210Z appoptics:patching patched http 
2021-08-24T05:11:31.241Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:31.242Z appoptics:patching patched fs 
2021-08-24T05:11:31.270Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:31.272Z appoptics:patching patched pg 6.0.4
2021-08-24T05:11:31.293Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (99ms)
  2 failing

  1) probes.pg 6.0.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.5
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 3.727s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:36.278Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:36.278Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:36.279Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:36.279Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:36.329Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:36.362Z appoptics:patching patched crypto 
2021-08-24T05:11:36.384Z appoptics:patching patched https 
2021-08-24T05:11:36.384Z appoptics:patching patched http 
2021-08-24T05:11:36.412Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:36.413Z appoptics:patching patched fs 
2021-08-24T05:11:36.436Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:36.437Z appoptics:patching patched pg 6.0.5
2021-08-24T05:11:36.458Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (91ms)
  2 failing

  1) probes.pg 6.0.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.0
removed 1 package, updated 1 package and audited 941 packages in 5.003s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:42.622Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:42.623Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:42.623Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:42.624Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:42.670Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:42.707Z appoptics:patching patched crypto 
2021-08-24T05:11:42.725Z appoptics:patching patched https 
2021-08-24T05:11:42.726Z appoptics:patching patched http 
2021-08-24T05:11:42.755Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:42.755Z appoptics:patching patched fs 
2021-08-24T05:11:42.777Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:42.779Z appoptics:patching patched pg 6.1.0
2021-08-24T05:11:42.800Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (87ms)
  2 failing

  1) probes.pg 6.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.1
updated 1 package and audited 941 packages in 4.196s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:48.131Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:48.132Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:48.132Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:48.133Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:48.179Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:48.212Z appoptics:patching patched crypto 
2021-08-24T05:11:48.231Z appoptics:patching patched https 
2021-08-24T05:11:48.231Z appoptics:patching patched http 
2021-08-24T05:11:48.263Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:48.263Z appoptics:patching patched fs 
2021-08-24T05:11:48.286Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:48.288Z appoptics:patching patched pg 6.1.1
2021-08-24T05:11:48.309Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (88ms)
  2 failing

  1) probes.pg 6.1.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.2
updated 1 package and audited 941 packages in 4.792s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:54.271Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:54.272Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:54.272Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:54.272Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:54.320Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:11:54.357Z appoptics:patching patched crypto 
2021-08-24T05:11:54.375Z appoptics:patching patched https 
2021-08-24T05:11:54.375Z appoptics:patching patched http 
2021-08-24T05:11:54.407Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:11:54.407Z appoptics:patching patched fs 
2021-08-24T05:11:54.429Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:11:54.430Z appoptics:patching patched pg 6.1.2
2021-08-24T05:11:54.455Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (88ms)
  2 failing

  1) probes.pg 6.1.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.3
updated 1 package and audited 941 packages in 4.347s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:11:59.939Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:11:59.939Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:11:59.939Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:11:59.940Z appoptics:debug using context provider: ace-context
2021-08-24T05:11:59.986Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:00.022Z appoptics:patching patched crypto 
2021-08-24T05:12:00.040Z appoptics:patching patched https 
2021-08-24T05:12:00.040Z appoptics:patching patched http 
2021-08-24T05:12:00.077Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:00.077Z appoptics:patching patched fs 
2021-08-24T05:12:00.100Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:00.102Z appoptics:patching patched pg 6.1.3
2021-08-24T05:12:00.123Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (123ms)
  2 failing

  1) probes.pg 6.1.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.4
updated 1 package and audited 941 packages in 5.263s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:06.668Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:06.668Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:06.669Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:06.669Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:06.723Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:06.757Z appoptics:patching patched crypto 
2021-08-24T05:12:06.775Z appoptics:patching patched https 
2021-08-24T05:12:06.778Z appoptics:patching patched http 
2021-08-24T05:12:06.804Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:06.805Z appoptics:patching patched fs 
2021-08-24T05:12:06.827Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:06.828Z appoptics:patching patched pg 6.1.4
2021-08-24T05:12:06.849Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (87ms)
  2 failing

  1) probes.pg 6.1.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.5
updated 1 package and audited 941 packages in 3.732s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:11.720Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:11.721Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:11.721Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:11.722Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:11.772Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:11.806Z appoptics:patching patched crypto 
2021-08-24T05:12:11.824Z appoptics:patching patched https 
2021-08-24T05:12:11.825Z appoptics:patching patched http 
2021-08-24T05:12:11.856Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:11.856Z appoptics:patching patched fs 
2021-08-24T05:12:11.878Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:11.880Z appoptics:patching patched pg 6.1.5
2021-08-24T05:12:11.900Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (101ms)
  2 failing

  1) probes.pg 6.1.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.6
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 4.725s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:17.799Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:17.800Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:17.800Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:17.800Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:17.849Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:17.882Z appoptics:patching patched crypto 
2021-08-24T05:12:17.900Z appoptics:patching patched https 
2021-08-24T05:12:17.900Z appoptics:patching patched http 
2021-08-24T05:12:17.930Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:17.930Z appoptics:patching patched fs 
2021-08-24T05:12:17.952Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:17.954Z appoptics:patching patched pg 6.1.6
2021-08-24T05:12:17.975Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (87ms)
  2 failing

  1) probes.pg 6.1.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.2
removed 1 package, updated 2 packages and audited 941 packages in 4.559s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:23.672Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:23.673Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:23.673Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:23.674Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:23.721Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:23.757Z appoptics:patching patched crypto 
2021-08-24T05:12:23.775Z appoptics:patching patched https 
2021-08-24T05:12:23.775Z appoptics:patching patched http 
2021-08-24T05:12:23.805Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:23.805Z appoptics:patching patched fs 
2021-08-24T05:12:23.828Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:23.829Z appoptics:patching patched pg 6.2.2
2021-08-24T05:12:23.850Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (90ms)
  2 failing

  1) probes.pg 6.2.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.3
updated 1 package and audited 941 packages in 4.533s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:29.544Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:29.545Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:29.545Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:29.546Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:29.596Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:29.629Z appoptics:patching patched crypto 
2021-08-24T05:12:29.651Z appoptics:patching patched https 
2021-08-24T05:12:29.651Z appoptics:patching patched http 
2021-08-24T05:12:29.678Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:29.678Z appoptics:patching patched fs 
2021-08-24T05:12:29.700Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:29.702Z appoptics:patching patched pg 6.2.3
2021-08-24T05:12:29.723Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (84ms)
  2 failing

  1) probes.pg 6.2.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.4
updated 1 package and audited 941 packages in 3.811s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:34.677Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:34.678Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:34.678Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:34.679Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:34.734Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:34.767Z appoptics:patching patched crypto 
2021-08-24T05:12:34.786Z appoptics:patching patched https 
2021-08-24T05:12:34.786Z appoptics:patching patched http 
2021-08-24T05:12:34.816Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:34.816Z appoptics:patching patched fs 
2021-08-24T05:12:34.843Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:34.845Z appoptics:patching patched pg 6.2.4
2021-08-24T05:12:34.865Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (84ms)
  2 failing

  1) probes.pg 6.2.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.5
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 4.334s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:40.452Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:40.452Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:40.452Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:40.453Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:40.513Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:40.564Z appoptics:patching patched crypto 
2021-08-24T05:12:40.589Z appoptics:patching patched https 
2021-08-24T05:12:40.590Z appoptics:patching patched http 
2021-08-24T05:12:40.655Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:40.656Z appoptics:patching patched fs 
2021-08-24T05:12:40.690Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:40.692Z appoptics:patching patched pg 6.2.5
2021-08-24T05:12:40.720Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (198ms)
  2 failing

  1) probes.pg 6.2.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.0
removed 1 package, updated 1 package and audited 941 packages in 5.071s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:47.268Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:47.268Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:47.268Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:47.269Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:47.319Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:47.352Z appoptics:patching patched crypto 
2021-08-24T05:12:47.370Z appoptics:patching patched https 
2021-08-24T05:12:47.370Z appoptics:patching patched http 
2021-08-24T05:12:47.401Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:47.402Z appoptics:patching patched fs 
2021-08-24T05:12:47.424Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:47.425Z appoptics:patching patched pg 6.3.0
2021-08-24T05:12:47.446Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1023) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1023) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (84ms)
  2 failing

  1) probes.pg 6.3.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.3.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.1
updated 1 package and audited 941 packages in 4.17s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:53.018Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:53.018Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:53.019Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:53.019Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:53.086Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:53.130Z appoptics:patching patched crypto 
2021-08-24T05:12:53.149Z appoptics:patching patched https 
2021-08-24T05:12:53.149Z appoptics:patching patched http 
2021-08-24T05:12:53.200Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:53.201Z appoptics:patching patched fs 
2021-08-24T05:12:53.224Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:53.226Z appoptics:patching patched pg 6.3.1
2021-08-24T05:12:53.247Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1046) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1046) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (148ms)
  2 failing

  1) probes.pg 6.3.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.3.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.3
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 3.736s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:12:58.264Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:12:58.264Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:12:58.264Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:12:58.265Z appoptics:debug using context provider: ace-context
2021-08-24T05:12:58.318Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:12:58.353Z appoptics:patching patched crypto 
2021-08-24T05:12:58.370Z appoptics:patching patched https 
2021-08-24T05:12:58.371Z appoptics:patching patched http 
2021-08-24T05:12:58.400Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:12:58.400Z appoptics:patching patched fs 
2021-08-24T05:12:58.424Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:12:58.425Z appoptics:patching patched pg 6.3.3
2021-08-24T05:12:58.446Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1069) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1069) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (117ms)
  2 failing

  1) probes.pg 6.3.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.3.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.0
removed 1 package, updated 1 package and audited 941 packages in 3.842s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:13:03.583Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:13:03.584Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:13:03.584Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:13:03.585Z appoptics:debug using context provider: ace-context
2021-08-24T05:13:03.639Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:13:03.685Z appoptics:patching patched crypto 
2021-08-24T05:13:03.722Z appoptics:patching patched https 
2021-08-24T05:13:03.722Z appoptics:patching patched http 
2021-08-24T05:13:03.757Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:13:03.757Z appoptics:patching patched fs 
2021-08-24T05:13:03.781Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:13:03.783Z appoptics:patching patched pg 6.4.0
2021-08-24T05:13:03.804Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1092) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1092) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (117ms)
  2 failing

  1) probes.pg 6.4.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.4.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.1
updated 1 package and audited 941 packages in 4.076s

32 packages are looking for funding
  run `npm fund` for details

found 30 vulnerabilities (6 low, 6 moderate, 16 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:13:09.100Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:13:09.101Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:13:09.101Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:13:09.102Z appoptics:debug using context provider: ace-context
2021-08-24T05:13:09.178Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:13:09.218Z appoptics:patching patched crypto 
2021-08-24T05:13:09.240Z appoptics:patching patched https 
2021-08-24T05:13:09.241Z appoptics:patching patched http 
2021-08-24T05:13:09.266Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:13:09.267Z appoptics:patching patched fs 
2021-08-24T05:13:09.289Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:13:09.290Z appoptics:patching patched pg 6.4.1
2021-08-24T05:13:09.311Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1115) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1115) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (96ms)
  2 failing

  1) probes.pg 6.4.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.4.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.2
added 1 package from 2 contributors, updated 1 package and audited 942 packages in 3.904s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:13:14.436Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:13:14.437Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:13:14.437Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:13:14.438Z appoptics:debug using context provider: ace-context
2021-08-24T05:13:14.488Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:13:14.522Z appoptics:patching patched crypto 
2021-08-24T05:13:14.540Z appoptics:patching patched https 
2021-08-24T05:13:14.540Z appoptics:patching patched http 
2021-08-24T05:13:14.575Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:13:14.575Z appoptics:patching patched fs 
2021-08-24T05:13:14.598Z appoptics:patching patched generic-pool 2.4.3
2021-08-24T05:13:14.601Z appoptics:patching patched pg 6.4.2
2021-08-24T05:13:14.622Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1138) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1138) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (86ms)
  2 failing

  1) probes.pg 6.4.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:60:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.4.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.5.0
removed 3 packages, updated 3 packages and audited 939 packages in 4.565s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:13:20.391Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:13:20.392Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:13:20.392Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:13:20.393Z appoptics:debug using context provider: ace-context
2021-08-24T05:13:20.463Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:13:20.498Z appoptics:patching patched crypto 
2021-08-24T05:13:20.517Z appoptics:patching patched https 
2021-08-24T05:13:20.517Z appoptics:patching patched http 
2021-08-24T05:13:20.575Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:13:20.575Z appoptics:patching patched fs 
2021-08-24T05:13:20.591Z appoptics:patching patched pg 7.5.0
2021-08-24T05:13:20.614Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.0
updated 1 package and audited 939 packages in 4.257s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:13:31.422Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:13:31.423Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:13:31.423Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:13:31.424Z appoptics:debug using context provider: ace-context
2021-08-24T05:13:31.480Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:13:31.553Z appoptics:patching patched crypto 
2021-08-24T05:13:31.612Z appoptics:patching patched https 
2021-08-24T05:13:31.613Z appoptics:patching patched http 
2021-08-24T05:13:31.658Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:13:31.658Z appoptics:patching patched fs 
2021-08-24T05:13:31.676Z appoptics:patching patched pg 7.6.0
2021-08-24T05:13:31.701Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.1
updated 2 packages and audited 939 packages in 4.932s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:13:43.371Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:13:43.372Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:13:43.372Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:13:43.373Z appoptics:debug using context provider: ace-context
2021-08-24T05:13:43.476Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:13:43.509Z appoptics:patching patched crypto 
2021-08-24T05:13:43.528Z appoptics:patching patched https 
2021-08-24T05:13:43.528Z appoptics:patching patched http 
2021-08-24T05:13:43.564Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:13:43.564Z appoptics:patching patched fs 
2021-08-24T05:13:43.580Z appoptics:patching patched pg 7.6.1
2021-08-24T05:13:43.603Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.0
updated 1 package and audited 939 packages in 5.176s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:13:55.502Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:13:55.503Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:13:55.503Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:13:55.504Z appoptics:debug using context provider: ace-context
2021-08-24T05:13:55.553Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:13:55.586Z appoptics:patching patched crypto 
2021-08-24T05:13:55.623Z appoptics:patching patched https 
2021-08-24T05:13:55.623Z appoptics:patching patched http 
2021-08-24T05:13:55.654Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:13:55.655Z appoptics:patching patched fs 
2021-08-24T05:13:55.670Z appoptics:patching patched pg 7.7.0
2021-08-24T05:13:55.693Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.1
updated 1 package and audited 939 packages in 4.369s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:14:06.593Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:14:06.594Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:14:06.594Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:14:06.595Z appoptics:debug using context provider: ace-context
2021-08-24T05:14:06.665Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:14:06.710Z appoptics:patching patched crypto 
2021-08-24T05:14:06.747Z appoptics:patching patched https 
2021-08-24T05:14:06.747Z appoptics:patching patched http 
2021-08-24T05:14:06.785Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:14:06.786Z appoptics:patching patched fs 
2021-08-24T05:14:06.802Z appoptics:patching patched pg 7.7.1
2021-08-24T05:14:06.826Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (252ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.0
updated 3 packages and audited 939 packages in 3.965s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:14:17.324Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:14:17.325Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:14:17.325Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:14:17.326Z appoptics:debug using context provider: ace-context
2021-08-24T05:14:17.376Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:14:17.409Z appoptics:patching patched crypto 
2021-08-24T05:14:17.437Z appoptics:patching patched https 
2021-08-24T05:14:17.437Z appoptics:patching patched http 
2021-08-24T05:14:17.465Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:14:17.466Z appoptics:patching patched fs 
2021-08-24T05:14:17.481Z appoptics:patching patched pg 7.8.0
2021-08-24T05:14:17.504Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.1
updated 2 packages and audited 939 packages in 3.852s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:14:28.016Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:14:28.017Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:14:28.017Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:14:28.018Z appoptics:debug using context provider: ace-context
2021-08-24T05:14:28.071Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:14:28.105Z appoptics:patching patched crypto 
2021-08-24T05:14:28.123Z appoptics:patching patched https 
2021-08-24T05:14:28.123Z appoptics:patching patched http 
2021-08-24T05:14:28.159Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:14:28.159Z appoptics:patching patched fs 
2021-08-24T05:14:28.174Z appoptics:patching patched pg 7.8.1
2021-08-24T05:14:28.197Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.2
updated 1 package and audited 939 packages in 4.424s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:14:39.092Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:14:39.093Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:14:39.093Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:14:39.094Z appoptics:debug using context provider: ace-context
2021-08-24T05:14:39.137Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:14:39.173Z appoptics:patching patched crypto 
2021-08-24T05:14:39.191Z appoptics:patching patched https 
2021-08-24T05:14:39.191Z appoptics:patching patched http 
2021-08-24T05:14:39.228Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:14:39.228Z appoptics:patching patched fs 
2021-08-24T05:14:39.244Z appoptics:patching patched pg 7.8.2
2021-08-24T05:14:39.268Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.9.0
updated 1 package and audited 939 packages in 3.879s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:14:49.653Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:14:49.653Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:14:49.653Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:14:49.654Z appoptics:debug using context provider: ace-context
2021-08-24T05:14:49.703Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:14:49.736Z appoptics:patching patched crypto 
2021-08-24T05:14:49.756Z appoptics:patching patched https 
2021-08-24T05:14:49.757Z appoptics:patching patched http 
2021-08-24T05:14:49.795Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:14:49.795Z appoptics:patching patched fs 
2021-08-24T05:14:49.811Z appoptics:patching patched pg 7.9.0
2021-08-24T05:14:49.833Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.9.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.9.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.10.0
updated 1 package and audited 939 packages in 3.752s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:15:00.086Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:15:00.087Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:15:00.087Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:15:00.087Z appoptics:debug using context provider: ace-context
2021-08-24T05:15:00.158Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:15:00.229Z appoptics:patching patched crypto 
2021-08-24T05:15:00.258Z appoptics:patching patched https 
2021-08-24T05:15:00.258Z appoptics:patching patched http 
2021-08-24T05:15:00.328Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:15:00.328Z appoptics:patching patched fs 
2021-08-24T05:15:00.345Z appoptics:patching patched pg 7.10.0
2021-08-24T05:15:00.373Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.10.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.10.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (988ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.11.0
updated 1 package and audited 939 packages in 3.656s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:15:10.538Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:15:10.538Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:15:10.538Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:15:10.540Z appoptics:debug using context provider: ace-context
2021-08-24T05:15:10.600Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:15:10.636Z appoptics:patching patched crypto 
2021-08-24T05:15:10.654Z appoptics:patching patched https 
2021-08-24T05:15:10.655Z appoptics:patching patched http 
2021-08-24T05:15:10.706Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:15:10.707Z appoptics:patching patched fs 
2021-08-24T05:15:10.723Z appoptics:patching patched pg 7.11.0
2021-08-24T05:15:10.749Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.11.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.11.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.0
updated 1 package and audited 939 packages in 3.786s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:15:21.023Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:15:21.023Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:15:21.023Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:15:21.024Z appoptics:debug using context provider: ace-context
2021-08-24T05:15:21.073Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:15:21.108Z appoptics:patching patched crypto 
2021-08-24T05:15:21.126Z appoptics:patching patched https 
2021-08-24T05:15:21.127Z appoptics:patching patched http 
2021-08-24T05:15:21.166Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:15:21.167Z appoptics:patching patched fs 
2021-08-24T05:15:21.183Z appoptics:patching patched pg 7.12.0
2021-08-24T05:15:21.206Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (259ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (228ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (243ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (230ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.1
updated 2 packages and audited 939 packages in 3.809s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:15:31.573Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:15:31.574Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:15:31.574Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:15:31.575Z appoptics:debug using context provider: ace-context
2021-08-24T05:15:31.627Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:15:31.661Z appoptics:patching patched crypto 
2021-08-24T05:15:31.680Z appoptics:patching patched https 
2021-08-24T05:15:31.680Z appoptics:patching patched http 
2021-08-24T05:15:31.714Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:15:31.715Z appoptics:patching patched fs 
2021-08-24T05:15:31.730Z appoptics:patching patched pg 7.12.1
2021-08-24T05:15:31.753Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (228ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.13.0
updated 1 package and audited 939 packages in 3.928s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:15:42.288Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:15:42.289Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:15:42.289Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:15:42.290Z appoptics:debug using context provider: ace-context
2021-08-24T05:15:42.341Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:15:42.376Z appoptics:patching patched crypto 
2021-08-24T05:15:42.397Z appoptics:patching patched https 
2021-08-24T05:15:42.397Z appoptics:patching patched http 
2021-08-24T05:15:42.429Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:15:42.429Z appoptics:patching patched fs 
2021-08-24T05:15:42.445Z appoptics:patching patched pg 7.13.0
2021-08-24T05:15:42.468Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.13.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.13.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (987ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (238ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.14.0
updated 1 package and audited 939 packages in 4.626s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:15:53.728Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:15:53.728Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:15:53.728Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:15:53.729Z appoptics:debug using context provider: ace-context
2021-08-24T05:15:53.791Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:15:53.834Z appoptics:patching patched crypto 
2021-08-24T05:15:53.853Z appoptics:patching patched https 
2021-08-24T05:15:53.853Z appoptics:patching patched http 
2021-08-24T05:15:53.911Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:15:53.911Z appoptics:patching patched fs 
2021-08-24T05:15:53.929Z appoptics:patching patched pg 7.14.0
2021-08-24T05:15:53.952Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.14.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.14.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (241ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (232ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (982ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (236ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (246ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.0
updated 1 package and audited 939 packages in 4.539s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:16:05.283Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:16:05.284Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:16:05.284Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:16:05.285Z appoptics:debug using context provider: ace-context
2021-08-24T05:16:05.350Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:16:05.388Z appoptics:patching patched crypto 
2021-08-24T05:16:05.421Z appoptics:patching patched https 
2021-08-24T05:16:05.421Z appoptics:patching patched http 
2021-08-24T05:16:05.461Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:16:05.462Z appoptics:patching patched fs 
2021-08-24T05:16:05.479Z appoptics:patching patched pg 7.15.0
2021-08-24T05:16:05.503Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.1
updated 1 package and audited 939 packages in 4.684s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:16:16.692Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:16:16.692Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:16:16.692Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:16:16.693Z appoptics:debug using context provider: ace-context
2021-08-24T05:16:16.743Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:16:16.777Z appoptics:patching patched crypto 
2021-08-24T05:16:16.795Z appoptics:patching patched https 
2021-08-24T05:16:16.795Z appoptics:patching patched http 
2021-08-24T05:16:16.830Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:16:16.830Z appoptics:patching patched fs 
2021-08-24T05:16:16.847Z appoptics:patching patched pg 7.15.1
2021-08-24T05:16:16.869Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.2
updated 1 package and audited 939 packages in 5.325s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:16:28.644Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:16:28.645Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:16:28.645Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:16:28.646Z appoptics:debug using context provider: ace-context
2021-08-24T05:16:28.688Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:16:28.729Z appoptics:patching patched crypto 
2021-08-24T05:16:28.748Z appoptics:patching patched https 
2021-08-24T05:16:28.748Z appoptics:patching patched http 
2021-08-24T05:16:28.781Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:16:28.782Z appoptics:patching patched fs 
2021-08-24T05:16:28.797Z appoptics:patching patched pg 7.15.2
2021-08-24T05:16:28.820Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (988ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.0
added 1 package, updated 1 package and audited 940 packages in 4.366s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:16:39.909Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:16:39.909Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:16:39.909Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:16:39.910Z appoptics:debug using context provider: ace-context
2021-08-24T05:16:39.975Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:16:40.013Z appoptics:patching patched crypto 
2021-08-24T05:16:40.032Z appoptics:patching patched https 
2021-08-24T05:16:40.032Z appoptics:patching patched http 
2021-08-24T05:16:40.089Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:16:40.090Z appoptics:patching patched fs 
2021-08-24T05:16:40.112Z appoptics:patching patched pg 7.16.0
2021-08-24T05:16:40.135Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.1
updated 1 package and audited 940 packages in 3.861s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:16:50.563Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:16:50.564Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:16:50.564Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:16:50.565Z appoptics:debug using context provider: ace-context
2021-08-24T05:16:50.615Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:16:50.651Z appoptics:patching patched crypto 
2021-08-24T05:16:50.668Z appoptics:patching patched https 
2021-08-24T05:16:50.669Z appoptics:patching patched http 
2021-08-24T05:16:50.726Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:16:50.727Z appoptics:patching patched fs 
2021-08-24T05:16:50.745Z appoptics:patching patched pg 7.16.1
2021-08-24T05:16:50.769Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.0
updated 1 package and audited 940 packages in 3.587s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:17:00.895Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:17:00.895Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:17:00.895Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:17:00.896Z appoptics:debug using context provider: ace-context
2021-08-24T05:17:00.962Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:17:01.005Z appoptics:patching patched crypto 
2021-08-24T05:17:01.041Z appoptics:patching patched https 
2021-08-24T05:17:01.041Z appoptics:patching patched http 
2021-08-24T05:17:01.079Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:17:01.079Z appoptics:patching patched fs 
2021-08-24T05:17:01.096Z appoptics:patching patched pg 7.17.0
2021-08-24T05:17:01.119Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (249ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.1
updated 1 package and audited 940 packages in 3.692s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:17:11.305Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:17:11.306Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:17:11.306Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:17:11.306Z appoptics:debug using context provider: ace-context
2021-08-24T05:17:11.375Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:17:11.421Z appoptics:patching patched crypto 
2021-08-24T05:17:11.440Z appoptics:patching patched https 
2021-08-24T05:17:11.440Z appoptics:patching patched http 
2021-08-24T05:17:11.538Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:17:11.539Z appoptics:patching patched fs 
2021-08-24T05:17:11.565Z appoptics:patching patched pg 7.17.1
2021-08-24T05:17:11.598Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (246ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.0
updated 1 package and audited 940 packages in 4.183s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:17:22.251Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:17:22.252Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:17:22.252Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:17:22.253Z appoptics:debug using context provider: ace-context
2021-08-24T05:17:22.306Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:17:22.345Z appoptics:patching patched crypto 
2021-08-24T05:17:22.364Z appoptics:patching patched https 
2021-08-24T05:17:22.365Z appoptics:patching patched http 
2021-08-24T05:17:22.418Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:17:22.418Z appoptics:patching patched fs 
2021-08-24T05:17:22.434Z appoptics:patching patched pg 7.18.0
2021-08-24T05:17:22.457Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (263ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (978ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (229ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (240ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.1
updated 1 package and audited 940 packages in 3.665s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:17:32.631Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:17:32.631Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:17:32.632Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:17:32.632Z appoptics:debug using context provider: ace-context
2021-08-24T05:17:32.678Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:17:32.717Z appoptics:patching patched crypto 
2021-08-24T05:17:32.734Z appoptics:patching patched https 
2021-08-24T05:17:32.734Z appoptics:patching patched http 
2021-08-24T05:17:32.769Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:17:32.770Z appoptics:patching patched fs 
2021-08-24T05:17:32.786Z appoptics:patching patched pg 7.18.1
2021-08-24T05:17:32.811Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (44ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.2
updated 1 package and audited 940 packages in 3.697s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:17:42.975Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:17:42.976Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:17:42.976Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:17:42.977Z appoptics:debug using context provider: ace-context
2021-08-24T05:17:43.030Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:17:43.064Z appoptics:patching patched crypto 
2021-08-24T05:17:43.082Z appoptics:patching patched https 
2021-08-24T05:17:43.083Z appoptics:patching patched http 
2021-08-24T05:17:43.118Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:17:43.118Z appoptics:patching patched fs 
2021-08-24T05:17:43.134Z appoptics:patching patched pg 7.18.2
2021-08-24T05:17:43.157Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (259ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.0
updated 2 packages and audited 940 packages in 3.696s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:17:53.272Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:17:53.273Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:17:53.273Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:17:53.274Z appoptics:debug using context provider: ace-context
2021-08-24T05:17:53.325Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:17:53.359Z appoptics:patching patched crypto 
2021-08-24T05:17:53.380Z appoptics:patching patched https 
2021-08-24T05:17:53.380Z appoptics:patching patched http 
2021-08-24T05:17:53.415Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:17:53.415Z appoptics:patching patched fs 
2021-08-24T05:17:53.431Z appoptics:patching patched pg 8.0.0
2021-08-24T05:17:53.454Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.1
added 1 package, removed 1 package, updated 1 package and audited 940 packages in 4.61s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:18:04.593Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:18:04.594Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:18:04.594Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:18:04.595Z appoptics:debug using context provider: ace-context
2021-08-24T05:18:04.639Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:18:04.685Z appoptics:patching patched crypto 
2021-08-24T05:18:04.705Z appoptics:patching patched https 
2021-08-24T05:18:04.705Z appoptics:patching patched http 
2021-08-24T05:18:04.754Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:18:04.755Z appoptics:patching patched fs 
2021-08-24T05:18:04.773Z appoptics:patching patched pg 8.0.1
2021-08-24T05:18:04.797Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (41ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.2
updated 1 package and audited 940 packages in 4.367s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:18:15.847Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:18:15.848Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:18:15.848Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:18:15.849Z appoptics:debug using context provider: ace-context
2021-08-24T05:18:15.945Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:18:15.989Z appoptics:patching patched crypto 
2021-08-24T05:18:16.008Z appoptics:patching patched https 
2021-08-24T05:18:16.009Z appoptics:patching patched http 
2021-08-24T05:18:16.081Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:18:16.081Z appoptics:patching patched fs 
2021-08-24T05:18:16.110Z appoptics:patching patched pg 8.0.2
2021-08-24T05:18:16.159Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (987ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (238ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (988ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.3
updated 1 package and audited 940 packages in 4.632s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:18:27.464Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:18:27.465Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:18:27.465Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:18:27.466Z appoptics:debug using context provider: ace-context
2021-08-24T05:18:27.514Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:18:27.547Z appoptics:patching patched crypto 
2021-08-24T05:18:27.565Z appoptics:patching patched https 
2021-08-24T05:18:27.571Z appoptics:patching patched http 
2021-08-24T05:18:27.605Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:18:27.605Z appoptics:patching patched fs 
2021-08-24T05:18:27.620Z appoptics:patching patched pg 8.0.3
2021-08-24T05:18:27.643Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.1.0
updated 2 packages and audited 940 packages in 4.795s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:18:38.913Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:18:38.913Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:18:38.913Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:18:38.914Z appoptics:debug using context provider: ace-context
2021-08-24T05:18:38.965Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:18:38.998Z appoptics:patching patched crypto 
2021-08-24T05:18:39.016Z appoptics:patching patched https 
2021-08-24T05:18:39.016Z appoptics:patching patched http 
2021-08-24T05:18:39.054Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:18:39.054Z appoptics:patching patched fs 
2021-08-24T05:18:39.070Z appoptics:patching patched pg 8.1.0
2021-08-24T05:18:39.093Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.1.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.1.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (262ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (231ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.0
updated 1 package and audited 940 packages in 4.567s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:18:50.328Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:18:50.328Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:18:50.328Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:18:50.329Z appoptics:debug using context provider: ace-context
2021-08-24T05:18:50.379Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:18:50.412Z appoptics:patching patched crypto 
2021-08-24T05:18:50.430Z appoptics:patching patched https 
2021-08-24T05:18:50.430Z appoptics:patching patched http 
2021-08-24T05:18:50.467Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:18:50.467Z appoptics:patching patched fs 
2021-08-24T05:18:50.484Z appoptics:patching patched pg 8.2.0
2021-08-24T05:18:50.505Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (239ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.1
updated 1 package and audited 940 packages in 4.063s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:19:01.503Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:19:01.504Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:19:01.504Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:19:01.505Z appoptics:debug using context provider: ace-context
2021-08-24T05:19:01.604Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:19:01.684Z appoptics:patching patched crypto 
2021-08-24T05:19:01.710Z appoptics:patching patched https 
2021-08-24T05:19:01.711Z appoptics:patching patched http 
2021-08-24T05:19:01.804Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:19:01.804Z appoptics:patching patched fs 
2021-08-24T05:19:01.830Z appoptics:patching patched pg 8.2.1
2021-08-24T05:19:01.857Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (40ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.2
updated 1 package and audited 940 packages in 3.619s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:19:12.228Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:19:12.229Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:19:12.229Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:19:12.230Z appoptics:debug using context provider: ace-context
2021-08-24T05:19:12.288Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:19:12.325Z appoptics:patching patched crypto 
2021-08-24T05:19:12.344Z appoptics:patching patched https 
2021-08-24T05:19:12.345Z appoptics:patching patched http 
2021-08-24T05:19:12.401Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:19:12.402Z appoptics:patching patched fs 
2021-08-24T05:19:12.420Z appoptics:patching patched pg 8.2.2
2021-08-24T05:19:12.443Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (259ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.0
updated 1 package and audited 940 packages in 4.108s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:19:23.257Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:19:23.258Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:19:23.258Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:19:23.259Z appoptics:debug using context provider: ace-context
2021-08-24T05:19:23.324Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:19:23.367Z appoptics:patching patched crypto 
2021-08-24T05:19:23.386Z appoptics:patching patched https 
2021-08-24T05:19:23.386Z appoptics:patching patched http 
2021-08-24T05:19:23.441Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:19:23.442Z appoptics:patching patched fs 
2021-08-24T05:19:23.461Z appoptics:patching patched pg 8.3.0
2021-08-24T05:19:23.484Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (244ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.2
updated 1 package and audited 940 packages in 3.769s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:19:33.699Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:19:33.699Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:19:33.699Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:19:33.700Z appoptics:debug using context provider: ace-context
2021-08-24T05:19:33.759Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:19:33.804Z appoptics:patching patched crypto 
2021-08-24T05:19:33.823Z appoptics:patching patched https 
2021-08-24T05:19:33.823Z appoptics:patching patched http 
2021-08-24T05:19:33.882Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:19:33.883Z appoptics:patching patched fs 
2021-08-24T05:19:33.901Z appoptics:patching patched pg 8.3.2
2021-08-24T05:19:33.924Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (250ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.3
updated 1 package and audited 940 packages in 3.792s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:19:44.208Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:19:44.209Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:19:44.209Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:19:44.210Z appoptics:debug using context provider: ace-context
2021-08-24T05:19:44.260Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:19:44.294Z appoptics:patching patched crypto 
2021-08-24T05:19:44.316Z appoptics:patching patched https 
2021-08-24T05:19:44.316Z appoptics:patching patched http 
2021-08-24T05:19:44.352Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:19:44.352Z appoptics:patching patched fs 
2021-08-24T05:19:44.371Z appoptics:patching patched pg 8.3.3
2021-08-24T05:19:44.399Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.0
removed 1 package, updated 1 package and audited 939 packages in 3.679s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:19:54.563Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:19:54.564Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:19:54.564Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:19:54.564Z appoptics:debug using context provider: ace-context
2021-08-24T05:19:54.615Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:19:54.653Z appoptics:patching patched crypto 
2021-08-24T05:19:54.672Z appoptics:patching patched https 
2021-08-24T05:19:54.673Z appoptics:patching patched http 
2021-08-24T05:19:54.706Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:19:54.706Z appoptics:patching patched fs 
2021-08-24T05:19:54.723Z appoptics:patching patched pg 8.4.0
2021-08-24T05:19:54.743Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (246ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.1
updated 1 package and audited 939 packages in 3.76s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:20:04.942Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:20:04.942Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:20:04.943Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:20:04.943Z appoptics:debug using context provider: ace-context
2021-08-24T05:20:04.991Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:20:05.030Z appoptics:patching patched crypto 
2021-08-24T05:20:05.051Z appoptics:patching patched https 
2021-08-24T05:20:05.051Z appoptics:patching patched http 
2021-08-24T05:20:05.086Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:20:05.086Z appoptics:patching patched fs 
2021-08-24T05:20:05.103Z appoptics:patching patched pg 8.4.1
2021-08-24T05:20:05.124Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (245ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (251ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.2
updated 1 package and audited 939 packages in 4.164s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:20:15.717Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:20:15.718Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:20:15.718Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:20:15.719Z appoptics:debug using context provider: ace-context
2021-08-24T05:20:15.773Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:20:15.806Z appoptics:patching patched crypto 
2021-08-24T05:20:15.824Z appoptics:patching patched https 
2021-08-24T05:20:15.825Z appoptics:patching patched http 
2021-08-24T05:20:15.863Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:20:15.863Z appoptics:patching patched fs 
2021-08-24T05:20:15.880Z appoptics:patching patched pg 8.4.2
2021-08-24T05:20:15.901Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (260ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.0
updated 1 package and audited 939 packages in 3.845s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:20:26.270Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:20:26.271Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:20:26.271Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:20:26.272Z appoptics:debug using context provider: ace-context
2021-08-24T05:20:26.322Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:20:26.355Z appoptics:patching patched crypto 
2021-08-24T05:20:26.374Z appoptics:patching patched https 
2021-08-24T05:20:26.374Z appoptics:patching patched http 
2021-08-24T05:20:26.410Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:20:26.410Z appoptics:patching patched fs 
2021-08-24T05:20:26.430Z appoptics:patching patched pg 8.5.0
2021-08-24T05:20:26.460Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (238ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (246ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.1
updated 1 package and audited 939 packages in 4.271s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:20:37.272Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:20:37.273Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:20:37.273Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:20:37.273Z appoptics:debug using context provider: ace-context
2021-08-24T05:20:37.324Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:20:37.358Z appoptics:patching patched crypto 
2021-08-24T05:20:37.378Z appoptics:patching patched https 
2021-08-24T05:20:37.378Z appoptics:patching patched http 
2021-08-24T05:20:37.416Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:20:37.416Z appoptics:patching patched fs 
2021-08-24T05:20:37.434Z appoptics:patching patched pg 8.5.1
2021-08-24T05:20:37.455Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.6.0
updated 1 package and audited 939 packages in 4.502s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:20:48.703Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:20:48.704Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:20:48.704Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:20:48.705Z appoptics:debug using context provider: ace-context
2021-08-24T05:20:48.765Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:20:48.800Z appoptics:patching patched crypto 
2021-08-24T05:20:48.819Z appoptics:patching patched https 
2021-08-24T05:20:48.820Z appoptics:patching patched http 
2021-08-24T05:20:48.869Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:20:48.870Z appoptics:patching patched fs 
2021-08-24T05:20:48.898Z appoptics:patching patched pg 8.6.0
2021-08-24T05:20:48.923Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (47ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.0
updated 1 package and audited 939 packages in 4.594s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:21:00.169Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:21:00.170Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:21:00.170Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:21:00.171Z appoptics:debug using context provider: ace-context
2021-08-24T05:21:00.220Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:21:00.254Z appoptics:patching patched crypto 
2021-08-24T05:21:00.275Z appoptics:patching patched https 
2021-08-24T05:21:00.276Z appoptics:patching patched http 
2021-08-24T05:21:00.309Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:21:00.309Z appoptics:patching patched fs 
2021-08-24T05:21:00.327Z appoptics:patching patched pg 8.7.0
2021-08-24T05:21:00.347Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (261ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 939 packages in 4.579s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-08-24T05:21:11.442Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-08-24T05:21:11.443Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-08-24T05:21:11.443Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-08-24T05:21:11.443Z appoptics:debug using context provider: ace-context
2021-08-24T05:21:11.495Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-08-24T05:21:11.529Z appoptics:patching patched crypto 
2021-08-24T05:21:11.552Z appoptics:patching patched https 
2021-08-24T05:21:11.552Z appoptics:patching patched http 
2021-08-24T05:21:11.585Z appoptics:patching fs.realpath - adding native method
2021-08-24T05:21:11.585Z appoptics:patching patched fs 
2021-08-24T05:21:11.603Z appoptics:patching patched pg 8.7.1
2021-08-24T05:21:11.623Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (258ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 939 packages in 3.995s

32 packages are looking for funding
  run `npm fund` for details

found 29 vulnerabilities (6 low, 6 moderate, 15 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
