npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.5
added 4 packages from 7 contributors, removed 4 packages, updated 7 packages and audited 1111 packages in 4.889s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:03:07.666Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:03:07.669Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:03:07.669Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:03:07.670Z appoptics:debug using context provider: ace-context
2021-09-13T19:03:07.734Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:03:07.785Z appoptics:patching patched crypto 
2021-09-13T19:03:07.830Z appoptics:patching patched https 
2021-09-13T19:03:07.831Z appoptics:patching patched http 
2021-09-13T19:03:07.878Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:03:07.878Z appoptics:patching patched fs 
2021-09-13T19:03:07.896Z appoptics:patching probes.generic-pool "acquire()" not found
2021-09-13T19:03:07.896Z appoptics:patching patched generic-pool 2.1.1
2021-09-13T19:03:07.897Z appoptics:patching patched pg 4.5.5
2021-09-13T19:03:07.952Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (176ms)
  2 failing

  1) probes.pg 4.5.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 4.5.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.6
updated 2 packages and audited 1111 packages in 5.256s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:03:14.662Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:03:14.663Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:03:14.663Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:03:14.664Z appoptics:debug using context provider: ace-context
2021-09-13T19:03:14.714Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:03:14.751Z appoptics:patching patched crypto 
2021-09-13T19:03:14.769Z appoptics:patching patched https 
2021-09-13T19:03:14.769Z appoptics:patching patched http 
2021-09-13T19:03:14.806Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:03:14.807Z appoptics:patching patched fs 
2021-09-13T19:03:14.822Z appoptics:patching patched generic-pool 2.4.2
2021-09-13T19:03:14.823Z appoptics:patching patched pg 4.5.6
2021-09-13T19:03:14.844Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (80ms)
  2 failing

  1) probes.pg 4.5.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 4.5.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@4.5.7
added 1 package from 2 contributors, updated 1 package and audited 1112 packages in 6.983s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:03:23.102Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:03:23.102Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:03:23.102Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:03:23.103Z appoptics:debug using context provider: ace-context
2021-09-13T19:03:23.155Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:03:23.188Z appoptics:patching patched crypto 
2021-09-13T19:03:23.206Z appoptics:patching patched https 
2021-09-13T19:03:23.207Z appoptics:patching patched http 
2021-09-13T19:03:23.245Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:03:23.245Z appoptics:patching patched fs 
2021-09-13T19:03:23.261Z appoptics:patching patched generic-pool 2.4.2
2021-09-13T19:03:23.262Z appoptics:patching patched pg 4.5.7
2021-09-13T19:03:23.283Z appoptics:debug starting runtimeMetrics


  probes.pg 4.5.7
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (84ms)
  2 failing

  1) probes.pg 4.5.7
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 4.5.7
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.0.0
removed 1 package, updated 3 packages and audited 1111 packages in 5.087s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:03:29.749Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:03:29.750Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:03:29.750Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:03:29.751Z appoptics:debug using context provider: ace-context
2021-09-13T19:03:29.801Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:03:29.835Z appoptics:patching patched crypto 
2021-09-13T19:03:29.854Z appoptics:patching patched https 
2021-09-13T19:03:29.854Z appoptics:patching patched http 
2021-09-13T19:03:29.885Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:03:29.886Z appoptics:patching patched fs 
2021-09-13T19:03:29.901Z appoptics:patching patched generic-pool 2.4.2
2021-09-13T19:03:29.902Z appoptics:patching patched pg 5.0.0
2021-09-13T19:03:29.922Z appoptics:debug starting runtimeMetrics


  probes.pg 5.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (80ms)
  2 failing

  1) probes.pg 5.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 5.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.1.0
updated 2 packages and audited 1111 packages in 5.305s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:03:36.523Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:03:36.524Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:03:36.524Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:03:36.525Z appoptics:debug using context provider: ace-context
2021-09-13T19:03:36.573Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:03:36.607Z appoptics:patching patched crypto 
2021-09-13T19:03:36.635Z appoptics:patching patched https 
2021-09-13T19:03:36.635Z appoptics:patching patched http 
2021-09-13T19:03:36.658Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:03:36.658Z appoptics:patching patched fs 
2021-09-13T19:03:36.674Z appoptics:patching patched generic-pool 2.4.2
2021-09-13T19:03:36.675Z appoptics:patching patched pg 5.1.0
2021-09-13T19:03:36.696Z appoptics:debug starting runtimeMetrics


  probes.pg 5.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (78ms)
  2 failing

  1) probes.pg 5.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 5.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@5.2.1
added 4 packages from 16 contributors, removed 1 package, updated 1 package and audited 1114 packages in 4.856s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:03:42.786Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:03:42.787Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:03:42.787Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:03:42.788Z appoptics:debug using context provider: ace-context
2021-09-13T19:03:42.838Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:03:42.872Z appoptics:patching patched crypto 
2021-09-13T19:03:42.922Z appoptics:patching patched https 
2021-09-13T19:03:42.923Z appoptics:patching patched http 
2021-09-13T19:03:42.958Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:03:42.959Z appoptics:patching patched fs 
2021-09-13T19:03:42.975Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:03:42.977Z appoptics:patching patched pg 5.2.1
2021-09-13T19:03:42.997Z appoptics:debug starting runtimeMetrics


  probes.pg 5.2.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (82ms)
  2 failing

  1) probes.pg 5.2.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 5.2.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.0
removed 1 package, updated 1 package and audited 1113 packages in 5.769s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:03:50.034Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:03:50.035Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:03:50.035Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:03:50.035Z appoptics:debug using context provider: ace-context
2021-09-13T19:03:50.083Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:03:50.117Z appoptics:patching patched crypto 
2021-09-13T19:03:50.140Z appoptics:patching patched https 
2021-09-13T19:03:50.141Z appoptics:patching patched http 
2021-09-13T19:03:50.166Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:03:50.167Z appoptics:patching patched fs 
2021-09-13T19:03:50.182Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:03:50.184Z appoptics:patching patched pg 6.0.0
2021-09-13T19:03:50.204Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (79ms)
  2 failing

  1) probes.pg 6.0.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.1
updated 1 package and audited 1113 packages in 5.266s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:03:56.829Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:03:56.830Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:03:56.830Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:03:56.831Z appoptics:debug using context provider: ace-context
2021-09-13T19:03:56.897Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:03:56.941Z appoptics:patching patched crypto 
2021-09-13T19:03:56.973Z appoptics:patching patched https 
2021-09-13T19:03:56.973Z appoptics:patching patched http 
2021-09-13T19:03:57.027Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:03:57.027Z appoptics:patching patched fs 
2021-09-13T19:03:57.058Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:03:57.059Z appoptics:patching patched pg 6.0.1
2021-09-13T19:03:57.084Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (126ms)
  2 failing

  1) probes.pg 6.0.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.2
updated 1 package and audited 1113 packages in 5.175s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:04:03.719Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:04:03.719Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:04:03.719Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:04:03.720Z appoptics:debug using context provider: ace-context
2021-09-13T19:04:03.770Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:04:03.806Z appoptics:patching patched crypto 
2021-09-13T19:04:03.823Z appoptics:patching patched https 
2021-09-13T19:04:03.824Z appoptics:patching patched http 
2021-09-13T19:04:03.858Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:04:03.858Z appoptics:patching patched fs 
2021-09-13T19:04:03.875Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:04:03.877Z appoptics:patching patched pg 6.0.2
2021-09-13T19:04:03.898Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (82ms)
  2 failing

  1) probes.pg 6.0.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.3
updated 1 package and audited 1113 packages in 4.511s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:04:09.711Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:04:09.711Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:04:09.711Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:04:09.712Z appoptics:debug using context provider: ace-context
2021-09-13T19:04:09.813Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:04:09.881Z appoptics:patching patched crypto 
2021-09-13T19:04:09.913Z appoptics:patching patched https 
2021-09-13T19:04:09.913Z appoptics:patching patched http 
2021-09-13T19:04:09.951Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:04:09.951Z appoptics:patching patched fs 
2021-09-13T19:04:09.968Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:04:09.970Z appoptics:patching patched pg 6.0.3
2021-09-13T19:04:09.992Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (120ms)
  2 failing

  1) probes.pg 6.0.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.4
added 2 packages from 1 contributor, removed 2 packages, updated 2 packages and audited 1113 packages in 6.1s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:04:17.500Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:04:17.501Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:04:17.501Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:04:17.501Z appoptics:debug using context provider: ace-context
2021-09-13T19:04:17.553Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:04:17.589Z appoptics:patching patched crypto 
2021-09-13T19:04:17.607Z appoptics:patching patched https 
2021-09-13T19:04:17.607Z appoptics:patching patched http 
2021-09-13T19:04:17.644Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:04:17.644Z appoptics:patching patched fs 
2021-09-13T19:04:17.667Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:04:17.668Z appoptics:patching patched pg 6.0.4
2021-09-13T19:04:17.689Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (81ms)
  2 failing

  1) probes.pg 6.0.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.0.5
added 1 package from 2 contributors, updated 1 package and audited 1114 packages in 5.167s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:04:24.257Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:04:24.258Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:04:24.258Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:04:24.259Z appoptics:debug using context provider: ace-context
2021-09-13T19:04:24.332Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:04:24.375Z appoptics:patching patched crypto 
2021-09-13T19:04:24.396Z appoptics:patching patched https 
2021-09-13T19:04:24.396Z appoptics:patching patched http 
2021-09-13T19:04:24.453Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:04:24.454Z appoptics:patching patched fs 
2021-09-13T19:04:24.486Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:04:24.489Z appoptics:patching patched pg 6.0.5
2021-09-13T19:04:24.511Z appoptics:debug starting runtimeMetrics


  probes.pg 6.0.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (79ms)
  2 failing

  1) probes.pg 6.0.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.0.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.0
removed 1 package, updated 1 package and audited 1113 packages in 4.606s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:04:30.504Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:04:30.505Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:04:30.505Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:04:30.506Z appoptics:debug using context provider: ace-context
2021-09-13T19:04:30.556Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:04:30.589Z appoptics:patching patched crypto 
2021-09-13T19:04:30.607Z appoptics:patching patched https 
2021-09-13T19:04:30.608Z appoptics:patching patched http 
2021-09-13T19:04:30.642Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:04:30.643Z appoptics:patching patched fs 
2021-09-13T19:04:30.665Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:04:30.667Z appoptics:patching patched pg 6.1.0
2021-09-13T19:04:30.688Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (82ms)
  2 failing

  1) probes.pg 6.1.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.1
updated 1 package and audited 1113 packages in 5.022s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:04:37.158Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:04:37.159Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:04:37.159Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:04:37.160Z appoptics:debug using context provider: ace-context
2021-09-13T19:04:37.211Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:04:37.248Z appoptics:patching patched crypto 
2021-09-13T19:04:37.266Z appoptics:patching patched https 
2021-09-13T19:04:37.266Z appoptics:patching patched http 
2021-09-13T19:04:37.298Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:04:37.298Z appoptics:patching patched fs 
2021-09-13T19:04:37.320Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:04:37.324Z appoptics:patching patched pg 6.1.1
2021-09-13T19:04:37.345Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (82ms)
  2 failing

  1) probes.pg 6.1.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.2
updated 1 package and audited 1113 packages in 4.812s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:04:43.420Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:04:43.420Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:04:43.420Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:04:43.421Z appoptics:debug using context provider: ace-context
2021-09-13T19:04:43.471Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:04:43.505Z appoptics:patching patched crypto 
2021-09-13T19:04:43.528Z appoptics:patching patched https 
2021-09-13T19:04:43.528Z appoptics:patching patched http 
2021-09-13T19:04:43.556Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:04:43.556Z appoptics:patching patched fs 
2021-09-13T19:04:43.579Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:04:43.580Z appoptics:patching patched pg 6.1.2
2021-09-13T19:04:43.601Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (81ms)
  2 failing

  1) probes.pg 6.1.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.3
updated 1 package and audited 1113 packages in 5.051s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:04:49.908Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:04:49.909Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:04:49.909Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:04:49.909Z appoptics:debug using context provider: ace-context
2021-09-13T19:04:49.961Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:04:49.998Z appoptics:patching patched crypto 
2021-09-13T19:04:50.016Z appoptics:patching patched https 
2021-09-13T19:04:50.017Z appoptics:patching patched http 
2021-09-13T19:04:50.048Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:04:50.049Z appoptics:patching patched fs 
2021-09-13T19:04:50.071Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:04:50.072Z appoptics:patching patched pg 6.1.3
2021-09-13T19:04:50.093Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (80ms)
  2 failing

  1) probes.pg 6.1.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.4
updated 1 package and audited 1113 packages in 5.052s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:04:56.437Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:04:56.437Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:04:56.437Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:04:56.438Z appoptics:debug using context provider: ace-context
2021-09-13T19:04:56.485Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:04:56.520Z appoptics:patching patched crypto 
2021-09-13T19:04:56.539Z appoptics:patching patched https 
2021-09-13T19:04:56.539Z appoptics:patching patched http 
2021-09-13T19:04:56.573Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:04:56.573Z appoptics:patching patched fs 
2021-09-13T19:04:56.596Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:04:56.597Z appoptics:patching patched pg 6.1.4
2021-09-13T19:04:56.618Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (80ms)
  2 failing

  1) probes.pg 6.1.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.5
updated 1 package and audited 1113 packages in 5.144s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:05:03.263Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:05:03.264Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:05:03.264Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:05:03.265Z appoptics:debug using context provider: ace-context
2021-09-13T19:05:03.337Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:05:03.381Z appoptics:patching patched crypto 
2021-09-13T19:05:03.412Z appoptics:patching patched https 
2021-09-13T19:05:03.413Z appoptics:patching patched http 
2021-09-13T19:05:03.452Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:05:03.452Z appoptics:patching patched fs 
2021-09-13T19:05:03.475Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:05:03.476Z appoptics:patching patched pg 6.1.5
2021-09-13T19:05:03.498Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (85ms)
  2 failing

  1) probes.pg 6.1.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.1.6
added 1 package from 2 contributors, updated 1 package and audited 1114 packages in 4.449s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:05:09.253Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:05:09.254Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:05:09.254Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:05:09.255Z appoptics:debug using context provider: ace-context
2021-09-13T19:05:09.301Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:05:09.336Z appoptics:patching patched crypto 
2021-09-13T19:05:09.360Z appoptics:patching patched https 
2021-09-13T19:05:09.360Z appoptics:patching patched http 
2021-09-13T19:05:09.391Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:05:09.391Z appoptics:patching patched fs 
2021-09-13T19:05:09.415Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:05:09.416Z appoptics:patching patched pg 6.1.6
2021-09-13T19:05:09.438Z appoptics:debug starting runtimeMetrics


  probes.pg 6.1.6
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (81ms)
  2 failing

  1) probes.pg 6.1.6
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.1.6
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.2
removed 1 package, updated 2 packages and audited 1113 packages in 5.675s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:05:16.350Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:05:16.351Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:05:16.351Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:05:16.352Z appoptics:debug using context provider: ace-context
2021-09-13T19:05:16.402Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:05:16.437Z appoptics:patching patched crypto 
2021-09-13T19:05:16.454Z appoptics:patching patched https 
2021-09-13T19:05:16.455Z appoptics:patching patched http 
2021-09-13T19:05:16.488Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:05:16.488Z appoptics:patching patched fs 
2021-09-13T19:05:16.510Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:05:16.512Z appoptics:patching patched pg 6.2.2
2021-09-13T19:05:16.533Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (81ms)
  2 failing

  1) probes.pg 6.2.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.3
updated 1 package and audited 1113 packages in 4.464s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:05:22.285Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:05:22.286Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:05:22.286Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:05:22.287Z appoptics:debug using context provider: ace-context
2021-09-13T19:05:22.337Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:05:22.370Z appoptics:patching patched crypto 
2021-09-13T19:05:22.389Z appoptics:patching patched https 
2021-09-13T19:05:22.389Z appoptics:patching patched http 
2021-09-13T19:05:22.428Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:05:22.428Z appoptics:patching patched fs 
2021-09-13T19:05:22.462Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:05:22.463Z appoptics:patching patched pg 6.2.3
2021-09-13T19:05:22.486Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (77ms)
  2 failing

  1) probes.pg 6.2.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.4
updated 1 package and audited 1113 packages in 5.78s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:05:29.608Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:05:29.609Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:05:29.609Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:05:29.609Z appoptics:debug using context provider: ace-context
2021-09-13T19:05:29.661Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:05:29.695Z appoptics:patching patched crypto 
2021-09-13T19:05:29.715Z appoptics:patching patched https 
2021-09-13T19:05:29.715Z appoptics:patching patched http 
2021-09-13T19:05:29.747Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:05:29.747Z appoptics:patching patched fs 
2021-09-13T19:05:29.770Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:05:29.772Z appoptics:patching patched pg 6.2.4
2021-09-13T19:05:29.793Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.4
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (77ms)
  2 failing

  1) probes.pg 6.2.4
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.4
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.2.5
added 1 package from 2 contributors, updated 1 package and audited 1114 packages in 4.678s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:05:35.742Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:05:35.743Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:05:35.743Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:05:35.744Z appoptics:debug using context provider: ace-context
2021-09-13T19:05:35.794Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:05:35.829Z appoptics:patching patched crypto 
2021-09-13T19:05:35.847Z appoptics:patching patched https 
2021-09-13T19:05:35.848Z appoptics:patching patched http 
2021-09-13T19:05:35.887Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:05:35.888Z appoptics:patching patched fs 
2021-09-13T19:05:35.915Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:05:35.917Z appoptics:patching patched pg 6.2.5
2021-09-13T19:05:35.938Z appoptics:debug starting runtimeMetrics


  probes.pg 6.2.5
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (101ms)
  2 failing

  1) probes.pg 6.2.5
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.2.5
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.0
removed 1 package, updated 1 package and audited 1113 packages in 5.16s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:05:42.604Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:05:42.605Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:05:42.605Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:05:42.606Z appoptics:debug using context provider: ace-context
2021-09-13T19:05:42.656Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:05:42.698Z appoptics:patching patched crypto 
2021-09-13T19:05:42.720Z appoptics:patching patched https 
2021-09-13T19:05:42.720Z appoptics:patching patched http 
2021-09-13T19:05:42.763Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:05:42.764Z appoptics:patching patched fs 
2021-09-13T19:05:42.787Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:05:42.789Z appoptics:patching patched pg 6.3.0
2021-09-13T19:05:42.813Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1018) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1018) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (79ms)
  2 failing

  1) probes.pg 6.3.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.3.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.1
updated 1 package and audited 1113 packages in 4.7s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:05:48.809Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:05:48.809Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:05:48.810Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:05:48.810Z appoptics:debug using context provider: ace-context
2021-09-13T19:05:48.867Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:05:48.900Z appoptics:patching patched crypto 
2021-09-13T19:05:48.919Z appoptics:patching patched https 
2021-09-13T19:05:48.919Z appoptics:patching patched http 
2021-09-13T19:05:48.977Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:05:48.977Z appoptics:patching patched fs 
2021-09-13T19:05:49.002Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:05:49.004Z appoptics:patching patched pg 6.3.1
2021-09-13T19:05:49.026Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1041) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1041) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (160ms)
  2 failing

  1) probes.pg 6.3.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.3.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.3.3
added 1 package from 2 contributors, updated 1 package and audited 1114 packages in 6.077s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:05:56.573Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:05:56.573Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:05:56.573Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:05:56.574Z appoptics:debug using context provider: ace-context
2021-09-13T19:05:56.625Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:05:56.661Z appoptics:patching patched crypto 
2021-09-13T19:05:56.688Z appoptics:patching patched https 
2021-09-13T19:05:56.693Z appoptics:patching patched http 
2021-09-13T19:05:56.716Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:05:56.717Z appoptics:patching patched fs 
2021-09-13T19:05:56.739Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:05:56.741Z appoptics:patching patched pg 6.3.3
2021-09-13T19:05:56.762Z appoptics:debug starting runtimeMetrics


  probes.pg 6.3.3
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1064) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1064) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (81ms)
  2 failing

  1) probes.pg 6.3.3
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.3.3
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.0
removed 1 package, updated 1 package and audited 1113 packages in 5.254s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:06:03.709Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:06:03.710Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:06:03.710Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:06:03.711Z appoptics:debug using context provider: ace-context
2021-09-13T19:06:03.776Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:06:03.810Z appoptics:patching patched crypto 
2021-09-13T19:06:03.831Z appoptics:patching patched https 
2021-09-13T19:06:03.831Z appoptics:patching patched http 
2021-09-13T19:06:03.865Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:06:03.865Z appoptics:patching patched fs 
2021-09-13T19:06:03.889Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:06:03.891Z appoptics:patching patched pg 6.4.0
2021-09-13T19:06:03.912Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.0
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1087) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1087) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (101ms)
  2 failing

  1) probes.pg 6.4.0
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.4.0
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.1
updated 1 package and audited 1113 packages in 4.607s

72 packages are looking for funding
  run `npm fund` for details

found 25 vulnerabilities (5 low, 4 moderate, 14 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:06:09.982Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:06:09.982Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:06:09.982Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:06:09.983Z appoptics:debug using context provider: ace-context
2021-09-13T19:06:10.037Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:06:10.071Z appoptics:patching patched crypto 
2021-09-13T19:06:10.089Z appoptics:patching patched https 
2021-09-13T19:06:10.089Z appoptics:patching patched http 
2021-09-13T19:06:10.122Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:06:10.123Z appoptics:patching patched fs 
2021-09-13T19:06:10.145Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:06:10.147Z appoptics:patching patched pg 6.4.1
2021-09-13T19:06:10.168Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.1
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1110) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1110) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (77ms)
  2 failing

  1) probes.pg 6.4.1
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.4.1
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@6.4.2
added 1 package from 2 contributors, updated 1 package and audited 1114 packages in 5.276s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:06:16.737Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:06:16.737Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:06:16.737Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:06:16.738Z appoptics:debug using context provider: ace-context
2021-09-13T19:06:16.789Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:06:16.823Z appoptics:patching patched crypto 
2021-09-13T19:06:16.841Z appoptics:patching patched https 
2021-09-13T19:06:16.841Z appoptics:patching patched http 
2021-09-13T19:06:16.876Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:06:16.877Z appoptics:patching patched fs 
2021-09-13T19:06:16.899Z appoptics:patching patched generic-pool 2.4.3
2021-09-13T19:06:16.901Z appoptics:patching patched pg 6.4.2
2021-09-13T19:06:16.922Z appoptics:debug starting runtimeMetrics


  probes.pg 6.4.2
    ✓ should sanitize SQL by default
    javascript
      ✓ UDP might lose a message
      ✓ should trace a basic query
(node:1133) DeprecationWarning: PG.connect is deprecated - please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace through a connection pool
      ✓ should trace prepared statements
      ✓ should sanitize query string, when not using value list
(node:1133) DeprecationWarning: Using the automatically created return value from client.query as an event emitter is deprecated and will be removed in pg@7.0. Please see the upgrade guide at https://node-postgres.com/guides/upgrading
      ✓ should trace evented style
      ✓ should trim long queries
      ✓ should skip when disabled
    native
      1) "before all" hook for "UDP might lose a message"
      2) "after all" hook for "should skip when disabled"


  9 passing (79ms)
  2 failing

  1) probes.pg 6.4.2
       native
         "before all" hook for "UDP might lose a message":
     TypeError: Cannot read property 'constructor' of undefined
      at new <anonymous> (lib/probes/pg.js:59:26)
      at Context.<anonymous> (test/probes/pg6-minus.js:144:24)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)

  2) probes.pg 6.4.2
       native
         "after all" hook for "should skip when disabled":
     TypeError: Cannot read property 'end' of undefined
      at Context.<anonymous> (test/probes/pg6-minus.js:159:12)
      at processImmediate (internal/timers.js:461:21)
      at process.callbackTrampoline (internal/async_hooks.js:126:14)



npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.5.0
removed 3 packages, updated 3 packages and audited 1111 packages in 4.766s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:06:22.985Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:06:22.986Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:06:22.986Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:06:22.987Z appoptics:debug using context provider: ace-context
2021-09-13T19:06:23.042Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:06:23.076Z appoptics:patching patched crypto 
2021-09-13T19:06:23.101Z appoptics:patching patched https 
2021-09-13T19:06:23.101Z appoptics:patching patched http 
2021-09-13T19:06:23.131Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:06:23.132Z appoptics:patching patched fs 
2021-09-13T19:06:23.147Z appoptics:patching patched pg 7.5.0
2021-09-13T19:06:23.171Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (64ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.0
updated 1 package and audited 1111 packages in 5.104s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:06:34.938Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:06:34.938Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:06:34.939Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:06:34.939Z appoptics:debug using context provider: ace-context
2021-09-13T19:06:34.991Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:06:35.026Z appoptics:patching patched crypto 
2021-09-13T19:06:35.059Z appoptics:patching patched https 
2021-09-13T19:06:35.060Z appoptics:patching patched http 
2021-09-13T19:06:35.088Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:06:35.089Z appoptics:patching patched fs 
2021-09-13T19:06:35.104Z appoptics:patching patched pg 7.6.0
2021-09-13T19:06:35.128Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (234ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.6.1
updated 2 packages and audited 1111 packages in 4.941s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:06:46.627Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:06:46.627Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:06:46.627Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:06:46.628Z appoptics:debug using context provider: ace-context
2021-09-13T19:06:46.683Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:06:46.717Z appoptics:patching patched crypto 
2021-09-13T19:06:46.745Z appoptics:patching patched https 
2021-09-13T19:06:46.745Z appoptics:patching patched http 
2021-09-13T19:06:46.772Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:06:46.772Z appoptics:patching patched fs 
2021-09-13T19:06:46.787Z appoptics:patching patched pg 7.6.1
2021-09-13T19:06:46.812Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.6.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.6.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (988ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.0
updated 1 package and audited 1111 packages in 5.43s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:06:58.816Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:06:58.817Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:06:58.817Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:06:58.818Z appoptics:debug using context provider: ace-context
2021-09-13T19:06:58.867Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:06:58.901Z appoptics:patching patched crypto 
2021-09-13T19:06:58.920Z appoptics:patching patched https 
2021-09-13T19:06:58.920Z appoptics:patching patched http 
2021-09-13T19:06:58.955Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:06:58.955Z appoptics:patching patched fs 
2021-09-13T19:06:58.971Z appoptics:patching patched pg 7.7.0
2021-09-13T19:06:58.995Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (259ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (214ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.7.1
updated 1 package and audited 1111 packages in 4.416s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:07:09.996Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:07:09.997Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:07:09.997Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:07:09.998Z appoptics:debug using context provider: ace-context
2021-09-13T19:07:10.047Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:07:10.081Z appoptics:patching patched crypto 
2021-09-13T19:07:10.099Z appoptics:patching patched https 
2021-09-13T19:07:10.108Z appoptics:patching patched http 
2021-09-13T19:07:10.139Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:07:10.139Z appoptics:patching patched fs 
2021-09-13T19:07:10.155Z appoptics:patching patched pg 7.7.1
2021-09-13T19:07:10.180Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (255ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.0
updated 3 packages and audited 1111 packages in 5.002s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:07:21.779Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:07:21.780Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:07:21.780Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:07:21.781Z appoptics:debug using context provider: ace-context
2021-09-13T19:07:21.852Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:07:21.886Z appoptics:patching patched crypto 
2021-09-13T19:07:21.911Z appoptics:patching patched https 
2021-09-13T19:07:21.911Z appoptics:patching patched http 
2021-09-13T19:07:21.944Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:07:21.944Z appoptics:patching patched fs 
2021-09-13T19:07:21.960Z appoptics:patching patched pg 7.8.0
2021-09-13T19:07:21.983Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.1
updated 2 packages and audited 1111 packages in 4.524s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:07:33.083Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:07:33.083Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:07:33.083Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:07:33.084Z appoptics:debug using context provider: ace-context
2021-09-13T19:07:33.134Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:07:33.168Z appoptics:patching patched crypto 
2021-09-13T19:07:33.186Z appoptics:patching patched https 
2021-09-13T19:07:33.187Z appoptics:patching patched http 
2021-09-13T19:07:33.222Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:07:33.222Z appoptics:patching patched fs 
2021-09-13T19:07:33.237Z appoptics:patching patched pg 7.8.1
2021-09-13T19:07:33.260Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.8.2
updated 1 package and audited 1111 packages in 4.464s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:07:44.394Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:07:44.395Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:07:44.395Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:07:44.396Z appoptics:debug using context provider: ace-context
2021-09-13T19:07:44.476Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:07:44.547Z appoptics:patching patched crypto 
2021-09-13T19:07:44.568Z appoptics:patching patched https 
2021-09-13T19:07:44.568Z appoptics:patching patched http 
2021-09-13T19:07:44.638Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:07:44.639Z appoptics:patching patched fs 
2021-09-13T19:07:44.657Z appoptics:patching patched pg 7.8.2
2021-09-13T19:07:44.694Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.8.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.8.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1002ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (246ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (219ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.9.0
updated 1 package and audited 1111 packages in 4.458s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:07:55.884Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:07:55.885Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:07:55.885Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:07:55.886Z appoptics:debug using context provider: ace-context
2021-09-13T19:07:55.936Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:07:55.971Z appoptics:patching patched crypto 
2021-09-13T19:07:55.989Z appoptics:patching patched https 
2021-09-13T19:07:55.990Z appoptics:patching patched http 
2021-09-13T19:07:56.027Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:07:56.028Z appoptics:patching patched fs 
2021-09-13T19:07:56.043Z appoptics:patching patched pg 7.9.0
2021-09-13T19:07:56.066Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.9.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.9.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.10.0
updated 1 package and audited 1111 packages in 4.69s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:08:07.330Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:08:07.330Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:08:07.330Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:08:07.331Z appoptics:debug using context provider: ace-context
2021-09-13T19:08:07.379Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:08:07.412Z appoptics:patching patched crypto 
2021-09-13T19:08:07.439Z appoptics:patching patched https 
2021-09-13T19:08:07.440Z appoptics:patching patched http 
2021-09-13T19:08:07.469Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:08:07.469Z appoptics:patching patched fs 
2021-09-13T19:08:07.485Z appoptics:patching patched pg 7.10.0
2021-09-13T19:08:07.509Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.10.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.10.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.11.0
updated 1 package and audited 1111 packages in 4.515s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:08:18.623Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:08:18.624Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:08:18.624Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:08:18.625Z appoptics:debug using context provider: ace-context
2021-09-13T19:08:18.673Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:08:18.707Z appoptics:patching patched crypto 
2021-09-13T19:08:18.729Z appoptics:patching patched https 
2021-09-13T19:08:18.729Z appoptics:patching patched http 
2021-09-13T19:08:18.763Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:08:18.764Z appoptics:patching patched fs 
2021-09-13T19:08:18.780Z appoptics:patching patched pg 7.11.0
2021-09-13T19:08:18.805Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.11.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.11.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (997ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (250ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.0
updated 1 package and audited 1111 packages in 4.617s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:08:30.101Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:08:30.102Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:08:30.102Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:08:30.102Z appoptics:debug using context provider: ace-context
2021-09-13T19:08:30.169Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:08:30.212Z appoptics:patching patched crypto 
2021-09-13T19:08:30.231Z appoptics:patching patched https 
2021-09-13T19:08:30.244Z appoptics:patching patched http 
2021-09-13T19:08:30.289Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:08:30.289Z appoptics:patching patched fs 
2021-09-13T19:08:30.306Z appoptics:patching patched pg 7.12.0
2021-09-13T19:08:30.330Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (235ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (243ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (985ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (237ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.12.1
updated 2 packages and audited 1111 packages in 4.493s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:08:41.586Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:08:41.587Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:08:41.587Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:08:41.587Z appoptics:debug using context provider: ace-context
2021-09-13T19:08:41.637Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:08:41.670Z appoptics:patching patched crypto 
2021-09-13T19:08:41.692Z appoptics:patching patched https 
2021-09-13T19:08:41.692Z appoptics:patching patched http 
2021-09-13T19:08:41.726Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:08:41.727Z appoptics:patching patched fs 
2021-09-13T19:08:41.742Z appoptics:patching patched pg 7.12.1
2021-09-13T19:08:41.765Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.12.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.12.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (248ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.13.0
updated 1 package and audited 1111 packages in 4.763s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:08:53.155Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:08:53.155Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:08:53.155Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:08:53.156Z appoptics:debug using context provider: ace-context
2021-09-13T19:08:53.204Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:08:53.238Z appoptics:patching patched crypto 
2021-09-13T19:08:53.255Z appoptics:patching patched https 
2021-09-13T19:08:53.256Z appoptics:patching patched http 
2021-09-13T19:08:53.295Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:08:53.296Z appoptics:patching patched fs 
2021-09-13T19:08:53.311Z appoptics:patching patched pg 7.13.0
2021-09-13T19:08:53.335Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.13.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.13.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (238ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.14.0
updated 1 package and audited 1111 packages in 4.709s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:09:04.640Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:09:04.641Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:09:04.641Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:09:04.642Z appoptics:debug using context provider: ace-context
2021-09-13T19:09:04.693Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:09:04.727Z appoptics:patching patched crypto 
2021-09-13T19:09:04.748Z appoptics:patching patched https 
2021-09-13T19:09:04.749Z appoptics:patching patched http 
2021-09-13T19:09:04.780Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:09:04.781Z appoptics:patching patched fs 
2021-09-13T19:09:04.796Z appoptics:patching patched pg 7.14.0
2021-09-13T19:09:04.821Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.14.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.14.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.0
updated 1 package and audited 1111 packages in 4.678s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:09:16.130Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:09:16.131Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:09:16.131Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:09:16.132Z appoptics:debug using context provider: ace-context
2021-09-13T19:09:16.184Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:09:16.220Z appoptics:patching patched crypto 
2021-09-13T19:09:16.238Z appoptics:patching patched https 
2021-09-13T19:09:16.242Z appoptics:patching patched http 
2021-09-13T19:09:16.274Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:09:16.275Z appoptics:patching patched fs 
2021-09-13T19:09:16.290Z appoptics:patching patched pg 7.15.0
2021-09-13T19:09:16.314Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.1
updated 1 package and audited 1111 packages in 5.04s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:09:27.924Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:09:27.925Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:09:27.925Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:09:27.925Z appoptics:debug using context provider: ace-context
2021-09-13T19:09:27.976Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:09:28.010Z appoptics:patching patched crypto 
2021-09-13T19:09:28.029Z appoptics:patching patched https 
2021-09-13T19:09:28.029Z appoptics:patching patched http 
2021-09-13T19:09:28.068Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:09:28.069Z appoptics:patching patched fs 
2021-09-13T19:09:28.085Z appoptics:patching patched pg 7.15.1
2021-09-13T19:09:28.110Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.15.2
updated 1 package and audited 1111 packages in 5.843s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:09:40.575Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:09:40.576Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:09:40.576Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:09:40.577Z appoptics:debug using context provider: ace-context
2021-09-13T19:09:40.647Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:09:40.682Z appoptics:patching patched crypto 
2021-09-13T19:09:40.709Z appoptics:patching patched https 
2021-09-13T19:09:40.709Z appoptics:patching patched http 
2021-09-13T19:09:40.744Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:09:40.744Z appoptics:patching patched fs 
2021-09-13T19:09:40.762Z appoptics:patching patched pg 7.15.2
2021-09-13T19:09:40.786Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.15.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.15.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (997ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (232ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.0
added 1 package, updated 1 package and audited 1112 packages in 5.085s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:09:52.784Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:09:52.785Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:09:52.785Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:09:52.786Z appoptics:debug using context provider: ace-context
2021-09-13T19:09:52.855Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:09:52.903Z appoptics:patching patched crypto 
2021-09-13T19:09:52.934Z appoptics:patching patched https 
2021-09-13T19:09:52.939Z appoptics:patching patched http 
2021-09-13T19:09:52.974Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:09:52.974Z appoptics:patching patched fs 
2021-09-13T19:09:52.991Z appoptics:patching patched pg 7.16.0
2021-09-13T19:09:53.014Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (233ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.16.1
updated 1 package and audited 1112 packages in 5.102s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:10:05.093Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:10:05.093Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:10:05.094Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:10:05.094Z appoptics:debug using context provider: ace-context
2021-09-13T19:10:05.170Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:10:05.222Z appoptics:patching patched crypto 
2021-09-13T19:10:05.251Z appoptics:patching patched https 
2021-09-13T19:10:05.263Z appoptics:patching patched http 
2021-09-13T19:10:05.318Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:10:05.318Z appoptics:patching patched fs 
2021-09-13T19:10:05.345Z appoptics:patching patched pg 7.16.1
2021-09-13T19:10:05.370Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.16.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.16.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.0
updated 1 package and audited 1112 packages in 4.492s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:10:16.762Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:10:16.763Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:10:16.763Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:10:16.764Z appoptics:debug using context provider: ace-context
2021-09-13T19:10:16.831Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:10:16.880Z appoptics:patching patched crypto 
2021-09-13T19:10:16.945Z appoptics:patching patched https 
2021-09-13T19:10:16.946Z appoptics:patching patched http 
2021-09-13T19:10:17.002Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:10:17.002Z appoptics:patching patched fs 
2021-09-13T19:10:17.028Z appoptics:patching patched pg 7.17.0
2021-09-13T19:10:17.064Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (45ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.17.1
updated 1 package and audited 1112 packages in 4.545s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:10:28.385Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:10:28.394Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:10:28.394Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:10:28.395Z appoptics:debug using context provider: ace-context
2021-09-13T19:10:28.478Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:10:28.552Z appoptics:patching patched crypto 
2021-09-13T19:10:28.590Z appoptics:patching patched https 
2021-09-13T19:10:28.590Z appoptics:patching patched http 
2021-09-13T19:10:28.638Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:10:28.638Z appoptics:patching patched fs 
2021-09-13T19:10:28.657Z appoptics:patching patched pg 7.17.1
2021-09-13T19:10:28.685Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.17.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.17.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (253ms)
        ✓ should trace a basic query using callback (982ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (232ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (242ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.0
updated 1 package and audited 1112 packages in 5.124s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:10:40.624Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:10:40.625Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:10:40.625Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:10:40.626Z appoptics:debug using context provider: ace-context
2021-09-13T19:10:40.692Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:10:40.740Z appoptics:patching patched crypto 
2021-09-13T19:10:40.789Z appoptics:patching patched https 
2021-09-13T19:10:40.790Z appoptics:patching patched http 
2021-09-13T19:10:40.849Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:10:40.850Z appoptics:patching patched fs 
2021-09-13T19:10:40.879Z appoptics:patching patched pg 7.18.0
2021-09-13T19:10:40.922Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (996ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (237ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.1
updated 1 package and audited 1112 packages in 4.618s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:10:52.654Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:10:52.655Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:10:52.655Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:10:52.656Z appoptics:debug using context provider: ace-context
2021-09-13T19:10:52.724Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:10:52.759Z appoptics:patching patched crypto 
2021-09-13T19:10:52.796Z appoptics:patching patched https 
2021-09-13T19:10:52.796Z appoptics:patching patched http 
2021-09-13T19:10:52.837Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:10:52.838Z appoptics:patching patched fs 
2021-09-13T19:10:52.856Z appoptics:patching patched pg 7.18.1
2021-09-13T19:10:52.880Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@7.18.2
updated 1 package and audited 1112 packages in 4.828s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:11:04.631Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:11:04.631Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:11:04.631Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:11:04.632Z appoptics:debug using context provider: ace-context
2021-09-13T19:11:04.709Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:11:04.754Z appoptics:patching patched crypto 
2021-09-13T19:11:04.791Z appoptics:patching patched https 
2021-09-13T19:11:04.791Z appoptics:patching patched http 
2021-09-13T19:11:04.835Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:11:04.836Z appoptics:patching patched fs 
2021-09-13T19:11:04.853Z appoptics:patching patched pg 7.18.2
2021-09-13T19:11:04.877Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 7.18.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 7.18.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (246ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.0
updated 2 packages and audited 1112 packages in 4.633s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:11:16.270Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:11:16.279Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:11:16.279Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:11:16.279Z appoptics:debug using context provider: ace-context
2021-09-13T19:11:16.342Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:11:16.396Z appoptics:patching patched crypto 
2021-09-13T19:11:16.415Z appoptics:patching patched https 
2021-09-13T19:11:16.415Z appoptics:patching patched http 
2021-09-13T19:11:16.471Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:11:16.471Z appoptics:patching patched fs 
2021-09-13T19:11:16.492Z appoptics:patching patched pg 8.0.0
2021-09-13T19:11:16.519Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (237ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (249ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.1
added 1 package, removed 1 package, updated 1 package and audited 1112 packages in 5.6s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:11:29.056Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:11:29.057Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:11:29.057Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:11:29.058Z appoptics:debug using context provider: ace-context
2021-09-13T19:11:29.183Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:11:29.275Z appoptics:patching patched crypto 
2021-09-13T19:11:29.304Z appoptics:patching patched https 
2021-09-13T19:11:29.304Z appoptics:patching patched http 
2021-09-13T19:11:29.372Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:11:29.372Z appoptics:patching patched fs 
2021-09-13T19:11:29.388Z appoptics:patching patched pg 8.0.1
2021-09-13T19:11:29.412Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.2
updated 1 package and audited 1112 packages in 5.016s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:11:41.253Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:11:41.254Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:11:41.254Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:11:41.255Z appoptics:debug using context provider: ace-context
2021-09-13T19:11:41.323Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:11:41.372Z appoptics:patching patched crypto 
2021-09-13T19:11:41.408Z appoptics:patching patched https 
2021-09-13T19:11:41.408Z appoptics:patching patched http 
2021-09-13T19:11:41.449Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:11:41.449Z appoptics:patching patched fs 
2021-09-13T19:11:41.467Z appoptics:patching patched pg 8.0.2
2021-09-13T19:11:41.491Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.3
updated 1 package and audited 1112 packages in 4.556s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:11:52.756Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:11:52.757Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:11:52.757Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:11:52.758Z appoptics:debug using context provider: ace-context
2021-09-13T19:11:52.846Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:11:52.900Z appoptics:patching patched crypto 
2021-09-13T19:11:52.919Z appoptics:patching patched https 
2021-09-13T19:11:52.930Z appoptics:patching patched http 
2021-09-13T19:11:52.975Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:11:52.976Z appoptics:patching patched fs 
2021-09-13T19:11:52.993Z appoptics:patching patched pg 8.0.3
2021-09-13T19:11:53.018Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (251ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.1.0
updated 2 packages and audited 1112 packages in 4.587s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:12:04.497Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:12:04.498Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:12:04.498Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:12:04.499Z appoptics:debug using context provider: ace-context
2021-09-13T19:12:04.569Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:12:04.608Z appoptics:patching patched crypto 
2021-09-13T19:12:04.628Z appoptics:patching patched https 
2021-09-13T19:12:04.628Z appoptics:patching patched http 
2021-09-13T19:12:04.693Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:12:04.693Z appoptics:patching patched fs 
2021-09-13T19:12:04.710Z appoptics:patching patched pg 8.1.0
2021-09-13T19:12:04.734Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.1.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.1.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (995ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.0
updated 1 package and audited 1112 packages in 4.486s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:12:15.872Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:12:15.873Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:12:15.873Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:12:15.874Z appoptics:debug using context provider: ace-context
2021-09-13T19:12:15.941Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:12:15.982Z appoptics:patching patched crypto 
2021-09-13T19:12:16.005Z appoptics:patching patched https 
2021-09-13T19:12:16.017Z appoptics:patching patched http 
2021-09-13T19:12:16.061Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:12:16.061Z appoptics:patching patched fs 
2021-09-13T19:12:16.080Z appoptics:patching patched pg 8.2.0
2021-09-13T19:12:16.110Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (252ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.1
updated 1 package and audited 1112 packages in 4.471s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:12:27.294Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:12:27.294Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:12:27.294Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:12:27.295Z appoptics:debug using context provider: ace-context
2021-09-13T19:12:27.371Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:12:27.420Z appoptics:patching patched crypto 
2021-09-13T19:12:27.440Z appoptics:patching patched https 
2021-09-13T19:12:27.455Z appoptics:patching patched http 
2021-09-13T19:12:27.488Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:12:27.488Z appoptics:patching patched fs 
2021-09-13T19:12:27.507Z appoptics:patching patched pg 8.2.1
2021-09-13T19:12:27.530Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (998ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (993ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.2
updated 1 package and audited 1112 packages in 4.472s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:12:38.754Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:12:38.754Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:12:38.754Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:12:38.755Z appoptics:debug using context provider: ace-context
2021-09-13T19:12:38.805Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:12:38.840Z appoptics:patching patched crypto 
2021-09-13T19:12:38.864Z appoptics:patching patched https 
2021-09-13T19:12:38.864Z appoptics:patching patched http 
2021-09-13T19:12:38.896Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:12:38.896Z appoptics:patching patched fs 
2021-09-13T19:12:38.915Z appoptics:patching patched pg 8.2.2
2021-09-13T19:12:38.939Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.0
updated 1 package and audited 1112 packages in 4.473s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:12:50.135Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:12:50.136Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:12:50.136Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:12:50.137Z appoptics:debug using context provider: ace-context
2021-09-13T19:12:50.185Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:12:50.220Z appoptics:patching patched crypto 
2021-09-13T19:12:50.243Z appoptics:patching patched https 
2021-09-13T19:12:50.243Z appoptics:patching patched http 
2021-09-13T19:12:50.275Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:12:50.276Z appoptics:patching patched fs 
2021-09-13T19:12:50.293Z appoptics:patching patched pg 8.3.0
2021-09-13T19:12:50.316Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (983ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (232ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (240ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (231ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.2
updated 1 package and audited 1112 packages in 4.528s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:13:01.487Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:13:01.488Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:13:01.488Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:13:01.489Z appoptics:debug using context provider: ace-context
2021-09-13T19:13:01.553Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:13:01.592Z appoptics:patching patched crypto 
2021-09-13T19:13:01.629Z appoptics:patching patched https 
2021-09-13T19:13:01.630Z appoptics:patching patched http 
2021-09-13T19:13:01.665Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:13:01.665Z appoptics:patching patched fs 
2021-09-13T19:13:01.684Z appoptics:patching patched pg 8.3.2
2021-09-13T19:13:01.708Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (231ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.3
updated 1 package and audited 1112 packages in 4.478s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:13:12.941Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:13:12.942Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:13:12.942Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:13:12.943Z appoptics:debug using context provider: ace-context
2021-09-13T19:13:13.012Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:13:13.056Z appoptics:patching patched crypto 
2021-09-13T19:13:13.091Z appoptics:patching patched https 
2021-09-13T19:13:13.092Z appoptics:patching patched http 
2021-09-13T19:13:13.134Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:13:13.135Z appoptics:patching patched fs 
2021-09-13T19:13:13.156Z appoptics:patching patched pg 8.3.3
2021-09-13T19:13:13.180Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (247ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (236ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.0
removed 1 package, updated 1 package and audited 1111 packages in 4.565s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:13:24.454Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:13:24.455Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:13:24.455Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:13:24.455Z appoptics:debug using context provider: ace-context
2021-09-13T19:13:24.504Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:13:24.536Z appoptics:patching patched crypto 
2021-09-13T19:13:24.553Z appoptics:patching patched https 
2021-09-13T19:13:24.554Z appoptics:patching patched http 
2021-09-13T19:13:24.594Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:13:24.594Z appoptics:patching patched fs 
2021-09-13T19:13:24.613Z appoptics:patching patched pg 8.4.0
2021-09-13T19:13:24.633Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (257ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.1
updated 1 package and audited 1111 packages in 4.635s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:13:35.853Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:13:35.854Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:13:35.854Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:13:35.855Z appoptics:debug using context provider: ace-context
2021-09-13T19:13:35.903Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:13:35.937Z appoptics:patching patched crypto 
2021-09-13T19:13:35.960Z appoptics:patching patched https 
2021-09-13T19:13:35.960Z appoptics:patching patched http 
2021-09-13T19:13:35.993Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:13:35.993Z appoptics:patching patched fs 
2021-09-13T19:13:36.014Z appoptics:patching patched pg 8.4.1
2021-09-13T19:13:36.035Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (39ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (248ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (256ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (990ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (242ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.2
updated 1 package and audited 1111 packages in 4.655s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:13:47.268Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:13:47.268Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:13:47.268Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:13:47.269Z appoptics:debug using context provider: ace-context
2021-09-13T19:13:47.319Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:13:47.351Z appoptics:patching patched crypto 
2021-09-13T19:13:47.369Z appoptics:patching patched https 
2021-09-13T19:13:47.374Z appoptics:patching patched http 
2021-09-13T19:13:47.406Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:13:47.406Z appoptics:patching patched fs 
2021-09-13T19:13:47.425Z appoptics:patching patched pg 8.4.2
2021-09-13T19:13:47.445Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1000ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (244ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (251ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (243ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.0
updated 1 package and audited 1111 packages in 4.635s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:13:58.632Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:13:58.633Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:13:58.633Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:13:58.633Z appoptics:debug using context provider: ace-context
2021-09-13T19:13:58.683Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:13:58.718Z appoptics:patching patched crypto 
2021-09-13T19:13:58.749Z appoptics:patching patched https 
2021-09-13T19:13:58.750Z appoptics:patching patched http 
2021-09-13T19:13:58.800Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:13:58.800Z appoptics:patching patched fs 
2021-09-13T19:13:58.819Z appoptics:patching patched pg 8.5.0
2021-09-13T19:13:58.845Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (246ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (244ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (251ms)
        ✓ should trace a basic query using callback (988ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (240ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (238ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.1
updated 1 package and audited 1111 packages in 4.758s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:14:10.249Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:14:10.249Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:14:10.250Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:14:10.250Z appoptics:debug using context provider: ace-context
2021-09-13T19:14:10.303Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:14:10.349Z appoptics:patching patched crypto 
2021-09-13T19:14:10.398Z appoptics:patching patched https 
2021-09-13T19:14:10.399Z appoptics:patching patched http 
2021-09-13T19:14:10.445Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:14:10.446Z appoptics:patching patched fs 
2021-09-13T19:14:10.472Z appoptics:patching patched pg 8.5.1
2021-09-13T19:14:10.495Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (250ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (253ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.6.0
updated 1 package and audited 1111 packages in 6.359s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:14:23.558Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:14:23.558Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:14:23.558Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:14:23.559Z appoptics:debug using context provider: ace-context
2021-09-13T19:14:23.625Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:14:23.663Z appoptics:patching patched crypto 
2021-09-13T19:14:23.682Z appoptics:patching patched https 
2021-09-13T19:14:23.683Z appoptics:patching patched http 
2021-09-13T19:14:23.749Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:14:23.750Z appoptics:patching patched fs 
2021-09-13T19:14:23.789Z appoptics:patching patched pg 8.6.0
2021-09-13T19:14:23.813Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (257ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (991ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (239ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.0
updated 1 package and audited 1111 packages in 4.779s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:14:35.691Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:14:35.691Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:14:35.691Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:14:35.692Z appoptics:debug using context provider: ace-context
2021-09-13T19:14:35.801Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:14:35.838Z appoptics:patching patched crypto 
2021-09-13T19:14:35.857Z appoptics:patching patched https 
2021-09-13T19:14:35.857Z appoptics:patching patched http 
2021-09-13T19:14:35.953Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:14:35.953Z appoptics:patching patched fs 
2021-09-13T19:14:35.997Z appoptics:patching patched pg 8.7.0
2021-09-13T19:14:36.027Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (999ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (249ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (255ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (253ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (994ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 1111 packages in 4.381s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
2021-09-13T19:14:47.168Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2021-09-13T19:14:47.169Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2021-09-13T19:14:47.169Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2021-09-13T19:14:47.170Z appoptics:debug using context provider: ace-context
2021-09-13T19:14:47.239Z appoptics:debug apm 10.0.1, bindings 11.0.0, oboe 10.1.0
2021-09-13T19:14:47.276Z appoptics:patching patched crypto 
2021-09-13T19:14:47.296Z appoptics:patching patched https 
2021-09-13T19:14:47.296Z appoptics:patching patched http 
2021-09-13T19:14:47.364Z appoptics:patching fs.realpath - adding native method
2021-09-13T19:14:47.364Z appoptics:patching patched fs 
2021-09-13T19:14:47.383Z appoptics:patching patched pg 8.7.1
2021-09-13T19:14:47.405Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (47ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (1001ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (247ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (254ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (242ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (245ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (252ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (240ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (989ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (241ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should trim long queries using a callback (258ms)
        ✓ should trim long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (5s)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 1111 packages in 4.481s

72 packages are looking for funding
  run `npm fund` for details

found 24 vulnerabilities (5 low, 4 moderate, 13 high, 2 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
